<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CH Blog | 기술 블로그</title>
    <link>https://chlee1001.github.io/</link>
    
    <atom:link href="https://chlee1001.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description>Chaehyeon&#39;s Dev Blog</description>
    <pubDate>Wed, 04 Aug 2021 01:38:44 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>2021년 08월 04일 수요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/04/21-08-04-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/04/21-08-04-IT_News/</guid>
      <pubDate>Wed, 04 Aug 2021 01:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-삼성도-‘K-메타버스-연합군’-합류했다…업계-“큰-도움-될-것”&quot;&gt;&lt;a href=&quot;#1-삼성도-‘K-메타버스-연합군’-합류했다…업계-“큰-도움-될-것”&quot; class=&quot;headerlink&quot; title=&quot;1. 삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”&quot;&gt;&lt;/a&gt;1. 삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=015&amp;aid=0004587072&quot;&gt;삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;삼성전자는 메타버스의 주요 구성 요소인 가상현실(VR)·증강현실(AR)·인공지능(AI) 등 기술 역량을 두루 갖추고 있으며, “업종·기업 간 ‘초협력’으로 혁신적인 메타버스 플랫폼을 만들자”는 취지로 결성된 메타버스 얼라이언스에 삼성전자가 합류했다. &lt;/p&gt;
&lt;p&gt;삼성전자가 얼라이언스에 참여한 것은 메타버스 산업의 성장세가 빨라 삼성도 준비가 필요하다는 판단에 따른 것으로 알려졌으며, 메타버스 산업엔 페이스북, 애플, 구글 등 글로벌 기업도 참전해 있는 상태다. 다만 삼성전자는 회사 자체적으로 메타버스 사업을 본격화하는지 여부에 대해서는 “다각도로 연구하는 단계일 뿐”이라고 했다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-삼성도-‘K-메타버스-연합군’-합류했다…업계-“큰-도움-될-것”"><a href="#1-삼성도-‘K-메타버스-연합군’-합류했다…업계-“큰-도움-될-것”" class="headerlink" title="1. 삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”"></a>1. 삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=015&aid=0004587072">삼성도 ‘K-메타버스 연합군’ 합류했다…업계 “큰 도움 될 것”</a></p><p>삼성전자는 메타버스의 주요 구성 요소인 가상현실(VR)·증강현실(AR)·인공지능(AI) 등 기술 역량을 두루 갖추고 있으며, “업종·기업 간 ‘초협력’으로 혁신적인 메타버스 플랫폼을 만들자”는 취지로 결성된 메타버스 얼라이언스에 삼성전자가 합류했다. </p><p>삼성전자가 얼라이언스에 참여한 것은 메타버스 산업의 성장세가 빨라 삼성도 준비가 필요하다는 판단에 따른 것으로 알려졌으며, 메타버스 산업엔 페이스북, 애플, 구글 등 글로벌 기업도 참전해 있는 상태다. 다만 삼성전자는 회사 자체적으로 메타버스 사업을 본격화하는지 여부에 대해서는 “다각도로 연구하는 단계일 뿐”이라고 했다.</p><hr><h2 id="2-팩플-“노른자위-자리-꿰찼다”…카톡-카카오뷰-View-출시"><a href="#2-팩플-“노른자위-자리-꿰찼다”…카톡-카카오뷰-View-출시" class="headerlink" title="2. [팩플] “노른자위 자리 꿰찼다”…카톡, 카카오뷰(View) 출시"></a>2. [팩플] “노른자위 자리 꿰찼다”…카톡, 카카오뷰(View) 출시</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=025&aid=0003123966">[팩플] “노른자위 자리 꿰찼다”…카톡, 카카오뷰(View) 출시</a></p><p><img src="https://imgnews.pstatic.net/image/025/2021/08/03/0003123966_001_20210803180803630.jpg?type=w647"></p><p>카카오톡의 신규 서비스 ‘카카오뷰(View)’가 3일 출시됐다. 카톡 하단 메뉴 한가운데 위치하던 샵(#)탭 자리를 새로운 콘텐트 큐레이션 서비스인 뷰(view)가 대체하는 것.</p><p>2018년 출시한 #탭은 뉴스 편집권 등 논란에 휩싸이며 수차례 개편 논의가 있었고, 2019년 10월 카톡 샵탭의 실검 폐지를 선언한 조수용 대표는 당시 “언론사를 구독하는 방식이 아닌 세상에 제공된 다양한 콘텐트를 개인이 재구성하도록 할 것”이라고 밝혔다. </p><p>카카오뷰는 브런치·카카오TV·티스토리 등 카카오 서비스를 모아 보는 플랫폼이 생긴 셈으로 카톡 트래픽이 각종 카카오 서비스로 연결되는 시너지 효과가 생긴다. 그리고 외부 페이지로 연결 되는 아웃링크를 허용해 창작자 입장에선 큰 품 들지 않고 새로운 콘텐트 유통 채널로 활용하기 쉽다.</p><hr><h2 id="3-구글-자체-칩-탑재한-픽셀6-공개…”칩-제작만-4년-우리가-상상했던-스마트폰”"><a href="#3-구글-자체-칩-탑재한-픽셀6-공개…”칩-제작만-4년-우리가-상상했던-스마트폰”" class="headerlink" title="3. 구글, 자체 칩 탑재한 픽셀6 공개…”칩 제작만 4년, 우리가 상상했던 스마트폰”"></a>3. 구글, 자체 칩 탑재한 픽셀6 공개…”칩 제작만 4년, 우리가 상상했던 스마트폰”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=469&aid=0000621598">구글, 자체 칩 탑재한 픽셀6 공개…”칩 제작만 4년, 우리가 상상했던 스마트폰”</a></p><p><img src="https://imgnews.pstatic.net/image/469/2021/08/03/0000621598_001_20210804061145666.jpg?type=w647" alt="구글은 3일 올가을 선보일 픽셀6와 픽셀6프로에 자체 설계한 &#39;텐서(Tensor)&#39; 칩을 탑재할 것이라고 밝혔다. 사진은 구글이 자체 제작한 시스템온칩 텐서. 구글 블로그 캡처"></p><p>세계 최대 검색엔진 기업인 구글이 10월 선보일 차기 스마트폰 픽셀6 시리즈에 자체 제작한 ‘프로세서 칩’을 탑재한다. 구글의 AI 기술 역량을 이번 모바일 텐서칩에 녹여냈다는 게 외신의 평가다.</p><p>한편 구글이 자사 스마트폰에 투입해온 퀄컴의 칩을 버리고 프로세서 칩을 자체 제작했다고 밝히면서 이날 퀄컴 주가는 소폭 하락했지만, 칩에 대한 구글의 ‘홀로서기’까지엔 시간이 더 필요할 전망으로 SoC를 구성하는 여러 요소 중 AI 기능을 돕는 모바일 TPU는 구글이 설계했지만, 나머지 핵심 장치인 중앙처리장치(CPU), 그래픽처리장치(GPU) 등은 아직까지 자체 설계 기술을 확보하지 못한 것으로 알려졌다. </p><hr><h2 id="4-LGU-가상세계서-AOMG-비대면-콘서트-개최"><a href="#4-LGU-가상세계서-AOMG-비대면-콘서트-개최" class="headerlink" title="4. LGU+, 가상세계서 AOMG 비대면 콘서트 개최"></a>4. LGU+, 가상세계서 AOMG 비대면 콘서트 개최</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=138&aid=0002108082">LGU+, 가상세계서 AOMG 비대면 콘서트 개최</a></p><p>LG유플러스(대표 황현식)는 힙합 레이블 ‘AOMG(대표 박재범)’와 비대면 ‘확장현실(XR) 콘서트’를 선보인다고 4일 밝혔다. 통신사와 힙합 레이블이 협업하는 증강현실(AR) 온라인 공연은 국내 처음으로, 이번 콘서트에서 관람객은 AOMG 소속 아티스트 ‘사이먼 도미닉’ 등이 마치 영화 속 한 장면처럼 가상세계를 오가는 듯 펼치는 초실감형 공연을 감상할 수 있게 된다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%EA%B8%80/">구글</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%A9%94%ED%83%80%EB%B2%84%EC%8A%A4/">메타버스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4/">카카오</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%82%BC%EC%84%B1%EC%A0%84%EC%9E%90/">삼성전자</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%EB%B7%B0/">카카오뷰</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%85%90%EC%84%9C/">텐서</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%94%BD%EC%85%80/">픽셀</category>
      
      <category domain="https://chlee1001.github.io/tags/XR/">XR</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%99%95%EC%9E%A5%ED%98%84%EC%8B%A4/">확장현실</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B0%80%EC%83%81%EC%84%B8%EA%B3%84/">가상세계</category>
      
      <category domain="https://chlee1001.github.io/tags/AOMG/">AOMG</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/04/21-08-04-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 02일 월요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/02/21-08-02-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/02/21-08-02-IT_News/</guid>
      <pubDate>Mon, 02 Aug 2021 02:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-“코로나-후-데이터-유출피해-사상-최고액”&quot;&gt;&lt;a href=&quot;#1-“코로나-후-데이터-유출피해-사상-최고액”&quot; class=&quot;headerlink&quot; title=&quot;1. “코로나 후 데이터 유출피해 사상 최고액”&quot;&gt;&lt;/a&gt;1. “코로나 후 데이터 유출피해 사상 최고액”&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=277&amp;aid=0004947230&quot;&gt;“코로나 후 데이터 유출피해 사상 최고액”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2일 IBM이 지난해 5월부터 올해 3월까지 세계 500여개 기업·조직을 대상으로 한 조사에 따르면 데이터 유출 사고 평균 피해액은 지난 조사보다 약 10% 증가한 평균 424만달러(약 48억8000만원)였다.&lt;/p&gt;
&lt;p&gt;이 가운데 국내 기업 28곳의 피해액은 평균 41억1000만원으로 집계됐고, 한국에서 가장 큰 피해를 본 업종은 금융업이었고, 서비스와 정보통신(IT) 분야가 뒤를 이었다. 그리고 사용자 인증 정보를 도용한 공격 방식이 가장 많았으며 클라우드 구성 오류나 피싱 등도 있었으며, 피해액이 가장 컸던 공격법은 비즈니스 이메일 유출로, 평균 피해액이 67억6000만원에 달했다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-“코로나-후-데이터-유출피해-사상-최고액”"><a href="#1-“코로나-후-데이터-유출피해-사상-최고액”" class="headerlink" title="1. “코로나 후 데이터 유출피해 사상 최고액”"></a>1. “코로나 후 데이터 유출피해 사상 최고액”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=277&aid=0004947230">“코로나 후 데이터 유출피해 사상 최고액”</a></p><p>2일 IBM이 지난해 5월부터 올해 3월까지 세계 500여개 기업·조직을 대상으로 한 조사에 따르면 데이터 유출 사고 평균 피해액은 지난 조사보다 약 10% 증가한 평균 424만달러(약 48억8000만원)였다.</p><p>이 가운데 국내 기업 28곳의 피해액은 평균 41억1000만원으로 집계됐고, 한국에서 가장 큰 피해를 본 업종은 금융업이었고, 서비스와 정보통신(IT) 분야가 뒤를 이었다. 그리고 사용자 인증 정보를 도용한 공격 방식이 가장 많았으며 클라우드 구성 오류나 피싱 등도 있었으며, 피해액이 가장 컸던 공격법은 비즈니스 이메일 유출로, 평균 피해액이 67억6000만원에 달했다.</p><hr><h2 id="2-네이버-올-1-7월-AI-논문-51개-채택…매년-기록-경신"><a href="#2-네이버-올-1-7월-AI-논문-51개-채택…매년-기록-경신" class="headerlink" title="2. 네이버, 올 1~7월 AI 논문 51개 채택…매년 기록 경신"></a>2. 네이버, 올 1~7월 AI 논문 51개 채택…매년 기록 경신</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=003&aid=0010642272">네이버, 올 1~7월 AI 논문 51개 채택…매년 기록 경신</a></p><p>네이버는 세계적인 인공지능(AI) 학회에서 올 들어 7월까지 총 51건의 정규 논문이 채택됐다고 2일 밝혔으며, 이중 상반기에만 43건의 논문이 등재돼 작년 한 해 논문 발표 기록 43편을 반 년만에 따라잡았다.</p><p>네이버는 또 학회에 채택된 논문 중 40% 이상은 네이버의 실제 서비스에 다양하게 적용돼, 사용자 경험을 높이는데도 크게 기여했다고 전했고,  특히 음성 분야의 최고 학회인 ICASSP와 Interspeech에서는 각각 9개의 논문이 채택되는 성과와 가장 최근에는 최고 권위의 컴퓨터비전 학회인 ICCV에서 8개의 논문의 발표가 확정돼, 비전 분야에서 기술력을 인정받기도 했다.</p><hr><h2 id="3-토스-‘송금-수수료’-오늘부터-완전-무료"><a href="#3-토스-‘송금-수수료’-오늘부터-완전-무료" class="headerlink" title="3. 토스 ‘송금 수수료’, 오늘부터 완전 무료"></a>3. 토스 ‘송금 수수료’, 오늘부터 완전 무료</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=293&aid=0000035803">토스 ‘송금 수수료’, 오늘부터 완전 무료</a></p><p><img src="https://imgnews.pstatic.net/image/293/2021/08/02/0000035803_001_20210802112109727.jpg?type=w647" alt="△토스의 송금 수수료 무료 선언이 동종업계에 영향을 미치게 될지 관심이다.(사진=토스)"></p><p>기존에는 토스도 월 10회에 한해서만 수수료를 무료로 지원해왔으나, 오는 9월 토스뱅크 출범을 앞두고 차별화된 경쟁력을 확보하기 위해 모든 고객에게 송금 수수료 ‘평생무료’ 혜택을 부여하는 결정을 내렸다. 토스는 송금·결제·투자·보험 등 고객이 필요로 하는 모든 금융 경험을 토스 앱 하나로 제공한다는 이른바 ‘금융의 슈퍼앱(Super App)’ 비전을 제시해오고 있다.</p><p>한편 간편송금 시장 규모는 매년 급증하고 있으며 한국은행에 따르면 지난해 간편송금 서비스 이용액이 일 평균 3565억원(연 환산 약130조)으로, 이 가운데 92%가 토스와 같은 전자금융업자를 통해 이뤄지고 있다. </p><hr><h2 id="4-카카오-이어-네이버쇼핑도…‘대세는-구독’"><a href="#4-카카오-이어-네이버쇼핑도…‘대세는-구독’" class="headerlink" title="4. 카카오 이어 네이버쇼핑도…‘대세는 구독’"></a>4. 카카오 이어 네이버쇼핑도…‘대세는 구독’</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=293&aid=0000035795">카카오 이어 네이버쇼핑도…‘대세는 구독’</a></p><p>지난 7월 30일 네이버는 8월부터 스마트스토어에 입점한 생필품·식품·키즈·뷰티·디지털·건강·꽃배달 상품을 대상으로 정기구독 서비스를 지원한다고 밝혔고, 스마트스토어 판매자들에게 △사전 고객 알림 △자동결제 △배송주기 설정 기능을 활용할 수 있는 시스템을 제공하는 것이 골자다. </p><p>앞서 카카오도 구독시장에 진출했다. 월 4900원에 카카오톡 이모티콘을 무제한 사용하는 ‘이모티콘 플러스’, 클라우드 서비스인 ‘톡서랍 서비스’ 등도 운영 중이며, 지난달에는 다양한 상품·서비스 등을 정기구독할 수 있는 플랫폼 ‘구독 온(ON)’을 정식으로 내놨다. </p><p>이들이 구독경제 시장을 넘보는 이유는 성장성 때문으로 정기적으로 제품·서비스를 결제하기 때문에 ‘캐시카우’으로 삼을 수 있고, 사용자를 붙잡아 두는 ‘록인(Lock-in·묶어두기)효과’도 노릴 수 있다. 시장 전망도 밝다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4/">카카오</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%86%A0%EC%8A%A4/">토스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%EB%8F%85/">구독</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9C%A0%EC%B6%9C/">데이터유출</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%82%AC%EC%9A%A9%EC%9E%90%EC%9D%B8%EC%A6%9D/">사용자인증</category>
      
      <category domain="https://chlee1001.github.io/tags/AI%EB%85%BC%EB%AC%B8/">AI논문</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%86%A1%EA%B8%88/">송금</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/02/21-08-02-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring Boot] 스프링부트 기초개념-Spring의 동작원리2</title>
      <link>https://chlee1001.github.io/2021/07/31/SPRINGBOOT-Study4-21-07-31/</link>
      <guid>https://chlee1001.github.io/2021/07/31/SPRINGBOOT-Study4-21-07-31/</guid>
      <pubDate>Fri, 30 Jul 2021 15:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_4.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_5.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_6.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_7.png&quot;&gt;&lt;/p&gt;
</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_4.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_5.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_6.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_7.png"></p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/categories/Programming/Spring-Boot/">Spring Boot</category>
      
      
      <category domain="https://chlee1001.github.io/tags/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://chlee1001.github.io/tags/Java/">Java</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring/">Spring</category>
      
      <category domain="https://chlee1001.github.io/tags/JPA/">JPA</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%86%B0%EC%BA%A3/">톰캣</category>
      
      <category domain="https://chlee1001.github.io/tags/WAS/">WAS</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/31/SPRINGBOOT-Study4-21-07-31/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 07월 30일 금요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/07/30/21-07-30-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/07/30/21-07-30-IT_News/</guid>
      <pubDate>Fri, 30 Jul 2021 01:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-30일부터-핀테크-기업-선불충전금-정보-등-개방&quot;&gt;&lt;a href=&quot;#1-30일부터-핀테크-기업-선불충전금-정보-등-개방&quot; class=&quot;headerlink&quot; title=&quot;1. 30일부터 핀테크 기업 선불충전금 정보 등 개방&quot;&gt;&lt;/a&gt;1. 30일부터 핀테크 기업 선불충전금 정보 등 개방&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.digitaltoday.co.kr/news/articleView.html?idxno=411325&quot;&gt;30일부터 핀테크 기업 선불충전금 정보 등 개방&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;금융위원회, 금융결제원, 핀테크산업협회은 30일부터 주요 은행, 우체국 앱에서도 본인이 보유한 핀테크 기업의 선불충전금 목록, 거래내역 등을 확인할 수 있게 된다고 28일 밝혔다. 금융위는 23개 핀테크 기업(토스, 네이버페이, 카카오페이 등)의 선불충전금 정보가 우선 조회 가능하며 나머지 회사의 선불충전금 정보도 8월말까지 순차적으로 제공될 예정이라고 설명했다.&lt;/p&gt;
&lt;p&gt;이에 맞추어 기존에 금융회사만 이용 가능했던 어카운트인포 서비스도 핀테크 기업이 이용할 수 있도록 개방되며,. 핀테크 기업의 고객들도 오픈뱅킹에 계좌 등록 시 일일이 계좌를 입력할 필요 없이 전 금융회사의 본인계좌를 자동 조회 및 일괄 등록이 가능해진다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-30일부터-핀테크-기업-선불충전금-정보-등-개방"><a href="#1-30일부터-핀테크-기업-선불충전금-정보-등-개방" class="headerlink" title="1. 30일부터 핀테크 기업 선불충전금 정보 등 개방"></a>1. 30일부터 핀테크 기업 선불충전금 정보 등 개방</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=411325">30일부터 핀테크 기업 선불충전금 정보 등 개방</a></p><p>금융위원회, 금융결제원, 핀테크산업협회은 30일부터 주요 은행, 우체국 앱에서도 본인이 보유한 핀테크 기업의 선불충전금 목록, 거래내역 등을 확인할 수 있게 된다고 28일 밝혔다. 금융위는 23개 핀테크 기업(토스, 네이버페이, 카카오페이 등)의 선불충전금 정보가 우선 조회 가능하며 나머지 회사의 선불충전금 정보도 8월말까지 순차적으로 제공될 예정이라고 설명했다.</p><p>이에 맞추어 기존에 금융회사만 이용 가능했던 어카운트인포 서비스도 핀테크 기업이 이용할 수 있도록 개방되며,. 핀테크 기업의 고객들도 오픈뱅킹에 계좌 등록 시 일일이 계좌를 입력할 필요 없이 전 금융회사의 본인계좌를 자동 조회 및 일괄 등록이 가능해진다.</p><hr><h2 id="2-핀다-새로운-CI·UX-도입…”기존-금융권과-차별화”"><a href="#2-핀다-새로운-CI·UX-도입…”기존-금융권과-차별화”" class="headerlink" title="2. 핀다, 새로운 CI·UX 도입…”기존 금융권과 차별화”"></a>2. 핀다, 새로운 CI·UX 도입…”기존 금융권과 차별화”</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=411499">핀다, 새로운 CI·UX 도입…”기존 금융권과 차별화”</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202107/411499_406100_4329.jpg" alt="핀다는 새로 바꾼 사용자경험(UX) 모습 [이미지: 핀다]"></p><p>핀다의 기업 CI는 곡선, 볼드, 심플 세 가지 키워드로 정리되며 곡선 디자인은 전통 금융에 대한 허들을 낮춰 접근이 쉬운 핀테크의 부드러움을 내포하며, 볼드 디자인은 핀테크 기업으로서 믿을 수 있는 전문가의 이미지를 담았고, 심플함은 직관적이고 간편한 핀다 서비스의 본질을 반영했다.</p><p>사용자와의 지속적인 소통을 위한 UX도 새롭게 선보였으며, UX는 크게 메인 화면, 알림 탭, 더보기로 구성되고 메인 화면에는 핀다의 주요 서비스인 비교대출과 대출관리 서비스가 함께 담겨 가장 좋은 대출 한 번에 받기, 나를 위한 대출관리 등으로 리뉴얼됐다.</p><hr><h2 id="3-초대규모AI가-상품평-한-줄-요약…-네이버-‘Ai리뷰-요약’-선봬"><a href="#3-초대규모AI가-상품평-한-줄-요약…-네이버-‘Ai리뷰-요약’-선봬" class="headerlink" title="3. 초대규모AI가 상품평 한 줄 요약… 네이버, ‘Ai리뷰 요약’ 선봬"></a>3. 초대규모AI가 상품평 한 줄 요약… 네이버, ‘Ai리뷰 요약’ 선봬</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=417&aid=0000720173">초대규모AI가 상품평 한 줄 요약… 네이버, ‘Ai리뷰 요약’ 선봬</a></p><p><img src="https://imgnews.pstatic.net/image/417/2021/07/30/0000720173_001_20210730102313047.png?type=w647" alt="네이버 스마트스토어에 AI 기반 리뷰 요약 기능이 적용됐다. /사진제공=네이버"></p><p>네이버는 스마트스토어 내 상품 리뷰를 분석해 대표적인 제품 특성을 한 줄의 문장으로 추출하는 ‘Ai리뷰 요약’ 기능을 선보인다고 30일 밝혔으며, ‘Ai리뷰 요약’은 국내 최초 초대규모(Hyperscale) 인공지능(AI) ‘하이퍼클로바’ 기반으로 제공된다.</p><p>그동안 국내외 쇼핑서비스가 상품 리뷰에 필터를 적용하거나 일부를 선별해 상단에 보여주는 데 그친 것과 달리 ‘하이퍼클로바’가 방대한 리뷰를 분석해 하나의 자연스러운 문장으로 만들어 낸다. 이로써 사용자가 여러 리뷰를 읽지 않아도 실구매자들의 상품평가를 한눈에 파악할 수 있다는 설명이다.</p><hr><h2 id="4-도토리-충전은-다날로…-싸이월드와-전략적-제휴·투자-계약"><a href="#4-도토리-충전은-다날로…-싸이월드와-전략적-제휴·투자-계약" class="headerlink" title="4. 도토리 충전은 다날로… 싸이월드와 전략적 제휴·투자 계약"></a>4. 도토리 충전은 다날로… 싸이월드와 전략적 제휴·투자 계약</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=417&aid=0000720200">도토리 충전은 다날로… 싸이월드와 전략적 제휴·투자 계약</a></p><p> 다날은 싸이월드제트에 재무적 투자자(FI))로 참여하면서 싸이월드 내 결제수단인 ‘도토리’ 결제·충전 등 전자결제 대행을 맡게 되고 이에 따라 결제 시스템 구축에 들어갔으며 앞으로 결제 관련 기술지원을 제공할 예정이다.</p><p>최근 다날이 투자한 배달대행 플랫폼 기업 만나코퍼레이션과 싸이월드제트 간 협업도 논의하며, 메타버스 싸이월드에서 주문한 상품을 실제 오프라인에서 받아볼 수 있도록 배송 서비스를 지원하는 방안 등을 검토할 계획이고 이밖에 싸이월드 BGM(배경음악)서비스에도 다날의 자회사 다날엔터테인먼트가 보유한 10만여곡의 저작권이 도움이 될 전망이다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8B%B8%EC%9D%B4%EC%9B%94%EB%93%9C/">싸이월드</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B8%88%EC%9C%B5/">금융</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%80%ED%85%8C%ED%81%AC/">핀테크</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%98%EC%9D%B4%ED%8D%BC%ED%81%B4%EB%A1%9C%EB%B0%94/">하이퍼클로바</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%84%A0%EB%B6%88%EC%B6%A9%EC%A0%84%EA%B8%88/">선불충전금</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%98%A4%ED%94%88%EB%B1%85%ED%82%B9/">오픈뱅킹</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%80%EB%8B%A4/">핀다</category>
      
      <category domain="https://chlee1001.github.io/tags/AI%EB%A6%AC%EB%B7%B0/">AI리뷰</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8B%A4%EB%82%A0/">다날</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/30/21-07-30-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[RPI] 라즈베리파이에서 CRIU 작동시키기</title>
      <link>https://chlee1001.github.io/2021/07/29/RASP-CRIU-21-07-29/</link>
      <guid>https://chlee1001.github.io/2021/07/29/RASP-CRIU-21-07-29/</guid>
      <pubDate>Thu, 29 Jul 2021 14:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;라즈베리파이, OS, Kernel, Docker, Criu… 이 다섯개의 각 버전들은 매우 다양하며 checkpoint와 restore 기능이 작동하는 적당한 버전을 찾기까지 많은 노가다 작업이 있었다.&lt;/p&gt;
&lt;h2 id=&quot;사용-버전&quot;&gt;&lt;a href=&quot;#사용-버전&quot; class=&quot;headerlink&quot; title=&quot;사용 버전&quot;&gt;&lt;/a&gt;사용 버전&lt;/h2&gt;&lt;h4 id=&quot;기기-라즈베리파이-3B&quot;&gt;&lt;a href=&quot;#기기-라즈베리파이-3B&quot; class=&quot;headerlink&quot; title=&quot;기기: 라즈베리파이 3B&quot;&gt;&lt;/a&gt;기기: 라즈베리파이 3B&lt;/h4&gt;&lt;h4 id=&quot;OS-Ubuntu-Mate-16-04-2&quot;&gt;&lt;a href=&quot;#OS-Ubuntu-Mate-16-04-2&quot; class=&quot;headerlink&quot; title=&quot;OS: Ubuntu Mate 16.04.2&quot;&gt;&lt;/a&gt;OS: Ubuntu Mate 16.04.2&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://releases.ubuntu-mate.org/archived/&quot;&gt;라즈베리파이용 우분투 마테 Archive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>라즈베리파이, OS, Kernel, Docker, Criu… 이 다섯개의 각 버전들은 매우 다양하며 checkpoint와 restore 기능이 작동하는 적당한 버전을 찾기까지 많은 노가다 작업이 있었다.</p><h2 id="사용-버전"><a href="#사용-버전" class="headerlink" title="사용 버전"></a>사용 버전</h2><h4 id="기기-라즈베리파이-3B"><a href="#기기-라즈베리파이-3B" class="headerlink" title="기기: 라즈베리파이 3B"></a>기기: 라즈베리파이 3B</h4><h4 id="OS-Ubuntu-Mate-16-04-2"><a href="#OS-Ubuntu-Mate-16-04-2" class="headerlink" title="OS: Ubuntu Mate 16.04.2"></a>OS: Ubuntu Mate 16.04.2</h4><ul><li><a href="https://releases.ubuntu-mate.org/archived/">라즈베리파이용 우분투 마테 Archive</a></li></ul><h4 id="Kernel-rpi-4-12-y"><a href="#Kernel-rpi-4-12-y" class="headerlink" title="Kernel: rpi-4.12.y"></a>Kernel: <a href="https://github.com/raspberrypi/linux/tree/rpi-4.12.y">rpi-4.12.y</a></h4><h4 id="Docker-version-17-06-0-CE"><a href="#Docker-version-17-06-0-CE" class="headerlink" title="Docker version: 17.06.0~CE"></a>Docker version: 17.06.0~CE</h4><ul><li><a href="https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/armhf/">라즈베리파이용(armhf) 도커 Archive</a></li></ul><h4 id="Criu-version-3-11"><a href="#Criu-version-3-11" class="headerlink" title="Criu version: 3.11"></a>Criu version: 3.11</h4><ul><li><a href="https://download.openvz.org/criu/">criu Archive</a></li></ul><hr><h1 id="작업"><a href="#작업" class="headerlink" title="작업"></a>작업</h1><h2 id="1-기기에-OS설치"><a href="#1-기기에-OS설치" class="headerlink" title="1. 기기에 OS설치"></a>1. 기기에 OS설치</h2><p>라즈베리파이 3B버전을 이용한 이유는 Ubuntu Mate 16.04버전이 4B버전을 지원하지 않아서다.</p><p><img src="https://chlee1001.github.io/images/posts/rpi/ubuntu_mate_version.png"></p><p>16.04버전을 사용하려는 이유를 대충 요약하자면 criu를 사용할 때, 안정적으로 동작한 Docker의 버전은 17.X이였고, 이 버전은 우분투 18.X 버전부터 정상적으로 동작하지 않았다. 그래서 16.04를 사용한다.</p><h2 id="2-Docker-설치"><a href="#2-Docker-설치" class="headerlink" title="2. Docker 설치"></a>2. Docker 설치</h2><p>wget을 이용하여 다운, dpkg를 이용하여 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/armhf/docker-ce_17.06.0~ce-0~ubuntu_armhf.deb</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> dpkg -i docker-ce_17.06.0~ce-0~ubuntu_armhf.deb</span></span><br></pre></td></tr></table></figure><h2 id="3-Criu-설치"><a href="#3-Criu-설치" class="headerlink" title="3. Criu 설치"></a>3. Criu 설치</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install criu</span><br></pre></td></tr></table></figure><p>위 코드로도 설치가 가능하나,  아래로 설치하겠음. (특정 버전 설치를 위함)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -O -sSL http://download.openvz.org/criu/criu-3.11.tar.bz2</span><br><span class="line">tar xjf criu-3.11.tar.bz2 </span><br><span class="line"><span class="built_in">cd</span> criu-3.11</span><br><span class="line">make</span><br><span class="line">cp ./criu/criu /usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><h2 id="4-Kernel-config-수정"><a href="#4-Kernel-config-수정" class="headerlink" title="4. Kernel config 수정"></a>4. Kernel config 수정</h2><p>커널의 설정을 <a href="https://criu.org/Linux_kernel">criu linux kernel</a> 이 사이트대로 수정해야하지만, 이것은 x86_64 용인 것같고, arm용으로 설정을 약간 더 손봤다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CONFIG_CHECKPOINT_RESTORE=y</span><br><span class="line">CONFIG_NAMESPACES=y </span><br><span class="line">CONFIG_UTS_NS=y</span><br><span class="line">CONFIG_IPC_NS=y</span><br><span class="line">CONFIG_SYSVIPC_SYSCTL=y</span><br><span class="line">CONFIG_PID_NS=y</span><br><span class="line">CONFIG_NET_NS=y </span><br><span class="line">CONFIG_FHANDLE=y </span><br><span class="line">CONFIG_EVENTFD=y </span><br><span class="line">CONFIG_EPOLL=y </span><br><span class="line">CONFIG_UNIX_DIAG=y </span><br><span class="line">CONFIG_INET_DIAG=y</span><br><span class="line">CONFIG_INET_UDP_DIAG=m</span><br><span class="line">CONFIG_PACKET_DIAG=y</span><br><span class="line">CONFIG_NETLINK_DIAG=y</span><br><span class="line">CONFIG_NETFILTER_XT_MARK=m</span><br><span class="line">CONFIG_TUN=y</span><br><span class="line"></span><br><span class="line">CONFIG_PROC_PAGE_MONITOR=y</span><br><span class="line">CONFIG_VDSO=n</span><br><span class="line">CONFIG_IDLE_PAGE_TRACKING=y</span><br></pre></td></tr></table></figure><p><a href="https://github.com/checkpoint-restore/criu/issues/446">참고</a></p><p>라즈베리파이… ARM는 soft-dirty기능을 미지원 à “CONFIG_MEM_SOFT_DIRTY”가 없음</p><p>대신 “CONFIG_PROC_PAGE_MONITOR=y” 이는 Dumpee 메모리 레이아웃에 대한 정보를 얻기 위해 필요하다고 함.</p><p>그리고 ARM에는 VDSO라는 매개변수가 없으므로 “CONFIG_VDSO=n” 셋팅을 해야 VDSO 때문에 덤프가 실패하는 것을 피할 수 있음. à 비활성화 시, signal trampoline(?)이 ARM의 VDSO페이지가 아닌 SIG페이지에 자동으로 배치됨.</p><p>컴파일 후에 적용하고 재부팅을 하면 기본 설정은 끝이다.</p><hr><h1 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h1><p>docker와 busy box를 이용하여 체크포인트와 복구를 테스트</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --name counter busybox /bin/sh -c &#x27;i=0; while true; do echo $i; i=$(expr $i + 1); sleep 1; done&#x27;</span><br><span class="line"></span><br><span class="line">sudo docker checkpoint create counter cp1</span><br><span class="line"></span><br><span class="line">sudo docker start -a --checkpoint cp1 counter</span><br></pre></td></tr></table></figure><p><a href="https://youtu.be/HsE7zlBa_Qw"><img src="https://chlee1001.github.io/images/posts/rpi/criu_test_1.png" alt="테스트영상"></a> </p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Linux/">Linux</category>
      
      <category domain="https://chlee1001.github.io/categories/Linux/Raspberry-Pi/">Raspberry Pi</category>
      
      
      <category domain="https://chlee1001.github.io/tags/Docker/">Docker</category>
      
      <category domain="https://chlee1001.github.io/tags/RPI/">RPI</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://chlee1001.github.io/tags/CRIU/">CRIU</category>
      
      <category domain="https://chlee1001.github.io/tags/container/">container</category>
      
      <category domain="https://chlee1001.github.io/tags/checkpoint/">checkpoint</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/29/RASP-CRIU-21-07-29/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 07월 28일 수요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/07/28/21-07-28-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/07/28/21-07-28-IT_News/</guid>
      <pubDate>Wed, 28 Jul 2021 02:30:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-2분기-스팸건수-1분기보다-9만건-↑…대출·보험-유형&quot;&gt;&lt;a href=&quot;#1-2분기-스팸건수-1분기보다-9만건-↑…대출·보험-유형&quot; class=&quot;headerlink&quot; title=&quot;1. 2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형&quot;&gt;&lt;/a&gt;1. 2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=277&amp;aid=0004944731&quot;&gt;2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/277/2021/07/28/0004944731_001_20210728105009857.jpg?type=w647&quot;&gt;&lt;/p&gt;
&lt;p&gt;스팸 차단 애플리케이션 ‘후후’를 제공하는 후후앤컴퍼니는 2021년 2분기 후후 이용자들이 신고한 스팸 통계를 28일 발표했고, 전분기 대비 9만여건 증가한 692만건의 스팸 신고가 접수됐다. 주식·투자, 불법게임·도박 관련 스팸은 줄었지만, 대출·보험 가입 권유형 스팸이 급격히 늘었다.&lt;/p&gt;
&lt;p&gt;개별 스팸 내용을 질적으로 분석해 본 결과 금융기관을 사칭해 대출·보험 등 금융 상품 상담을 명목으로 전화를 유도하는 수법이 증가했고금융과 전혀 관계 없는 보이스피싱 집단도 금융기관의 이름을 사칭할 수 있는 만큼 고객들의 세심한 주의가 필요하다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-2분기-스팸건수-1분기보다-9만건-↑…대출·보험-유형"><a href="#1-2분기-스팸건수-1분기보다-9만건-↑…대출·보험-유형" class="headerlink" title="1. 2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형"></a>1. 2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=277&aid=0004944731">2분기 스팸건수, 1분기보다 9만건 ↑…대출·보험 유형</a></p><p><img src="https://imgnews.pstatic.net/image/277/2021/07/28/0004944731_001_20210728105009857.jpg?type=w647"></p><p>스팸 차단 애플리케이션 ‘후후’를 제공하는 후후앤컴퍼니는 2021년 2분기 후후 이용자들이 신고한 스팸 통계를 28일 발표했고, 전분기 대비 9만여건 증가한 692만건의 스팸 신고가 접수됐다. 주식·투자, 불법게임·도박 관련 스팸은 줄었지만, 대출·보험 가입 권유형 스팸이 급격히 늘었다.</p><p>개별 스팸 내용을 질적으로 분석해 본 결과 금융기관을 사칭해 대출·보험 등 금융 상품 상담을 명목으로 전화를 유도하는 수법이 증가했고금융과 전혀 관계 없는 보이스피싱 집단도 금융기관의 이름을 사칭할 수 있는 만큼 고객들의 세심한 주의가 필요하다.</p><hr><h2 id="2-네이버-쇼핑에-AI-‘하이퍼클로바’-적용…“상품명-자동-교정”"><a href="#2-네이버-쇼핑에-AI-‘하이퍼클로바’-적용…“상품명-자동-교정”" class="headerlink" title="2. 네이버 쇼핑에 AI ‘하이퍼클로바’ 적용…“상품명 자동 교정”"></a>2. 네이버 쇼핑에 AI ‘하이퍼클로바’ 적용…“상품명 자동 교정”</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=411212">네이버 쇼핑에 AI ‘하이퍼클로바’ 적용…“상품명 자동 교정”</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202107/411212_405983_3517.png" alt="하이퍼클로바 [사진: 네이버]"></p><p>네이버에 따르면 상품 코드나 상세 스펙, 이벤트 내용 등 많은 정보가 포함돼 복잡하고 긴 상품명이 쇼핑판에 노출되는 경우 이를 직관적이고 쉬운 상품명으로 하이퍼클로바가 자동 교정한다. 예를 들면 ‘0000(브랜드명) 남성 21SS 천연소가죽 멀티라인 슬림 댄디 스니커즈 FQKD1314GRT’와 같은 긴 상품명을 ‘0000(브랜드명) 천연소가죽 스니커즈’로 자동 변환해 사용자에게 노출하는 방식이다.</p><p>이밖에도 하이퍼클로바를 활용해 수천, 수만개의 쇼핑 리뷰를 한줄로 요약해주는 쇼핑 리뷰 요약 시스템도 서비스 적용을 앞두고 있다.</p><ul><li>네이버 관계자는 “하이퍼클로바는 방대한 한국어 학습량을 기반으로 스스로 핵심 내용을 요약하고 새로운 문장을 생성하는 데 뛰어난 능력을 보이고 있다”며 “이를 바탕으로 마치 사람이 큐레이션을 위해 문구를 작성한 것처럼 상품명을 교정할 수 있다”고 말했다.</li></ul><hr><h2 id="3-야놀자-고속버스-예매-서비스-오픈…”여행-슈퍼앱-전략-가속”"><a href="#3-야놀자-고속버스-예매-서비스-오픈…”여행-슈퍼앱-전략-가속”" class="headerlink" title="3. 야놀자, 고속버스 예매 서비스 오픈…”여행 슈퍼앱 전략 가속”"></a>3. 야놀자, 고속버스 예매 서비스 오픈…”여행 슈퍼앱 전략 가속”</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=411208">야놀자, 고속버스 예매 서비스 오픈…”여행 슈퍼앱 전략 가속”</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202107/411208_405981_2648.jpg" alt="종합 여가 플랫폼 기업 야놀자가 고속버스 예매 서비스를 오픈했다. [사진: 야놀자]"></p><p>야놀자는 국내외 숙박·레저·레스토랑·교통(항공·철도·렌터카) 등 여행을 위한 모든 서비스를 통합 제공하고 있다. 특히 숙박, 레저 등 기존 사업과의 시너지를 위해 2019년 글로벌 항공권 검색 서비스를 시작으로 철도, 렌터카 등 교통 카테고리를 확대해 왔으며, 새로 선보인 고속버스 예매 서비스 역시 여행 슈퍼앱 전략의 일환으로, 보다 고도화된 모빌리티 환경을 구축하기 위해 마련했단 설명이다.</p><p>야놀자 앱 내 교통·항공 카테고리에선 전국 프리미엄·우등·일반 등 모든 등급의 고속버스를 확인할 수 있으며, 노선 검색부터 예매, 발권 등 고속버스 이용을 위한 모든 과정을 지원한다.</p><hr><h2 id="4-카뱅-‘휴면예금·보험금-찾기’-출시-이틀만에-11억원-지급"><a href="#4-카뱅-‘휴면예금·보험금-찾기’-출시-이틀만에-11억원-지급" class="headerlink" title="4. 카뱅 ‘휴면예금·보험금 찾기’ 출시 이틀만에 11억원 지급"></a>4. 카뱅 ‘휴면예금·보험금 찾기’ 출시 이틀만에 11억원 지급</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=410670">카뱅 ‘휴면예금·보험금 찾기’ 출시 이틀만에 11억원 지급</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202107/410670_405712_386.jpg" alt="[사진: 카카오뱅크]"></p><p>카카오뱅크가 ‘휴면예금·보험금 찾기’ 서비스 출시 이틀 만에 지급액이 11억원을 돌파했다고 23일 밝혔으며, 카카오뱅크에 따르면 이틀 간 서비스를 조회한 이용자 수는 17만명이다. 약 5만8000건의 휴면예금과 휴면보험금이 원권리자에게 지급됐다. </p><p>카카오뱅크 관계자는 “고객들의 보다 편리한 금융생활을 위해 유용한 서비스를 지속 출시할 계획”이라고 말했다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%BC%EB%86%80%EC%9E%90/">야놀자</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%EB%B1%85%ED%81%AC/">카카오뱅크</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%98%EC%9D%B4%ED%8D%BC%ED%81%B4%EB%A1%9C%EB%B0%94/">하이퍼클로바</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8A%A4%ED%8C%B8/">스팸</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%9B%84%ED%9B%84/">후후</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84%EC%87%BC%ED%95%91/">네이버쇼핑</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8A%88%ED%8D%BC%EC%95%B1/">슈퍼앱</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%97%AC%ED%96%89/">여행</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B3%A0%EC%86%8D%EB%B2%84%EC%8A%A4/">고속버스</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/28/21-07-28-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring Boot] 스프링부트 기초개념-Spring의 동작원리1</title>
      <link>https://chlee1001.github.io/2021/07/28/SPRINGBOOT-Study3-21-07-28/</link>
      <guid>https://chlee1001.github.io/2021/07/28/SPRINGBOOT-Study3-21-07-28/</guid>
      <pubDate>Tue, 27 Jul 2021 15:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_2.png&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_3.png&quot;&gt;&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_1.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_2.png"></p><hr><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study3_3.png"></p><hr>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/categories/Programming/Spring-Boot/">Spring Boot</category>
      
      
      <category domain="https://chlee1001.github.io/tags/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://chlee1001.github.io/tags/Java/">Java</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring/">Spring</category>
      
      <category domain="https://chlee1001.github.io/tags/JPA/">JPA</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%86%B0%EC%BA%A3/">톰캣</category>
      
      <category domain="https://chlee1001.github.io/tags/WAS/">WAS</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/28/SPRINGBOOT-Study3-21-07-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring Boot] 스프링부트 기초개념-JPA란</title>
      <link>https://chlee1001.github.io/2021/07/27/SPRINGBOOT-Study2-21-07-27/</link>
      <guid>https://chlee1001.github.io/2021/07/27/SPRINGBOOT-Study2-21-07-27/</guid>
      <pubDate>Tue, 27 Jul 2021 13:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_3.png&quot;&gt;&lt;/p&gt;
</description>
      
      
      
      <content:encoded><![CDATA[<p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_1.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_2.png"></p><p><img src="https://chlee1001.github.io/images/posts/programming/springboot/study/Spring_study2_3.png"></p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/categories/Programming/Spring-Boot/">Spring Boot</category>
      
      
      <category domain="https://chlee1001.github.io/tags/Programming/">Programming</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://chlee1001.github.io/tags/Java/">Java</category>
      
      <category domain="https://chlee1001.github.io/tags/Spring/">Spring</category>
      
      <category domain="https://chlee1001.github.io/tags/JPA/">JPA</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/27/SPRINGBOOT-Study2-21-07-27/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Git] 특정 Branch만 Clone하기</title>
      <link>https://chlee1001.github.io/2021/07/26/GITHUB-Branch-21-07-26/</link>
      <guid>https://chlee1001.github.io/2021/07/26/GITHUB-Branch-21-07-26/</guid>
      <pubDate>Mon, 26 Jul 2021 11:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;Git을 사용하면서 브랜치 전체 Clone하지 않고, 특정 브랜치 하나만 사용해야할 경우가 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://chlee1001.github.io/images/posts/git/git_branch1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;하지만, 기본적으로 알고 있는 방법으로 git clone할 경우 Master가 바로 Clone됨으로, 특정 브랜치만 클론하는 방법을 알아보자&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; -b &amp;lt;branch명&amp;gt; --single-branch &amp;lt;저장소URL&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ex) git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; -b rpi-4.12.y --single-branch https://github.com/raspberrypi/linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Git을 사용하면서 브랜치 전체 Clone하지 않고, 특정 브랜치 하나만 사용해야할 경우가 있다.</p><p><img src="https://chlee1001.github.io/images/posts/git/git_branch1.png"></p><p>하지만, 기본적으로 알고 있는 방법으로 git clone할 경우 Master가 바로 Clone됨으로, 특정 브랜치만 클론하는 방법을 알아보자</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b &lt;branch명&gt; --single-branch &lt;저장소URL&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ex) git <span class="built_in">clone</span> -b rpi-4.12.y --single-branch https://github.com/raspberrypi/linux</span><br></pre></td></tr></table></figure><p><img src="https://chlee1001.github.io/images/posts/git/git_branch2.png"></p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Git-Github/">Git/Github</category>
      
      
      <category domain="https://chlee1001.github.io/tags/Git/">Git</category>
      
      <category domain="https://chlee1001.github.io/tags/Github/">Github</category>
      
      <category domain="https://chlee1001.github.io/tags/branch/">branch</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B8%8C%EB%9E%9C%EC%B9%98/">브랜치</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%B4%EB%A1%A0/">클론</category>
      
      <category domain="https://chlee1001.github.io/tags/clone/">clone</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/26/GITHUB-Branch-21-07-26/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Linux] 리눅스에서 압축 및 해제 하는법</title>
      <link>https://chlee1001.github.io/2021/07/26/LINUX-ZIP-21-07-26/</link>
      <guid>https://chlee1001.github.io/2021/07/26/LINUX-ZIP-21-07-26/</guid>
      <pubDate>Mon, 26 Jul 2021 11:26:50 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-tar-압축&quot;&gt;&lt;a href=&quot;#1-tar-압축&quot; class=&quot;headerlink&quot; title=&quot;1. tar 압축&quot;&gt;&lt;/a&gt;1. tar 압축&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; tar -cvf [파일명.tar] [폴더명]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ex) abc라는 폴더를 aaa.tar로 압축하고자 한다면&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt; tar -cvf aaa.tar abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-tar-압축풀기&quot;&gt;&lt;a href=&quot;#2-tar-압축풀기&quot; class=&quot;headerlink&quot; title=&quot;2. tar 압축풀기&quot;&gt;&lt;/a&gt;2. tar 압축풀기&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; tar -xvf [파일명.tar]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ex) aaa.tar라는 tar파일 압축을 풀고자 한다면&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt; tar -xvf aaa.tar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-tar-압축"><a href="#1-tar-압축" class="headerlink" title="1. tar 압축"></a>1. tar 압축</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tar -cvf [파일명.tar] [폴더명]</span><br><span class="line"></span><br><span class="line">ex) abc라는 폴더를 aaa.tar로 압축하고자 한다면</span><br><span class="line">    &gt; tar -cvf aaa.tar abc</span><br></pre></td></tr></table></figure><h2 id="2-tar-압축풀기"><a href="#2-tar-압축풀기" class="headerlink" title="2. tar 압축풀기"></a>2. tar 압축풀기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tar -xvf [파일명.tar]</span><br><span class="line"></span><br><span class="line">ex) aaa.tar라는 tar파일 압축을 풀고자 한다면</span><br><span class="line">    &gt; tar -xvf aaa.tar</span><br></pre></td></tr></table></figure><hr><h2 id="3-tar-gz-압축"><a href="#3-tar-gz-압축" class="headerlink" title="3. tar.gz 압축"></a>3. tar.gz 압축</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tar -zcvf [파일명.tar.gz] [폴더명]</span><br><span class="line"></span><br><span class="line">ex) abc라는 폴더를 aaa.tar.gz로 압축하고자 한다면</span><br><span class="line">    &gt; tar -zcvf aaa.tar.gz abc</span><br></pre></td></tr></table></figure><h2 id="4-tar-gz-압축풀기"><a href="#4-tar-gz-압축풀기" class="headerlink" title="4. tar.gz 압축풀기"></a>4. tar.gz 압축풀기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tar -zxvf [파일명.tar.gz]</span><br><span class="line"></span><br><span class="line">ex) aaa.tar.gz라는 tar.gz파일 압축을 풀고자 한다면</span><br><span class="line">    &gt; tar -zxvf aaa.tar.gz</span><br></pre></td></tr></table></figure><hr><h2 id="5-zip-압축"><a href="#5-zip-압축" class="headerlink" title="5. zip 압축"></a>5. zip 압축</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; zip [파일명.zip] [폴더명]</span><br><span class="line"></span><br><span class="line">ex) abc라는 폴더를 aaa.zip으로 압축하고자 한다면</span><br><span class="line">    &gt; zip aaa.zip abc</span><br></pre></td></tr></table></figure><h2 id="6-zip-압축풀기"><a href="#6-zip-압축풀기" class="headerlink" title="6. zip 압축풀기"></a>6. zip 압축풀기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; unzip [파일명.zip]</span><br><span class="line"></span><br><span class="line">ex) aaa.zip라는 zip파일 압축을 풀고자 한다면</span><br><span class="line">    &gt; unzip aaa.zip</span><br><span class="line">     </span><br><span class="line">ex) 특정 폴더에 압축풀기</span><br><span class="line">&gt; unzip aaa.zip -d ./target</span><br></pre></td></tr></table></figure><hr><h2 id="자주-쓰는-tar-옵션-명령어"><a href="#자주-쓰는-tar-옵션-명령어" class="headerlink" title="자주 쓰는 tar 옵션 명령어"></a>자주 쓰는 tar 옵션 명령어</h2><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td>-c</td><td>파일을 tar로 묶음</td></tr><tr><td>-p</td><td>파일 권한을 저장</td></tr><tr><td>-v</td><td>묶거나 파일을 풀 때 과정을 화면으로 출력</td></tr><tr><td>-f</td><td>파일 이름을 지정</td></tr><tr><td>-C</td><td>경로를 지정</td></tr><tr><td>-x</td><td>tar 압축을 풂</td></tr><tr><td>-z</td><td>gzip으로 압축하거나 해제함</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Linux/">Linux</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/">리눅스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9A%B0%EB%B6%84%ED%88%AC/">우분투</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%95%EC%B6%95/">압축</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/26/LINUX-ZIP-21-07-26/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 13417번 카드 문자열</title>
      <link>https://chlee1001.github.io/2021/07/26/BAEKJOON-13417-21-07-26/</link>
      <guid>https://chlee1001.github.io/2021/07/26/BAEKJOON-13417-21-07-26/</guid>
      <pubDate>Mon, 26 Jul 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/13417&quot;&gt;[백준] 13417번 카드 문자열&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;1 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;256 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1290&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;798&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;696&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;65.108%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/13417">[백준] 13417번 카드 문자열</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">1 초</td><td align="left">256 MB</td><td align="left">1290</td><td align="left">798</td><td align="left">696</td><td align="left">65.108%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>N장의 카드가 일렬로 놓여있다. 각 카드에는 알파벳이 하나씩 적혀있다. 태욱이는 가장 왼쪽에 있는 카드부터 차례대로 한 장씩 가져올 수 있다. 가장 처음에 가져온 카드는 자신의 앞에 놓는다. 그다음부터는 가져온 카드를 자신의 앞에 놓인 카드들의 가장 왼쪽, 또는 가장 오른쪽에 놓는다. 태욱이는 모든 카드를 다 가져온 후에 자신의 앞에 놓인 카드를 순서대로 이어 붙여 카드 문자열을 만들려고 한다.</p><p>예를 들어 3장의 카드가 [M, K, U] 순으로 놓여있다고 하자. 태욱이는 먼저 가장 왼쪽에 있는 “M”이 적힌 카드를 가져와서 자신의 앞에 놓는다. 다음으로 남은 카드 중 가장 왼쪽에 있는 “K”가 적힌 카드를 가져와서 가장 왼쪽에 두고, 이어서 “U”가 적힌 카드를 가져와서 다시 가장 왼쪽에 두면 “UKM”이라는 문자열을 만들 수 있다. 만약 “K”가 적힌 카드를 가져와서 가장 왼쪽에 두고, 이어서 “U”가 적힌 카드를 가져와서 가장 오른쪽에 두면 “KMU”라는 문자열을 만들 수 있다. 이때, 태욱이가 만들 수 있는 문자열 중 사전 순으로 가장 빠른 문자열은 “KMU”이다.</p><p>N장의 카드에 적혀있는 알파벳의 처음 순서가 주어질 때, 태욱이가 만들 수 있는 카드 문자열 중 사전 순으로 가장 빠른 문자열을 출력하는 프로그램을 작성하시오.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫째 줄에 테스트 케이스의 개수를 나타내는 자연수 T가 주어진다. 각각의 테스트 케이스의 첫째 줄에 처음에 놓여있는 카드의 개수 N(1 ≤ N ≤ 1,000)이 주어진다. 두 번째 줄에는 N장의 카드에 적힌 알파벳의 초기 순서가 주어진다. 가장 왼쪽에 있는 카드에 적혀있는 알파벳부터 순서대로 N개가 공백으로 구분되어 주어진다. 모든 카드에는 한 개씩의 알파벳이 적혀있으며, 모두 대문자이다. </p><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>출력은 표준 출력을 사용한다. 입력받은 데이터에 대해, 한 줄에 1개씩 태욱이가 만들 수 있는 문자열 중에서 사전 순으로 가장 빠른 문자열을 출력한다.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3</span><br><span class="line">M K U</span><br><span class="line">5</span><br><span class="line">A S D F G</span><br><span class="line">7</span><br><span class="line">B A C A B A C</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">KMU</span><br><span class="line">ASDFG</span><br><span class="line">AAABCBC</span><br></pre></td></tr></table></figure><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li><a href="https://www.acmicpc.net/category/5">University</a> &gt; <a href="https://www.acmicpc.net/category/361">국민대학교</a> &gt; <a href="https://www.acmicpc.net/category/detail/1541">2016 국민대학교 교내 경시대회</a> E번<ul><li>문제를 만든 사람: <a href="https://www.acmicpc.net/user/game2k">game2k</a></li></ul></li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/158">문자열</a></li><li><a href="https://www.acmicpc.net/problem/tag/33">그리디 알고리즘</a></li><li><a href="https://www.acmicpc.net/problem/tag/73">덱</a></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">T = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(T):</span><br><span class="line">    N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    card_list = deque(<span class="built_in">input</span>().rstrip().split())</span><br><span class="line">    new_list = deque(card_list.popleft())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> card_list:</span><br><span class="line">        temp = card_list.popleft()</span><br><span class="line">        <span class="keyword">if</span> temp &gt; new_list[<span class="number">0</span>]:</span><br><span class="line">            new_list.append(temp)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            new_list.appendleft(temp)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(new_list))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%90/">큐</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4/">문자열</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">그리디알고리즘</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/26/BAEKJOON-13417-21-07-26/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 18115번 카드 놓기</title>
      <link>https://chlee1001.github.io/2021/07/26/BAEKJOON-18115-21-07-26/</link>
      <guid>https://chlee1001.github.io/2021/07/26/BAEKJOON-18115-21-07-26/</guid>
      <pubDate>Mon, 26 Jul 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/18115&quot;&gt;[백준] 18115번 카드 놓기&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2 초 (추가 시간 없음)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1024 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;723&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;403&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;314&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;57.615%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/18115">[백준] 18115번 카드 놓기</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">2 초 (추가 시간 없음)</td><td align="left">1024 MB</td><td align="left">723</td><td align="left">403</td><td align="left">314</td><td align="left">57.615%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>수현이는 카드 기술을 연습하고 있다. 수현이의 손에 들린 카드를 하나씩 내려놓아 바닥에 쌓으려고 한다. 수현이가 쓸 수 있는 기술은 다음 3가지다.</p><ol><li>제일 위의 카드 1장을 바닥에 내려놓는다.</li><li>위에서 두 번째 카드를 바닥에 내려놓는다. 카드가 2장 이상일 때만 쓸 수 있다.</li><li>제일 밑에 있는 카드를 바닥에 내려놓는다. 카드가 2장 이상일 때만 쓸 수 있다.</li></ol><p>수현이는 처음에 카드 <em>N</em>장을 들고 있다. 카드에는 1부터 <em>N</em>까지의 정수가 중복되지 않게 적혀 있다. 기술을 <em>N</em>번 사용하여 카드를 다 내려놓았을 때, 놓여 있는 카드들을 확인했더니 위에서부터 순서대로 1, 2, …, <em>N</em>이 적혀 있었다!</p><p>놀란 수현이는 처음에 카드가 어떻게 배치되어 있었는지 궁금해졌다. 처음 카드의 상태를 출력하여라.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>첫 번째 줄에는 <em>N</em> (1 ≤ <em>N</em> ≤ 106)이 주어진다.</p><p>두 번째 줄에는 길이가 <em>N</em>인 수열 <em>A</em>가 주어진다. <em>Ai</em>가 <em>x</em>이면, <em>i</em>번째로 카드를 내려놓을 때 <em>x</em>번 기술을 썼다는 뜻이다. <em>Ai</em>는 1, 2, 3 중 하나이며, <em>An</em>은 항상 1이다.</p><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>초기 카드의 상태를 위에서부터 순서대로 출력하여라.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><h3 id="예제-입력-2"><a href="#예제-입력-2" class="headerlink" title="예제 입력 2"></a>예제 입력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">2 3 3 2 1</span><br></pre></td></tr></table></figure><h3 id="예제-출력-2"><a href="#예제-출력-2" class="headerlink" title="예제 출력 2"></a>예제 출력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 5 2 3 4</span><br></pre></td></tr></table></figure><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li><a href="https://www.acmicpc.net/category/5">University</a> &gt; <a href="https://www.acmicpc.net/category/83">서강대학교</a> &gt; <a href="https://www.acmicpc.net/category/detail/2128">2019 Sogang Programming Contest (Champion)</a> C번<ul><li>문제를 검수한 사람: <a href="https://www.acmicpc.net/user/jh05013">jh05013</a>, <a href="https://www.acmicpc.net/user/shiftpsh">shiftpsh</a></li><li>문제를 만든 사람: <a href="https://www.acmicpc.net/user/semteo04">semteo04</a></li></ul></li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/73">덱</a></li></ul><hr><h3 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">반대로</span><br><span class="line">1) 맨위의 카드를 바닥으로</span><br><span class="line">2) 맨위의 카드를 바닥에서 2번째로</span><br><span class="line">3) 맨위의 카드를 맨위로</span><br></pre></td></tr></table></figure><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">card_list = deque(<span class="built_in">range</span>(<span class="number">1</span>, N + <span class="number">1</span>))</span><br><span class="line">commands = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">init_list = deque()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> commands:</span><br><span class="line">    command = commands.pop()</span><br><span class="line">    temp = card_list.popleft()</span><br><span class="line">    <span class="keyword">if</span> command == <span class="number">1</span>:</span><br><span class="line">        init_list.appendleft(temp)</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="number">2</span>:</span><br><span class="line">        init_list.insert(<span class="number">1</span>, temp)</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="number">3</span>:</span><br><span class="line">        init_list.append(temp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(*init_list)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%90/">큐</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/26/BAEKJOON-18115-21-07-26/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 07월 26일 월요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/07/26/21-07-26-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/07/26/21-07-26-IT_News/</guid>
      <pubDate>Sun, 25 Jul 2021 23:30:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-바람소리까지-차단-vs10만원대로-‘가성비’-충족‘…노이즈-캔슬링’-경쟁-속으로&quot;&gt;&lt;a href=&quot;#1-바람소리까지-차단-vs10만원대로-‘가성비’-충족‘…노이즈-캔슬링’-경쟁-속으로&quot; class=&quot;headerlink&quot; title=&quot;1. 바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로&quot;&gt;&lt;/a&gt;1. 바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=032&amp;aid=0003087761&quot;&gt;바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;올해 새로 출시되는 무선이어폰들도 노이즈캔슬링 기능이 큰 관심사다. 소니는 지난달 ‘헤드폰급’ 노이즈캔슬링 성능을 자부한 신제품 ‘WF-1000XM4’를 내놨으며, 는 바람 소리를 억제하는 기능을 추가해 야외에서도 노이즈캔슬링 효과가 커졌다고 강조했다.&lt;/p&gt;
&lt;p&gt;삼성전자는 내달 11일 온라인 언팩(신제품 공개) 행사에서 무선이어폰 ‘갤럭시 버즈2’를 공개할 예정인데, 노이즈캔슬링 기능을 넣고도 가격을 10만원대 후반으로 책정해 가성비를 높일 것이란 관측이 나오고 있다.&lt;/p&gt;
&lt;p&gt;애플은 오는 9월 선보일 것으로 예상되는 무선이어폰 ‘에어팟3’에서 외려 노이즈캔슬링을 빼고, 10만원대 후반으로 가격을 낮출 것이란 외신 보도가 나오고 있다. &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-바람소리까지-차단-vs10만원대로-‘가성비’-충족‘…노이즈-캔슬링’-경쟁-속으로"><a href="#1-바람소리까지-차단-vs10만원대로-‘가성비’-충족‘…노이즈-캔슬링’-경쟁-속으로" class="headerlink" title="1. 바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로"></a>1. 바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=032&aid=0003087761">바람소리까지 차단 vs10만원대로 ‘가성비’ 충족‘…노이즈 캔슬링’ 경쟁 속으로</a></p><p>올해 새로 출시되는 무선이어폰들도 노이즈캔슬링 기능이 큰 관심사다. 소니는 지난달 ‘헤드폰급’ 노이즈캔슬링 성능을 자부한 신제품 ‘WF-1000XM4’를 내놨으며, 는 바람 소리를 억제하는 기능을 추가해 야외에서도 노이즈캔슬링 효과가 커졌다고 강조했다.</p><p>삼성전자는 내달 11일 온라인 언팩(신제품 공개) 행사에서 무선이어폰 ‘갤럭시 버즈2’를 공개할 예정인데, 노이즈캔슬링 기능을 넣고도 가격을 10만원대 후반으로 책정해 가성비를 높일 것이란 관측이 나오고 있다.</p><p>애플은 오는 9월 선보일 것으로 예상되는 무선이어폰 ‘에어팟3’에서 외려 노이즈캔슬링을 빼고, 10만원대 후반으로 가격을 낮출 것이란 외신 보도가 나오고 있다. </p><hr><h2 id="2-새벽-1시-자는데-SNS-‘로그인’-문자가…"><a href="#2-새벽-1시-자는데-SNS-‘로그인’-문자가…" class="headerlink" title="2. 새벽 1시, 자는데 SNS ‘로그인’ 문자가…"></a>2. 새벽 1시, 자는데 SNS ‘로그인’ 문자가…</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=008&aid=0004621416">새벽 1시, 자는데 SNS ‘로그인’ 문자가…</a></p><p><img src="https://imgnews.pstatic.net/image/008/2021/07/25/0004621416_003_20210725141801968.jpg?type=w647"></p><p>2단계 인증의 중요성에 대해, 화이트 해커(정보 보안 전문가)이자 유튜버인 **노말틱(Normaltic)**은 이렇게 설명했다. 그는 **”해커 입장에서 2단계 인증을 만나게 되면 진짜 심각하게 짜증난다”**며 **”비밀번호는 바꾸기 전까진 고정된 정보이지만, 2단계 인증 정보는 로그인 할 때마다 바뀌는 값이기 때문”**이라고 했다.</p><p>그러면서 노말틱은 **”그 2단계 인증 시스템을 해킹하지 않는 이상 계정을 해킹하기 어렵다”**며 **”그만큼 강력한 것”**이라고 했다. 특히 <strong>이메일 계정만큼은 1순위로 2단계 인증</strong>을 해야 한다고 했다. 초기화 된 비밀번호가 다 이메일 계정으로 가기 때문에, 거의 모든 계정을 해킹할 수 있어서다.</p><hr><h2 id="3-토스·쿠팡·배민-등-플랫폼업체-개인정보·상담내용-유출"><a href="#3-토스·쿠팡·배민-등-플랫폼업체-개인정보·상담내용-유출" class="headerlink" title="3. 토스·쿠팡·배민 등 플랫폼업체 개인정보·상담내용 유출"></a>3. 토스·쿠팡·배민 등 플랫폼업체 개인정보·상담내용 유출</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=sec&sid1=101&oid=030&aid=0002959476">토스·쿠팡·배민 등 플랫폼업체 개인정보·상담내용 유출</a></p><p>25일 채팅 상담 해피톡 운영사 엠비아이솔루션에 따르면 21일 오후 2시 해커가 자사 서버에 침입해 개인정보를 비롯한 채팅 상담 데이터를 유출시켰다고 밝혔으며,  토스(비바리퍼블리카), 쿠팡, 배달의민족 등 대형 플랫폼의 고객 이름, 전화번호 등 개인정보와 함께 상담내용까지 총 8만여건이 유출된 것으로 파악됐으며, 정보유출 피해를 입은 고객사는 700여개에 달한다.</p><p>해피톡은 해당 고객사에게 피해사실을 공지하고, 보상 및 향후 대응에 대해 협의를 진행 중이고,  토스의 경우 고객 1500여명의 개인정보가 유출되어 피해자 한 명당 10만원의 보상금을 선제적으로 지급하는 등 조기 진압에 나섰다. 배달의민족도 음식점 점주와 커넥터(라이더)가 회사 측과 주고받은 상담 내역 1만312건이 유출됐다. </p><hr><h2 id="4-택시·대리·퀵-이어-렌터카…’카카오T’-플랫폼-마지막-퍼즐-끼웠다"><a href="#4-택시·대리·퀵-이어-렌터카…’카카오T’-플랫폼-마지막-퍼즐-끼웠다" class="headerlink" title="4. 택시·대리·퀵 이어 렌터카…’카카오T’ 플랫폼 마지막 퍼즐 끼웠다"></a>4. 택시·대리·퀵 이어 렌터카…’카카오T’ 플랫폼 마지막 퍼즐 끼웠다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=421&aid=0005500916">택시·대리·퀵 이어 렌터카…’카카오T’ 플랫폼 마지막 퍼즐 끼웠다</a></p><p>26일 IT업계에 따르면 공정위는 모빌리티 플랫폼 카카오T 운영사인 카카오모빌리티가 현대캐피탈의 온라인 차량대여 플랫폼 사업 딜카를 양수하는 기업결합 건을 경쟁제한 우려가 적다고 판단해 지난 8일 승인했다.</p><p>카카오모빌리티의 렌터카 업계 경쟁사로는 쏘카나 그린카 등 카셰어링 기업들이 거론되고 있지만, 실제 사업모델은 큰 차이가 있을 가능성이 크며, 카셰어링 기업의 경우 회사가 보유한 차량을 빌려주는 방식이지만, 카카오는 대리운전이나 택시, 퀵서비스처럼 ‘연결’에 중점을 둔 서비스를 제공할 것으로 예상된다. 실제 카카오모빌리티는 피유엠피, 지바이크 등과 업무협약을 맺고 퍼스널 모빌리티 서비스 연동을 추진 중이다.</p><hr><h2 id="5-음성기반-일대일-커리어-대화-연결-플랫폼-‘커피챗’-중기부-팁스-프로그램-선정"><a href="#5-음성기반-일대일-커리어-대화-연결-플랫폼-‘커피챗’-중기부-팁스-프로그램-선정" class="headerlink" title="5. 음성기반 일대일 커리어 대화 연결 플랫폼 ‘커피챗’, 중기부 팁스 프로그램 선정"></a>5. 음성기반 일대일 커리어 대화 연결 플랫폼 ‘커피챗’, 중기부 팁스 프로그램 선정</h2><p><a href="https://platum.kr/archives/167556">음성기반 일대일 커리어 대화 연결 플랫폼 ‘커피챗’, 중기부 팁스 프로그램 선정</a></p><p><img src="https://platum.kr/wp-content/uploads/2021/07/coffee.png"></p><p>음성 기반 커리어 대화 연결 플랫폼 커피챗은 중소벤처기업부의 기술창업투자 프로그램인 팁스(TIPS)에 선정됐고, 올해 5월 본엔젤스벤처파트너스에서 시드 투자를 받은 후 이번 7월 팁스 프로그램에 추천을 받고 최종 선정됐다.</p><p>커피챗은 내가 궁금한 곳에 있는 사람과 일대일 익명 기반 자유로운 음성 대화를 제공하는 커리어 대화 연결 플랫폼으로 개개인의 커리어에 적합한 파트너와 음성 대화가 가능하도록 회사/직무/업계/학교별 파트너 검색 기능과 실시간 파트너 업데이트를 제공하고 있으며, 커피챗 실시간 리뷰, 맞춤 파트너 추천받기 등으로 서비스를 처음 이용하는 고객의 편의를 위한 서비스를 선보이고 있다. </p><p>박상우 커피챗 대표는 “고객마다 각기 다른 커리어 생애 주기에 맞게 최적화된 정보를 얻을 수 있도록 정교한 AI 알고리즘 구축과 지속적 모델링 고도화를 추진할 예정”이라고 밝혔다. 또한, “다양한 국가의 고객들이 커피챗을 통해 커리어와 관련된 모든 고민을 해결할 수 있는 올인원 커리어 플랫폼으로 나아가는 것이 목표” 라고 전했다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%A0%ED%94%8C/">애플</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%82%BC%EC%84%B1/">삼성</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%B4%ED%82%B9/">해킹</category>
      
      <category domain="https://chlee1001.github.io/tags/SNS/">SNS</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85/">스타트업</category>
      
      <category domain="https://chlee1001.github.io/tags/MaaS/">MaaS</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%BF%A0%ED%8C%A1/">쿠팡</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%86%A0%EC%8A%A4/">토스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4T/">카카오T</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%85%B8%EC%9D%B4%EC%A6%88%EC%BA%94%EC%8A%AC%EB%A7%81/">노이즈캔슬링</category>
      
      <category domain="https://chlee1001.github.io/tags/2%EB%8B%A8%EA%B3%84%EC%9D%B8%EC%A6%9D/">2단계인증</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B3%B4%EC%95%88/">보안</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B0%EB%AF%BC/">배민</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EC%9C%A0%EC%B6%9C/">개인정보유출</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%B4%ED%94%BC%ED%86%A1/">해피톡</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%8C%81%EC%8A%A4/">팁스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%BB%A4%ED%94%BC%EC%B1%97/">커피챗</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/26/21-07-26-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] 문자열 내 마음대로 정렬하기</title>
      <link>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-Practice_Problem-String_free_Sort-07-24/</link>
      <guid>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-Practice_Problem-String_free_Sort-07-24/</guid>
      <pubDate>Sat, 24 Jul 2021 13:21:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12915&quot;&gt;[코딩테스트 연습] 문자열 내 마음대로 정렬하기&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;&lt;p&gt;문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 [“sun”, “bed”, “car”]이고 n이 1이면 각 단어의 인덱스 1의 문자 “u”, “e”, “a”로 strings를 정렬합니다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://programmers.co.kr/learn/courses/30/lessons/12915">[코딩테스트 연습] 문자열 내 마음대로 정렬하기</a> </p><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 [“sun”, “bed”, “car”]이고 n이 1이면 각 단어의 인덱스 1의 문자 “u”, “e”, “a”로 strings를 정렬합니다.</p><hr><h3 id="제한"><a href="#제한" class="headerlink" title="제한"></a>제한</h3><ul><li>strings는 길이 1 이상, 50이하인 배열입니다.</li><li>strings의 원소는 소문자 알파벳으로 이루어져 있습니다.</li><li>strings의 원소는 길이 1 이상, 100이하인 문자열입니다.</li><li>모든 strings의 원소의 길이는 n보다 큽니다.</li><li>인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.</li></ul><hr><h3 id="입출력"><a href="#입출력" class="headerlink" title="입출력"></a>입출력</h3><table><thead><tr><th>strings</th><th>n</th><th>return</th></tr></thead><tbody><tr><td>[“sun”, “bed”, “car”]</td><td>1</td><td>[“car”, “bed”, “sun”]</td></tr><tr><td>[“abce”, “abcd”, “cdx”]</td><td>2</td><td>[“abcd”, “abce”, “cdx”]</td></tr></tbody></table><hr><h3 id="입출력-예-1"><a href="#입출력-예-1" class="headerlink" title="입출력 예 1"></a>입출력 예 1</h3><p>“sun”, “bed”, “car”의 1번째 인덱스 값은 각각 “u”, “e”, “a” 입니다. 이를 기준으로 strings를 정렬하면 [“car”, “bed”, “sun”] 입니다.</p><h3 id="입출력-예-2"><a href="#입출력-예-2" class="headerlink" title="입출력 예 2"></a>입출력 예 2</h3><p>“abce”와 “abcd”, “cdx”의 2번째 인덱스 값은 “c”, “c”, “x”입니다. 따라서 정렬 후에는 “cdx”가 가장 뒤에 위치합니다. “abce”와 “abcd”는 사전순으로 정렬하면 “abcd”가 우선하므로, 답은 [“abcd”, “abce”, “cdx”] 입니다.</p><hr><h3 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h3><ul><li></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">strings, n</span>):</span></span><br><span class="line">    strings.sort()</span><br><span class="line">    answer = <span class="built_in">sorted</span>(strings, key=<span class="keyword">lambda</span> x: x[n])</span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solution([<span class="string">&quot;sun&quot;</span>, <span class="string">&quot;bed&quot;</span>, <span class="string">&quot;car&quot;</span>], <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(solution([<span class="string">&quot;abce&quot;</span>, <span class="string">&quot;abcd&quot;</span>, <span class="string">&quot;cdx&quot;</span>], <span class="number">2</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A0%95%EB%A0%AC/">정렬</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8/">코딩 테스트</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-Practice_Problem-String_free_Sort-07-24/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 15501번 부당한 퍼즐</title>
      <link>https://chlee1001.github.io/2021/07/24/BAEKJOON-15501-21-07-24/</link>
      <guid>https://chlee1001.github.io/2021/07/24/BAEKJOON-15501-21-07-24/</guid>
      <pubDate>Sat, 24 Jul 2021 07:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/15501&quot;&gt;[백준] 15501번 부당한 퍼즐&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;256 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1224&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;493&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;313&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;43.961%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/15501">[백준] 15501번 부당한 퍼즐</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">2 초</td><td align="left">256 MB</td><td align="left">1224</td><td align="left">493</td><td align="left">313</td><td align="left">43.961%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>현욱은 퍼즐 게임을 굉장히 좋아한다. 어느 날 현욱은 친구로부터 간단한 플래시 퍼즐 게임을 하나 추천 받았는데, 이 퍼즐 게임은 다음과 같은 규칙을 갖고 있다.</p><ol><li>플레이어는 1 ~ n 까지 숫자가 한 번씩만 나타나는 수열을 하나 가지고 시작한다.</li><li>또 다른 1 ~ n 까지 숫자가 한 번씩만 나타나는 수열이 주어졌을 때, 처음 수열을 적절히 변형해서 처음 받은 수열을 이 수열과 동일한 수열로 만들어야 한다.</li><li>이때, 플레이어가 수열에 대해서 할 수 있는 동작은 다음 두 가지가 있다. 동작은 몇 번이라도 수행할 수 있다.<ul><li>뒤집기 : 현재 수열을 거꾸로 뒤집는다. ex) 1 2 3 4 5 -&gt; 5 4 3 2 1</li><li>밀기 : 현재 수열을 왼쪽 혹은 오른쪽으로 한 칸 민다. ex) 1 2 3 4 5 -&gt; 5 1 2 3 4</li></ul></li></ol><p>퍼즐을 풀던 현욱은 분명히 엄청 쉬운 규칙인데도 불구하고 문제가 안 풀려서, 한참을 고민하다가 다시 잘 비교해보니 정답 수열을 주어진 동작만으로는 절대 만들 수가 없는 문제였다!</p><p>화가 난 현욱은 퍼즐 제작자에게 따지기 위해 주어진 문제가 올바른 문제인지 아닌지 확인하는 프로그램을 만들기로 결심했다. 현욱을 도와 괘씸한 퍼즐 제작자를 응징해주자.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>첫째 줄에 n이 주어진다(1 ≤ n ≤ 1,000,000).</p><p>둘째 줄에 1에서 n까지의 수가 한 번만 나타나는 수열이 순서대로 주어진다.</p><p>셋째 줄에 주어진 두 연산을 수행해서 구성할 수 있는지 확인할 1에서 n까지 수가 한 번만 나타나는 수열이 순서대로 주어진다.</p><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>주어진 두 가지 연산만을 가지고 처음 수열을 결과 수열로 만들 수 있다면 good puzzle, 아니면 bad puzzle을 출력한다.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">4 3 2 1 5</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">good puzzle</span><br></pre></td></tr></table></figure><h3 id="예제-입력-2"><a href="#예제-입력-2" class="headerlink" title="예제 입력 2"></a>예제 입력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">1 2 4 3 5</span><br></pre></td></tr></table></figure><h3 id="예제-출력-2"><a href="#예제-출력-2" class="headerlink" title="예제 출력 2"></a>예제 출력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bad puzzle</span><br></pre></td></tr></table></figure><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li><a href="https://www.acmicpc.net/category/45">Contest</a> &gt; <a href="https://www.acmicpc.net/category/413">소프트콘</a> &gt; <a href="https://www.acmicpc.net/category/detail/1843">제1회 소프트콘</a> A번<ul><li>문제를 만든 사람: <a href="https://www.acmicpc.net/user/jwvg0425">jwvg0425</a></li><li>잘못된 데이터를 찾은 사람: <a href="https://www.acmicpc.net/user/tncks0121">tncks0121</a></li></ul></li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/102">구현</a></li><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/73">덱</a></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">sequence = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">compare = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 순방향</span></span><br><span class="line">first_idx = compare.index(sequence[<span class="number">0</span>])  <span class="comment"># 기준점</span></span><br><span class="line">new_list1 = compare[first_idx:] + compare[:first_idx]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 역방향</span></span><br><span class="line">compare = compare[::-<span class="number">1</span>]</span><br><span class="line">first_idx = compare.index(sequence[<span class="number">0</span>])  <span class="comment"># 기준점</span></span><br><span class="line">new_list2 = compare[first_idx:] + compare[:first_idx]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 둘 중 하나 맞으면 good puzzle</span></span><br><span class="line"><span class="keyword">if</span> sequence == new_list1 <span class="keyword">or</span> sequence == new_list2:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;good puzzle&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;bad puzzle&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="소스코드-1"><a href="#소스코드-1" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">sequence = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">compare = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line"></span><br><span class="line">new_list1 = []</span><br><span class="line">new_list2 = []</span><br><span class="line"></span><br><span class="line">first_idx = compare.index(sequence[<span class="number">0</span>])  <span class="comment"># 기준점</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 순방향인 경우</span></span><br><span class="line">start = first_idx - N</span><br><span class="line">end = first_idx</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">    new_list1.append(compare[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 역방향인 경우</span></span><br><span class="line">start = first_idx</span><br><span class="line">end = first_idx - N</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end, -<span class="number">1</span>):</span><br><span class="line">    new_list2.append(compare[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 둘 중 하나 맞으면 good puzzle</span></span><br><span class="line"><span class="keyword">if</span> sequence == new_list1 <span class="keyword">or</span> sequence == new_list2:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;good puzzle&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;bad puzzle&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">5</span></span><br><span class="line"><span class="string">1 2 3 4 5</span></span><br><span class="line"><span class="string">3 4 5 1 2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6</span></span><br><span class="line"><span class="string">1 2 3 4 5 6</span></span><br><span class="line"><span class="string">3 2 1 6 5 4</span></span><br><span class="line"><span class="string">4 5 6 1 2 3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">11</span></span><br><span class="line"><span class="string">11 10 9 8 7 6 5 4 3 2 1</span></span><br><span class="line"><span class="string">1 2 3 4 5 6 7 8 9 10 11</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8D%B1/">덱</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/24/BAEKJOON-15501-21-07-24/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] [2019 카카오 개발자 겨울 인턴십] 크레인 인형뽑기 게임</title>
      <link>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-KAKAO-INTERN-2019-1_claw%20crane-21-07-24/</link>
      <guid>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-KAKAO-INTERN-2019-1_claw%20crane-21-07-24/</guid>
      <pubDate>Sat, 24 Jul 2021 05:25:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/64061&quot;&gt;[2019 카카오 개발자 겨울 인턴십] 크레인 인형뽑기 게임&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;&lt;p&gt;게임개발자인 “죠르디”는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.&lt;br&gt;“죠르디”는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/69f1cd36-09f4-4435-8363-b71a650f7448/crane_game_101.png&quot; alt=&quot;crane_game_101.png&quot;&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://programmers.co.kr/learn/courses/30/lessons/64061">[2019 카카오 개발자 겨울 인턴십] 크레인 인형뽑기 게임</a> </p><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>게임개발자인 “죠르디”는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.<br>“죠르디”는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/69f1cd36-09f4-4435-8363-b71a650f7448/crane_game_101.png" alt="crane_game_101.png"></p><p>게임 화면은 <strong>“1 x 1”</strong> 크기의 칸들로 이루어진 <strong>“N x N”</strong> 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 “5 x 5” 크기의 예시입니다). 각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 빈칸입니다. 모든 인형은 “1 x 1” 크기의 격자 한 칸을 차지하며 <strong>격자의 가장 아래 칸부터 차곡차곡 쌓여 있습니다.</strong> 게임 사용자는 크레인을 좌우로 움직여서 멈춘 위치에서 가장 위에 있는 인형을 집어 올릴 수 있습니다. 집어 올린 인형은 바구니에 쌓이게 되는 데, 이때 바구니의 가장 아래 칸부터 인형이 순서대로 쌓이게 됩니다. 다음 그림은 [1번, 5번, 3번] 위치에서 순서대로 인형을 집어 올려 바구니에 담은 모습입니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/638e2162-b1e4-4bbb-b0d7-62d31e97d75c/crane_game_102.png" alt="crane_game_102.png"></p><p>만약 같은 모양의 인형 두 개가 바구니에 연속해서 쌓이게 되면 두 인형은 터뜨려지면서 바구니에서 사라지게 됩니다. 위 상태에서 이어서 [5번] 위치에서 인형을 집어 바구니에 쌓으면 같은 모양 인형 <strong>두 개</strong>가 없어집니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/8569d736-091e-4771-b2d3-7a6e95a20c22/crane_game_103.gif" alt="crane_game_103.gif"></p><p>크레인 작동 시 인형이 집어지지 않는 경우는 없으나 만약 인형이 없는 곳에서 크레인을 작동시키는 경우에는 아무런 일도 일어나지 않습니다. 또한 바구니는 모든 인형이 들어갈 수 있을 만큼 충분히 크다고 가정합니다. (그림에서는 화면표시 제약으로 5칸만으로 표현하였음)</p><p>게임 화면의 격자의 상태가 담긴 2차원 배열 board와 인형을 집기 위해 크레인을 작동시킨 위치가 담긴 배열 moves가 매개변수로 주어질 때, 크레인을 모두 작동시킨 후 터트려져 사라진 인형의 개수를 return 하도록 solution 함수를 완성해주세요.</p><hr><h3 id="제한"><a href="#제한" class="headerlink" title="제한"></a>제한</h3><ul><li>board 배열은 2차원 배열로 크기는 “5 x 5” 이상 “30 x 30” 이하입니다.</li><li>board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.<ul><li>0은 빈 칸을 나타냅니다.</li><li>1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</li></ul></li><li>moves 배열의 크기는 1 이상 1,000 이하입니다.</li><li>moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</li></ul><hr><h3 id="입출력"><a href="#입출력" class="headerlink" title="입출력"></a>입출력</h3><table><thead><tr><th>board</th><th>moves</th><th>result</th></tr></thead><tbody><tr><td>[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</td><td>[1,5,3,5,1,2,1,4]</td><td>4</td></tr></tbody></table><hr><h3 id="입출력-예-1"><a href="#입출력-예-1" class="headerlink" title="입출력 예 1"></a>입출력 예 1</h3><p>인형의 처음 상태는 문제에 주어진 예시와 같습니다. 크레인이 [1, 5, 3, 5, 1, 2, 1, 4] 번 위치에서 차례대로 인형을 집어서 바구니에 옮겨 담은 후, 상태는 아래 그림과 같으며 바구니에 담는 과정에서 터트려져 사라진 인형은 4개 입니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/bb0f59c7-6b72-485a-8302-217fe53ea88f/crane_game_104.jpg" alt="crane_game_104.jpg"></p><hr><h3 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h3><ul><li></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">board, moves</span>):</span></span><br><span class="line">    N = <span class="built_in">len</span>(board)  <span class="comment"># 보드의 길이</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    basket = []</span><br><span class="line">    <span class="keyword">for</span> move <span class="keyword">in</span> moves:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">            <span class="keyword">if</span> board[i][move - <span class="number">1</span>] &gt; <span class="number">0</span>:  <span class="comment"># Move별로 맨 위에 있는 인형을 바구니에 넣고, 빈칸으로 전환</span></span><br><span class="line">                basket.append(board[i][move - <span class="number">1</span>])</span><br><span class="line">                board[i][move - <span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(basket) &gt; <span class="number">1</span>:  <span class="comment"># 바구니가 2개이상일 때부터</span></span><br><span class="line">            <span class="keyword">if</span> basket[-<span class="number">1</span>] == basket[-<span class="number">2</span>]:  <span class="comment"># 가장 최신에 들어온 것과 그 전에 들어온 것이 같으면 두개 삭제</span></span><br><span class="line">                basket.pop()</span><br><span class="line">                basket.pop()</span><br><span class="line">                answer += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solution([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>], [<span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>]],</span><br><span class="line">               [<span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%9D%B8%ED%84%B4/">카카오 인턴</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/24/PROGRAMMERS-KAKAO-INTERN-2019-1_claw%20crane-21-07-24/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 07월 23일 금요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/07/23/21-07-23-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/07/23/21-07-23-IT_News/</guid>
      <pubDate>Fri, 23 Jul 2021 02:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-NHN페이코-오프라인-결제-인프라-확대…’페이코-단말기’-보급한다&quot;&gt;&lt;a href=&quot;#1-NHN페이코-오프라인-결제-인프라-확대…’페이코-단말기’-보급한다&quot; class=&quot;headerlink&quot; title=&quot;1. NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다&quot;&gt;&lt;/a&gt;1. NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=sec&amp;sid1=105&amp;oid=421&amp;aid=0005491374&quot;&gt;NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/421/2021/07/21/0005491374_001_20210721133115360.jpg?type=w647&quot; alt=&quot;© 뉴스1&quot;&gt;&lt;/p&gt;
&lt;p&gt;NHN페이코는 자체 개발한 ‘페이코(PAYCO) 결제 단말기’의 보급을 통해 오프라인 결제 인프라(기반시설) 확대에 나선다고 21일 밝혔다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;페이코 결제 단말기(C2100)는 서명 패드와 각종 결제 리더기를 일체화한 올인원 단말로 IC, 마그네틱, NFC, QR·바코드, 비자(VISA) 콘택트리스(비접촉식) 결제를 모두 지원하고 전후면에 고해상도 LCD와 IC카드 슬롯을 각각 탑재해 가맹점주, 고객의 양방향 결제가 가능한 것이 특징이다.&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-NHN페이코-오프라인-결제-인프라-확대…’페이코-단말기’-보급한다"><a href="#1-NHN페이코-오프라인-결제-인프라-확대…’페이코-단말기’-보급한다" class="headerlink" title="1. NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다"></a>1. NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=sec&sid1=105&oid=421&aid=0005491374">NHN페이코, 오프라인 결제 인프라 확대…’페이코 단말기’ 보급한다</a></p><p><img src="https://imgnews.pstatic.net/image/421/2021/07/21/0005491374_001_20210721133115360.jpg?type=w647" alt="© 뉴스1"></p><p>NHN페이코는 자체 개발한 ‘페이코(PAYCO) 결제 단말기’의 보급을 통해 오프라인 결제 인프라(기반시설) 확대에 나선다고 21일 밝혔다.</p><ul><li>페이코 결제 단말기(C2100)는 서명 패드와 각종 결제 리더기를 일체화한 올인원 단말로 IC, 마그네틱, NFC, QR·바코드, 비자(VISA) 콘택트리스(비접촉식) 결제를 모두 지원하고 전후면에 고해상도 LCD와 IC카드 슬롯을 각각 탑재해 가맹점주, 고객의 양방향 결제가 가능한 것이 특징이다.</li></ul><p>신종 코로나바이러스 감염증(코로나19)로 수요가 확대된 QR·바코드 결제는 별도 리더기 없이 내장 카메라를 통해 지원하고 카드를 긁거나 삽입하지 않고 단말기에 대는 것만으로 결제가 이뤄지는 비자 콘택트리스 결제도 가능하다. </p><ul><li>비자 콘택트리스는 EMV 규격 기반의 IC칩 보안 기술 및 비자 토큰 서비스(VTS·Visa Token Service)를 적용해 편의성과 보안성을 높인 결제 기술이다.</li></ul><p>NHN페이코는 동반성장위원회 지원사업을 시작으로 향후 주요 VAN사와 협력해 단말기 보급을 본격적으로 확대해 나갈 계획으로  다양한 업종에서 페이코 결제 인프라를 지속적으로 확대하기로 했으며, 기존 단말기가 QR·바코드 결제를 지원하지 않아 페이코 결제 도입이 어려웠던 매장이 가맹점으로 유입되는 효과가 있을 것으로 기대된다.</p><hr><h2 id="2-네이버-매출-절반이-‘신사업’-e커머스·핀테크-성장-힘준다"><a href="#2-네이버-매출-절반이-‘신사업’-e커머스·핀테크-성장-힘준다" class="headerlink" title="2. 네이버, 매출 절반이 ‘신사업’ e커머스·핀테크 성장 힘준다"></a>2. 네이버, 매출 절반이 ‘신사업’ e커머스·핀테크 성장 힘준다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=014&aid=0004679895">네이버, 매출 절반이 ‘신사업’ e커머스·핀테크 성장 힘준다</a></p><p><img src="https://imgnews.pstatic.net/image/014/2021/07/22/0004679895_001_20210722184105567.jpg?type=w647"></p><p>올 2·4분기 매출 1조6635억원 중 절반 이상을 △e커머스(3653억원) △핀테크(2326억원) △콘텐츠(1448억원) △클라우드(949억원)에서 벌어들인 것으로 이는 검색·디스플레이 광고가 핵심인 서치플랫폼 매출(8260억원)을 넘어선 규모다. </p><h3 id="스마트스토어-당일배송-신용대출"><a href="#스마트스토어-당일배송-신용대출" class="headerlink" title="스마트스토어 당일배송-신용대출"></a>스마트스토어 당일배송-신용대출</h3><p>네이버 스마트스토어 46만 판매자들 대상으로 ‘네이버 풀필먼트 얼라이언스(NFA)’를 출시하고, CJ대한통운과 전국 당일배송 풀필먼트 체계를 구축하기로 했으며, 핀테크 부문 관련 네이버파이낸셜 신용평가모델을 더욱 정교화해 더 많은 네이버페이 이용자들이 다양한 혜택을 누릴 수 있도록 할 것이라고 했으며, 네이버는 사업자 전용 신용대출 등 기업간거래(B2B) 분야 핀테크 역량도 강화한다. </p><h3 id="미래먹거리-‘제페토’-매출-70-늘어"><a href="#미래먹거리-‘제페토’-매출-70-늘어" class="headerlink" title="미래먹거리 ‘제페토’, 매출 70% 늘어"></a>미래먹거리 ‘제페토’, 매출 70% 늘어</h3><p>메타버스 플랫폼 ‘제페토’ 관련, “전 세계 이용자가 2억명에 달하는 제페토는 최근 삼성전자, 현대차, 구찌, 디올 등의 광고 확대로 매출이 전년 대비 70% 이상 성장했다”면서 “이용자가 직접 아바타 아이템을 만들 수 있는 ‘제페토 스튜디오’에서 게임까지 제작할 수 있는 기능을 연내 출시할 계획”이라고 밝혔다.</p><hr><h2 id="3-“야놀자가-우리몫-다-뺏는다”-모텔-사장님들-뿔났다"><a href="#3-“야놀자가-우리몫-다-뺏는다”-모텔-사장님들-뿔났다" class="headerlink" title="3. “야놀자가 우리몫 다 뺏는다” 모텔 사장님들 뿔났다"></a>3. “야놀자가 우리몫 다 뺏는다” 모텔 사장님들 뿔났다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=016&aid=0001865276">“야놀자가 우리몫 다 뺏는다” 모텔 사장님들 뿔났다</a></p><p><img src="https://imgnews.pstatic.net/image/016/2021/07/22/20210722000882_0_20210722204503177.jpg?type=w647" alt="야놀자 사옥 전경 [야놀자 제공, 123RF, 망고보드]"></p><p>여행 플랫폼 ‘야놀자’의 광고 수수료 체계가 ‘지역 톱’ ‘지역 인기’ ‘지역 리스트’ 등 성격이 겹치는 카테고리를 여러 개 만들어 각각 광고료를 책정하는 정책 때문에 숙박업주들에게 과도한 부담을 지우고 있다는 불만이 커지고 있다. </p><p>22일 헤럴드경제 취재를 종합하면, 숙박업소 단체 대한숙박업중앙회의 일부 지회는 야놀자의 광고 및 수수료 체계의 불공정함을 지적하기 위한 단체 행동을 준비하고 있고 일부 업주는 공정거래위원회 국민신문고에 민원을 접수하고 야놀자 측 소명을 기다리고 있는 상황이다.</p><hr><h2 id="4-“콘텐츠-대전-시작됐다”…네이버-vs-카카오-주도권-싸움-치열"><a href="#4-“콘텐츠-대전-시작됐다”…네이버-vs-카카오-주도권-싸움-치열" class="headerlink" title="4. “콘텐츠 대전 시작됐다”…네이버 vs 카카오, 주도권 싸움 치열"></a>4. “콘텐츠 대전 시작됐다”…네이버 vs 카카오, 주도권 싸움 치열</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=029&aid=0002688735">“콘텐츠 대전 시작됐다”…네이버 vs 카카오, 주도권 싸움 치열</a></p><p><img src="https://imgnews.pstatic.net/image/029/2021/07/23/0002688735_001_20210723084204580.jpg?type=w647" alt="네이버 제공"></p><p><img src="https://imgnews.pstatic.net/image/029/2021/07/23/0002688735_002_20210723084204592.jpg?type=w647" alt="카카오웹툰 제공"></p><p>네이버는 왓패드 웹툰 스튜디오를 앞세워 글로벌 창작자 약 570만명이 만든 10억개 이상의 원천 콘텐츠를 바탕으로 드라마·영화·애니메이션 등 다양한 영상화 프로젝트를 선보인다는 구상으로 특히 1000억원 규모의 펀드를 조성하고 남미·유럽·동남아시아 등 글로벌 영상화 사업에서 두각을 나타낼 방침이다.</p><p>다음웹툰컴퍼니도 8월부터 ‘카카오웹툰 스튜디오’로 거듭나며, 기존 다음웹툰은 물론 ‘이태원 클라쓰’ ‘나 혼자만 레벨업’ ‘사내맞선’ ‘나빌레라’ ‘승리호’ ‘경이로운 소문’ ‘취향저격 그녀’ 등 카카오페이지의 콘텐츠 IP도 통합해 제공한다.</p><hr><h2 id="5-저커버그-“메타버스는-모바일-인터넷의-진정한-후계자”"><a href="#5-저커버그-“메타버스는-모바일-인터넷의-진정한-후계자”" class="headerlink" title="5. 저커버그 “메타버스는 모바일 인터넷의 진정한 후계자”"></a>5. 저커버그 “메타버스는 모바일 인터넷의 진정한 후계자”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=023&aid=0003628907">저커버그 “메타버스는 모바일 인터넷의 진정한 후계자”</a></p><p>마크 저커버그는 22일(현지시각) 미 IT 전문매체인 더버지와 인터뷰를 갖고  “메타버스는 매우 거대한 주제”라며 “메타버스는 모바일 인터넷의 후계자”라고 했으며, “많은 사람들이 메타버스를 단순히 게임의 한 부분이 될 것이라고 생각하지만, 그것을 뛰어넘을 것”이라며 “나는 메타버스가 기술 산업의 다음 장을 여는 큰 부분이 될 것이라고 본다”고 했다.</p><p>저커버그가 생각하는 메타버스는 현재 테크 기업들이 내놓은 메타버스 플랫폼과는 다른 형태로 현재 게임 로블록스나 네이버의 제페토 등 메타버스를 기반으로 한 플랫폼이 존재하지만 그는 “메타버스는 공공장소 같은 온라인 공간이 돼야 한다”며 “사람들이 공동으로 상호작용하는 모든 것이 메타버스여야 한다. 각 회사마다의 자체 메타버스는 없어야 한다”고 주장했다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%A9%94%ED%83%80%EB%B2%84%EC%8A%A4/">메타버스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4/">카카오</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%BC%EB%86%80%EC%9E%90/">야놀자</category>
      
      <category domain="https://chlee1001.github.io/tags/IP/">IP</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%80%ED%85%8C%ED%81%AC/">핀테크</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B6%81/">페이스북</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B4%91%EA%B3%A0/">광고</category>
      
      <category domain="https://chlee1001.github.io/tags/e%EC%BB%A4%EB%A8%B8%EC%8A%A4/">e커머스</category>
      
      <category domain="https://chlee1001.github.io/tags/NHN%ED%8E%98%EC%9D%B4%EC%BD%94/">NHN페이코</category>
      
      <category domain="https://chlee1001.github.io/tags/QR%EC%BD%94%EB%93%9C%EA%B2%B0%EC%A0%9C/">QR코드결제</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%EC%9B%B9%ED%88%B0/">카카오웹툰</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%99%93%ED%8C%A8%EB%93%9C-%EC%9B%B9%ED%88%B0-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4/">왓패드 웹툰 스튜디오</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/23/21-07-23-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 20301번 반전 요세푸스</title>
      <link>https://chlee1001.github.io/2021/07/23/BAEKJOON-20301-21-07-23/</link>
      <guid>https://chlee1001.github.io/2021/07/23/BAEKJOON-20301-21-07-23/</guid>
      <pubDate>Fri, 23 Jul 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/20301&quot;&gt;[백준] 20301번 반전 요세푸스&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;1 초 (추가 시간 없음)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1024 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;467&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;248&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;201&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;54.918%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/20301">[백준] 20301번 반전 요세푸스</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">1 초 (추가 시간 없음)</td><td align="left">1024 MB</td><td align="left">467</td><td align="left">248</td><td align="left">201</td><td align="left">54.918%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>요세푸스 문제는 다음과 같다.</p><p>1번 사람 오른쪽에는 2번 사람이 앉아 있고, 2번 사람 오른쪽에는 3번 사람이 앉아 있고, 계속하여 같은 방식으로 N명의 사람들이 원을 이루며 앉아 있다. N번 사람 오른쪽에는 1번 사람이 앉아 있다. 이제 K(≤N)번 사람을 우선 제거하고, 이후 직전 제거된 사람의 오른쪽의 K번째 사람을 계속 제거해 나간다. 모든 사람이 제거되었을 때, 제거된 사람의 순서는 어떻게 될까?</p><p>이 문제의 답을 <strong>(N, K)–요세푸스 순열</strong>이라고 하며, (7, 3)–요세푸스 순열은 ⟨3,6,2,7,5,1,4⟩가 된다.</p><p>하지만 한 방향으로만 계속 돌아가는 건 너무 지루하다. 따라서 요세푸스 문제에 재미를 더하기 위해 M명의 사람이 제거될 때마다 원을 돌리는 방향을 계속해서 바꾸려고 한다. 이렇게 정의된 새로운 문제의 답을 <strong>(N, K, M)–반전 요세푸스 순열</strong>이라고 하며, (7, 3, 4)–반전 요세푸스 순열은 ⟨3,6,2,7,1,5,4⟩가 된다.</p><p>N, K, M이 주어질 때, (N, K, M)–반전 요세푸스 순열을 계산해 보자.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>첫째 줄에 정수 N, K, M이 주어진다. (1≤N≤5 000, 1≤K,M≤N)</p><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>(N, K, M)–반전 요세푸스 순열을 이루는 수들을 한 줄에 하나씩 순서대로 출력한다.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 3 4</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">2</span><br><span class="line">7</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">4</span><br></pre></td></tr></table></figure><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li><a href="https://www.acmicpc.net/category/5">University</a> &gt; <a href="https://www.acmicpc.net/category/83">서강대학교</a> &gt; <a href="https://www.acmicpc.net/category/detail/2355">2020 Sogang Programming Contest (Master)</a> C번<ul><li>문제를 검수한 사람: <a href="https://www.acmicpc.net/user/gumgood">gumgood</a>, <a href="https://www.acmicpc.net/user/jhnah917">jhnah917</a>, <a href="https://www.acmicpc.net/user/pichulia">pichulia</a>, <a href="https://www.acmicpc.net/user/QuqqU">QuqqU</a>, <a href="https://www.acmicpc.net/user/rhs0266">rhs0266</a>, <a href="https://www.acmicpc.net/user/shiftpsh">shiftpsh</a>, <a href="https://www.acmicpc.net/user/sogangcse">sogangcse</a>, <a href="https://www.acmicpc.net/user/woonikim">woonikim</a></li><li>문제를 만든 사람: <a href="https://www.acmicpc.net/user/sbrus_1213">sbrus_1213</a></li></ul></li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/102">구현</a></li><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/141">시뮬레이션</a></li><li><a href="https://www.acmicpc.net/problem/tag/73">덱</a></li></ul><hr><h3 id="소스코드-최초"><a href="#소스코드-최초" class="headerlink" title="소스코드 (최초)"></a>소스코드 (최초)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N, K, M = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line">people = deque(x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">direction = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> people:</span><br><span class="line">    <span class="keyword">if</span> direction:  <span class="comment"># 오른쪽</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(K - <span class="number">1</span>):</span><br><span class="line">            people.append(people[<span class="number">0</span>])</span><br><span class="line">            people.popleft()</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> direction:  <span class="comment"># 왼쪽</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">            people.appendleft(people.pop())</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(people.popleft())</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> count == M:</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        direction = <span class="keyword">not</span> direction</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="소스코드-수정"><a href="#소스코드-수정" class="headerlink" title="소스코드 (수정)"></a>소스코드 (수정)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N, K, M = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line">people = deque(x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> people:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(M):</span><br><span class="line">        people.rotate(-(K - <span class="number">1</span>))  <span class="comment"># 오른쪽</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> people:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(people.popleft())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(M):</span><br><span class="line">        people.rotate(K)  <span class="comment"># 왼쪽</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> people:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(people.popleft())</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%90/">큐</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/">시뮬레이션</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/23/BAEKJOON-20301-21-07-23/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 2346번 풍선 터뜨리기</title>
      <link>https://chlee1001.github.io/2021/07/23/BAEKJOON-2346-21-07-23/</link>
      <guid>https://chlee1001.github.io/2021/07/23/BAEKJOON-2346-21-07-23/</guid>
      <pubDate>Fri, 23 Jul 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/2346&quot;&gt;[백준] 2346번 풍선 터뜨리기&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;4 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;7479&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2869&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2217&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;40.464%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/2346">[백준] 2346번 풍선 터뜨리기</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">2 초</td><td align="left">4 MB</td><td align="left">7479</td><td align="left">2869</td><td align="left">2217</td><td align="left">40.464%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>1번부터 N번까지 N개의 풍선이 원형으로 놓여 있고. i번 풍선의 오른쪽에는 i+1번 풍선이 있고, 왼쪽에는 i-1번 풍선이 있다. 단, 1번 풍선의 왼쪽에 N번 풍선이 있고, N번 풍선의 오른쪽에 1번 풍선이 있다. 각 풍선 안에는 종이가 하나 들어있고, 종이에는 -N보다 크거나 같고, N보다 작거나 같은 정수가 하나 적혀있다. 이 풍선들을 다음과 같은 규칙으로 터뜨린다.</p><p>우선, 제일 처음에는 1번 풍선을 터뜨린다. 다음에는 풍선 안에 있는 종이를 꺼내어 그 종이에 적혀있는 값만큼 이동하여 다음 풍선을 터뜨린다. 양수가 적혀 있을 경우에는 오른쪽으로, 음수가 적혀 있을 때는 왼쪽으로 이동한다. 이동할 때에는 이미 터진 풍선은 빼고 이동한다.</p><p>예를 들어 다섯 개의 풍선 안에 차례로 3, 2, 1, -3, -1이 적혀 있었다고 하자. 이 경우 3이 적혀 있는 1번 풍선, -3이 적혀 있는 4번 풍선, -1이 적혀 있는 5번 풍선, 1이 적혀 있는 3번 풍선, 2가 적혀 있는 2번 풍선의 순서대로 터지게 된다.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>첫째 줄에 자연수 N(1 ≤ N ≤ 1,000)이 주어진다. 다음 줄에는 차례로 각 풍선 안의 종이에 적혀 있는 수가 주어진다. 종이에 0은 적혀있지 않다.</p><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>첫째 줄에 터진 풍선의 번호를 차례로 나열한다.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 2 1 -3 -1</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4 5 3 2</span><br></pre></td></tr></table></figure><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li>잘못된 데이터를 찾은 사람: <a href="https://www.acmicpc.net/user/tncks0121">tncks0121</a></li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/73">덱</a></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">balloons = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N + <span class="number">1</span>)]</span><br><span class="line">papers = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line"></span><br><span class="line">bomb = deque()</span><br><span class="line"><span class="keyword">for</span> balloon, paper <span class="keyword">in</span> <span class="built_in">zip</span>(balloons, papers):</span><br><span class="line">    bomb.append([balloon, paper])</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> bomb:</span><br><span class="line">    balloon, paper = bomb.popleft()</span><br><span class="line">    <span class="built_in">print</span>(balloon, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> bomb:</span><br><span class="line">        <span class="keyword">if</span> paper &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(paper - <span class="number">1</span>):</span><br><span class="line">                bomb.append(bomb.popleft())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(-paper):</span><br><span class="line">                bomb.appendleft(bomb.pop())</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%90/">큐</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/23/BAEKJOON-2346-21-07-23/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 5464번 주차장</title>
      <link>https://chlee1001.github.io/2021/07/22/BAEKJOON-5464-21-07-22/</link>
      <guid>https://chlee1001.github.io/2021/07/22/BAEKJOON-5464-21-07-22/</guid>
      <pubDate>Thu, 22 Jul 2021 08:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/5464&quot;&gt;[백준] 5464번 주차장&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;1 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;128 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;186&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;109&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;96&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;61.146%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/5464">[백준] 5464번 주차장</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">1 초</td><td align="left">128 MB</td><td align="left">186</td><td align="left">109</td><td align="left">96</td><td align="left">61.146%</td></tr></tbody></table><hr><h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>시내 주차장은 1부터 N까지 번호가 매겨진 N개의 주차 공간을 가지고 있다. 이 주차장은 매일 아침 모든 주차 공간이 비어 있는 상태에서 영업을 시작하며, 하룻동안 다음과 같은 방식으로 운영된다. 차가 주차장에 도착하면, 주차장 관리인이 비어있는 주차 공간이 있는지를 검사한다. 만일 비어있는 공간이 없으면, 차량을 빈 공간이 생길 때까지 입구에서 기다리게 한다. 만일 빈 주차 공간이 하나만 있거나 또는 빈 주차 공간이 없다가 한 대의 차량이 주차장을 떠나면 곧바로 그 장소에 주차를 하게 한다. 만일 빈 주차 공간이 여러 곳이 있으면, 그 중 번호가 가장 작은 주차 공간에 주차하도록 한다. 만일 주차장에 여러 대의 차량이 도착하면, 일단 도착한 순서대로 입구의 대기장소에서 줄을 서서 기다려야 한다. 대기장소는 큐(queue)와 같이, 먼저 대기한 차량부터 주차한다.</p><p>주차료는 주차한 시간이 아닌 차량의 무게에 비례하는 방식으로 책정된다. 주차료는 차랑의 무게에다 주차 공간마다 따로 책정된 단위 무게당 요금을 곱한 가격이다.</p><p>주차장 관리원은 오늘 M대의 차량이 주차장을 이용할 것이라는 것을 알고 있다. 또한, 차량들이 들어오고 나가는 순서도 알고 있다.</p><p>주차 공간별 요금과 차량들의 무게와 출입 순서가 주어질 때, 오늘 하룻동안 주차장이 벌어들일 총 수입을 계산하는 프로그램을 작성하라.</p><hr><h3 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h3><p>반드시 표준 입력으로부터 다음의 데이터를 읽어야 한다.</p><ul><li><p>첫 번째 줄에는 정수 N과 M이 빈칸을 사이에 두고 주어진다.</p></li><li><p>그 다음 N개의 줄에는 주차 공간들의 단위 무게당 요금을 나타내는 정수들이 주어진다. 그 중 s번째 줄에는 주차 공간 s의 단위 무게당 요금 Rs가 들어있다.</p></li><li><p>그 다음 M개의 줄에는 차량들의 무게를 나타내는 정수들이 주어진다. 차량들은 1 부터 M 까지 번호로 구분되고, 이 번호는 출입 순서와는 상관없다. 이 M개의 줄 중 k번째 줄에는 차량 k의 무게를 나타내는 정수 Wk가 들어있다.</p></li><li><p>그 다음 2*M 개의 줄에는 차량들의 주차장 출입 순서를 나타내는 정수들이 한 줄에 하나씩 주어진다. 양의 정수 i는 차량 i가 주차장에 들어오는 것을 의미하고, 음의 정수 -i는 차량 i가 주차장에서 나가는 것을 의미한다. 주차장에 들어오지 않은 차량이 주차장에서 나가는 경우는 없다. 1 번부터 M 번까지 모든 차량은 정확하게 한 번씩 주차장에 들어오고, 한 번씩 주차장에서 나간다. 또한 입구에서 대기 중인 차량이 주차를 하지 못하고 나가는 경우는 없다.</p></li><li><p>1 ≤ N ≤ 100 주차 공간의 수</p></li><li><p>1 ≤ M ≤ 2,000 차량의 수</p></li><li><p>1 ≤ Rs ≤ 100 주차 공간 s의 단위 무게당 요금</p></li><li><p>1 ≤ Wk ≤ 10,000 차량 k의 무게</p></li></ul><hr><h3 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h3><p>출력은 반드시 표준 출력으로 하여야 하며, 하나의 줄에 한 개의 정수를 출력한다. 이 정수는 오늘 하룻동안 주차장이 벌어들인 총 수입이다.</p><hr><h3 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">200</span><br><span class="line">100</span><br><span class="line">300</span><br><span class="line">800</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">-3</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">-4</span><br><span class="line">-2</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h3 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5300</span><br></pre></td></tr></table></figure><h3 id="예제-입력-2"><a href="#예제-입력-2" class="headerlink" title="예제 입력 2"></a>예제 입력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br><span class="line">5</span><br><span class="line">2</span><br><span class="line">100</span><br><span class="line">500</span><br><span class="line">1000</span><br><span class="line">2000</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">-1</span><br><span class="line">-3</span><br><span class="line">-2</span><br><span class="line">-4</span><br></pre></td></tr></table></figure><h3 id="예제-출력-2"><a href="#예제-출력-2" class="headerlink" title="예제 출력 2"></a>예제 출력 2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16200</span><br></pre></td></tr></table></figure><hr><h3 id="힌트"><a href="#힌트" class="headerlink" title="힌트"></a>힌트</h3><ul><li>차량 3이 주차 공간 1에 주차한다. 주차료는 300 * 2 = 600 이다.</li><li>차량 2가 주차 공간 2에 주차한다. 주차료는 100 * 3 = 300 이다.</li><li>차량 1이 차랑 3이 떠난 주차공간 1에 주차한다. 주차료는 200 * 2 = 400 이다.</li><li>차량 4가 마지막 남은 주차 공간 3에 주차한다. 주차료는 800 * 5 = 4,000 이다.</li></ul><hr><h3 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h3><ul><li><a href="https://www.acmicpc.net/category/2">Olympiad</a> &gt; <a href="https://www.acmicpc.net/category/99">International Olympiad in Informatics</a> &gt; <a href="https://www.acmicpc.net/category/detail/526">IOI 2009</a> 5번</li></ul><hr><h3 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h3><ul><li><a href="https://www.acmicpc.net/problem/tag/102">구현</a></li><li><a href="https://www.acmicpc.net/problem/tag/175">자료 구조</a></li><li><a href="https://www.acmicpc.net/problem/tag/141">시뮬레이션</a></li><li><a href="https://www.acmicpc.net/problem/tag/72">큐</a></li></ul><hr><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N, M = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="comment"># N~: 단위 무게당 요금을 나타내는 정수, N: 주차공간 1,2,3....</span></span><br><span class="line"><span class="comment"># M~: 차량들의 무게</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fees = [<span class="built_in">int</span>(<span class="built_in">input</span>()) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">weights = [<span class="built_in">int</span>(<span class="built_in">input</span>()) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(M)]</span><br><span class="line"></span><br><span class="line">parking = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(M + <span class="number">1</span>):</span><br><span class="line">    parking[i + <span class="number">1</span>] = []</span><br><span class="line"></span><br><span class="line">waiting = deque()</span><br><span class="line">total_fee = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">parking_idx = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">heapq.heapify(parking_idx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span> * M):</span><br><span class="line">    <span class="keyword">if</span> parking_idx <span class="keyword">and</span> waiting:</span><br><span class="line">        car_num = waiting.popleft()</span><br><span class="line">        idx = heapq.heappop(parking_idx)</span><br><span class="line">        parking[car_num] = [idx, fees[idx], weights[car_num - <span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    car_num = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="keyword">if</span> car_num &gt; <span class="number">0</span>:  <span class="comment"># 입차</span></span><br><span class="line">        <span class="keyword">if</span> parking_idx:</span><br><span class="line">            idx = heapq.heappop(parking_idx)</span><br><span class="line">            parking[car_num] = [idx, fees[idx], weights[car_num - <span class="number">1</span>]]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            waiting.append(car_num)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        car_num = <span class="built_in">abs</span>(car_num)</span><br><span class="line">        idx = parking[car_num][<span class="number">0</span>]</span><br><span class="line">        fee = parking[car_num][<span class="number">1</span>]</span><br><span class="line">        weight = parking[car_num][<span class="number">2</span>]</span><br><span class="line">        total_fee += fee * weight</span><br><span class="line">        heapq.heappush(parking_idx, idx)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(total_fee)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%90/">큐</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/">시뮬레이션</category>
      
      
      <comments>https://chlee1001.github.io/2021/07/22/BAEKJOON-5464-21-07-22/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
