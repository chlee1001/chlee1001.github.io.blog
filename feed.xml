<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CH Blog | 기술 블로그</title>
    <link>https://chlee1001.github.io/</link>
    
    <atom:link href="https://chlee1001.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description>Chaehyeon&#39;s Dev Blog</description>
    <pubDate>Sun, 02 Jan 2022 14:55:36 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[JS] ES6 - Promise</title>
      <link>https://chlee1001.github.io/2022/01/03/JS-ES6-8-22-01-03/</link>
      <guid>https://chlee1001.github.io/2022/01/03/JS-ES6-8-22-01-03/</guid>
      <pubDate>Sun, 02 Jan 2022 15:00:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - Promise
&lt;/aside&gt;

&lt;h1 id=&quot;Promises&quot;&gt;&lt;a href=&quot;#Promises&quot; class=&quot;headerlink&quot; title=&quot;Promises&quot;&gt;&lt;/a&gt;Promises&lt;/h1&gt;&lt;h2 id=&quot;async&quot;&gt;&lt;a href=&quot;#async&quot; class=&quot;headerlink&quot; title=&quot;async&quot;&gt;&lt;/a&gt;async&lt;/h2&gt;&lt;p&gt;자바스크립트는 순차적으로 처리되는게 아니라 한꺼번에 실행된다. ⇒ 자바스크립트의 비동기성(async)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - Promise</aside><h1 id="Promises"><a href="#Promises" class="headerlink" title="Promises"></a>Promises</h1><h2 id="async"><a href="#async" class="headerlink" title="async"></a>async</h2><p>자바스크립트는 순차적으로 처리되는게 아니라 한꺼번에 실행된다. ⇒ 자바스크립트의 비동기성(async)</p><p>이벤트 루프에서 비동기적으로 실행시킨다.</p><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>Promise는 비동기 작업이 맞이할 미래의 완료 또는 실패와 그 결과 값을 나타낸다.</p><p>내가 아직 모르는 값이랑 같이 일하게 해준다</p><p>금방 끝나진 않겠지만 곧 오면 이걸 가지고 작업할 게 표시 해주는 것</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promiseTest1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">3000</span>, <span class="string">&quot;Test Pass&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// setInterval(console.log, 1000, promiseTest1);</span></span><br><span class="line">promiseTest1.then(<span class="function">(<span class="params">value</span>) =&gt;</span> <span class="built_in">console</span>.log(value));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> promiseTest1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(reject, <span class="number">3000</span>, <span class="string">&quot;Test Fail&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// setInterval(console.log, 1000, promiseTest1);</span></span><br><span class="line">promiseTest1</span><br><span class="line">  .then(<span class="function">(<span class="params">value</span>) =&gt;</span> <span class="built_in">console</span>.log(value))</span><br><span class="line">  .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> <span class="built_in">console</span>.log(error));</span><br></pre></td></tr></table></figure><h2 id="Chaining-Promise"><a href="#Chaining-Promise" class="headerlink" title="Chaining Promise"></a>Chaining Promise</h2><p>.then().then()…. 할때 리턴 필요</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promiseTest2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  resolve(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">promiseTest2</span><br><span class="line">  .then(<span class="function">(<span class="params">number</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(number * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> number * <span class="number">2</span>;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">otherNumber</span>) =&gt;</span> <span class="built_in">console</span>.log(otherNumber * <span class="number">2</span>)); </span><br></pre></td></tr></table></figure><h2 id="Propmise-all"><a href="#Propmise-all" class="headerlink" title="Propmise.all"></a>Propmise.all</h2><p>Promise.all은 주어진 모든 Promise를 실행한 후 진행되는 하나의 Promise를 반환한다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Promise.all</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">5000</span>, <span class="string">&quot;first&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">1000</span>, <span class="string">&quot;second&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">3000</span>, <span class="string">&quot;third&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> motherPromise = <span class="built_in">Promise</span>.all([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line">motherPromise</span><br><span class="line">  .then(<span class="function">(<span class="params">values</span>) =&gt;</span> <span class="built_in">console</span>.log(values))</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 모든 프로미스가 resolve 해야지 출력</span></span><br><span class="line"><span class="comment">// 5초후 마지막 first 끝나야 최종출력</span></span><br><span class="line"><span class="comment">// 중간에 reject 뜨면 바로 중단</span></span><br></pre></td></tr></table></figure><h2 id="Promise-race"><a href="#Promise-race" class="headerlink" title="Promise.race"></a>Promise.race</h2><p>기본적으로 promise all이랑 같지만 하나만 resolve 되거나 reject하면 된다. 가장 빨리 리턴 되는 걸로 결정, 부모프로미스를 차지하고 그 값 하나 리턴함</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Promise.race</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">const</span> motherPromise2 = <span class="built_in">Promise</span>.race([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line"> motherPromise2</span><br><span class="line">   .then(<span class="function">(<span class="params">values</span>) =&gt;</span> <span class="built_in">console</span>.log(values))</span><br><span class="line">   .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(err));</span><br><span class="line"></span><br><span class="line"><span class="comment">// second</span></span><br></pre></td></tr></table></figure><h2 id="finally"><a href="#finally" class="headerlink" title="finally"></a>finally</h2><p>뭘하든 마지막에 실행된다. 보통 작업이 다 끝나고 로딩 끝낼 때 쓴다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Finally</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">3000</span>, <span class="string">&quot;first&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">value</span>) =&gt;</span> <span class="built_in">console</span>.log(value))</span><br><span class="line">  .finally(<span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&quot;I&#x27;m done&quot;</span>));</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/03/JS-ES6-8-22-01-03/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - For</title>
      <link>https://chlee1001.github.io/2022/01/02/JS-ES6-7-22-01-02/</link>
      <guid>https://chlee1001.github.io/2022/01/02/JS-ES6-7-22-01-02/</guid>
      <pubDate>Sun, 02 Jan 2022 10:00:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - For
&lt;/aside&gt;

&lt;h1 id=&quot;For&quot;&gt;&lt;a href=&quot;#For&quot; class=&quot;headerlink&quot; title=&quot;For&quot;&gt;&lt;/a&gt;For&lt;/h1&gt;&lt;h2 id=&quot;forEach&quot;&gt;&lt;a href=&quot;#forEach&quot; class=&quot;headerlink&quot; title=&quot;forEach&quot;&gt;&lt;/a&gt;forEach&lt;/h2&gt;&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; friends = [&lt;span class=&quot;string&quot;&gt;&amp;quot;me&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;you&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;nico&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; addHeart = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;current, index, array &lt;/span&gt;) =&amp;gt;&lt;/span&gt; ( &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(current, index, array));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;friends.forEach(addHeart);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 파라미터 첫번째로 값을 주고 두번째로 인덱스를 주고 세번째로 현재 배열을 준다&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// me 0 [&amp;quot;me&amp;quot;, &amp;quot;you&amp;quot;, &amp;quot;nico&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// you 1 [&amp;quot;me&amp;quot;, &amp;quot;you&amp;quot;, &amp;quot;nico&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// nico 2 [&amp;quot;me&amp;quot;, &amp;quot;you&amp;quot;, &amp;quot;nico&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - For</aside><h1 id="For"><a href="#For" class="headerlink" title="For"></a>For</h1><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> friends = [<span class="string">&quot;me&quot;</span>, <span class="string">&quot;you&quot;</span>, <span class="string">&quot;nico&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addHeart = <span class="function">(<span class="params">current, index, array </span>) =&gt;</span> ( <span class="built_in">console</span>.log(current, index, array));</span><br><span class="line"></span><br><span class="line">friends.forEach(addHeart);</span><br><span class="line"><span class="comment">// 파라미터 첫번째로 값을 주고 두번째로 인덱스를 주고 세번째로 현재 배열을 준다</span></span><br><span class="line"><span class="comment">// me 0 [&quot;me&quot;, &quot;you&quot;, &quot;nico&quot;]</span></span><br><span class="line"><span class="comment">// you 1 [&quot;me&quot;, &quot;you&quot;, &quot;nico&quot;]</span></span><br><span class="line"><span class="comment">// nico 2 [&quot;me&quot;, &quot;you&quot;, &quot;nico&quot;]</span></span><br></pre></td></tr></table></figure><h2 id="for…of"><a href="#for…of" class="headerlink" title="for…of"></a>for…of</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> friend <span class="keyword">of</span> friends) &#123;</span><br><span class="line">  <span class="comment">// 장점 1) const, let 뭐로 할건지 결정가능, forEach에서는 안됨</span></span><br><span class="line">  <span class="built_in">console</span>.log(friend); <span class="comment">// 모두다 출력됨</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> char <span class="keyword">of</span> <span class="string">&quot;strings&quot;</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(char); <span class="comment">// s t r i n g s 출력</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 장점 2) iterable한 모든것에서 작동한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> friend <span class="keyword">of</span> friends) &#123;</span><br><span class="line">  <span class="keyword">if</span> (friend === <span class="string">&quot;steve&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(char); <span class="comment">// &quot;me&quot;, &quot;you&quot;, &quot;nico&quot; 이렇게만 출력</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 장점 3) 루프를 멈출수가있음!, 최고장점</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/02/JS-ES6-7-22-01-02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Rest and Spread</title>
      <link>https://chlee1001.github.io/2022/01/02/JS-ES6-6-22-01-02/</link>
      <guid>https://chlee1001.github.io/2022/01/02/JS-ES6-6-22-01-02/</guid>
      <pubDate>Sun, 02 Jan 2022 09:30:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - Rest &amp; Spread
&lt;/aside&gt;

&lt;h1 id=&quot;Rest-and-Spread&quot;&gt;&lt;a href=&quot;#Rest-and-Spread&quot; class=&quot;headerlink&quot; title=&quot;Rest and Spread&quot;&gt;&lt;/a&gt;Rest and Spread&lt;/h1&gt;&lt;h2 id=&quot;Spread&quot;&gt;&lt;a href=&quot;#Spread&quot; class=&quot;headerlink&quot; title=&quot;Spread&quot;&gt;&lt;/a&gt;Spread&lt;/h2&gt;&lt;p&gt;기본적으로 변수를 가져와 풀어 해쳐 전개해놓는 것.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - Rest & Spread</aside><h1 id="Rest-and-Spread"><a href="#Rest-and-Spread" class="headerlink" title="Rest and Spread"></a>Rest and Spread</h1><h2 id="Spread"><a href="#Spread" class="headerlink" title="Spread"></a>Spread</h2><p>기본적으로 변수를 가져와 풀어 해쳐 전개해놓는 것.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Spread</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> friends = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(friends); <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(...friends); <span class="comment">// 1 2 3 4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> family = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(friends + family); <span class="comment">// 1,2,3,4a,b,c</span></span><br><span class="line"><span class="built_in">console</span>.log([friends, family]); <span class="comment">// [ [ 1, 2, 3, 4 ], [ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27; ] ]</span></span><br><span class="line"><span class="built_in">console</span>.log([...friends, ...family]); <span class="comment">// [ 1,   2,   3,   4, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27; ]</span></span><br><span class="line"><span class="comment">// spread를 통해 모든 요소를 담고 있는 하나의 object를 얻을 수 있다.</span></span><br><span class="line"><span class="comment">// array.push()를 이용하지 않고 값을 추가하여 새로운 객체를 만든다.</span></span><br><span class="line"><span class="keyword">const</span> newFriends = [...friends, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>];</span><br><span class="line"><span class="built_in">console</span>.log(newFriends); <span class="comment">// [ 1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> admin = &#123;</span><br><span class="line">  username: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(&#123; ...admin, <span class="attr">password</span>: <span class="number">123</span> &#125;); <span class="comment">// &#123; username: &#x27;admin&#x27;, password: 123 &#125;</span></span><br><span class="line"><span class="comment">// 조건식</span></span><br><span class="line"><span class="comment">// lastName을 입력받았을 때 값이 있을 때만 객체에 넣어주기</span></span><br><span class="line"><span class="keyword">const</span> lastName = prompt(<span class="string">&quot;Last name: &quot;</span>);</span><br><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  username: <span class="string">&quot;person&quot;</span>,</span><br><span class="line">  age: <span class="number">24</span>,</span><br><span class="line">  ...(lastName !== <span class="string">&quot;&quot;</span> &amp;&amp; &#123; lastName &#125;), <span class="comment">// spread로 전개하려면 데이터가 object여야하므로, 중괄호로 감싸줌</span></span><br><span class="line">  <span class="comment">//   lastName: lastName !== &quot;&quot; ? lastName : undefined,</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person);</span><br></pre></td></tr></table></figure><h2 id="Rest-Parameters"><a href="#Rest-Parameters" class="headerlink" title="Rest Parameters"></a>Rest Parameters</h2><p>끝없는 인자를 받아 볼때 유용하게 이용할 수있다</p><p><code>spread</code>는 죄다 펼쳐 확대시키는 것이고, ****<code>rest</code>는 하나에 담아서 축소시키는것</p><p>어디에 들어가느냐에 따라 spread와 rest(parameter부분에 들어가면 )로 갈릴수있음</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> infiniteArge = <span class="function">(<span class="params">...kimchi</span>) =&gt;</span> <span class="built_in">console</span>.log(kimchi);</span><br><span class="line"></span><br><span class="line">infiniteArge(<span class="string">&quot;1&quot;</span>, <span class="number">2</span>, <span class="literal">true</span>, <span class="string">&quot;lalala&quot;</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]);</span><br><span class="line"><span class="comment">// 전부 배열에 넣어서 출력된다.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bestFriends = <span class="function">(<span class="params">firstPotato, ...potatos</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`he is <span class="subst">$&#123;firstPotato&#125;</span>`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(potatos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bestFriends(<span class="string">&quot;nico&quot;</span>, <span class="string">&quot;lynn&quot;</span>, <span class="string">&quot;steve&quot;</span>, <span class="string">&quot;flynn&quot;</span>);</span><br><span class="line"><span class="comment">// he is nico</span></span><br><span class="line"><span class="comment">// [&quot;lynn&quot;, &quot;steve&quot;, &quot;flynn&quot;]</span></span><br><span class="line"><span class="comment">// 이렇게 출력된다</span></span><br></pre></td></tr></table></figure><h2 id="Rest-Spread-Destructure-Magic"><a href="#Rest-Spread-Destructure-Magic" class="headerlink" title="Rest + Spread + Destructure Magic"></a><strong>Rest + Spread + Destructure Magic</strong></h2><p>object를 지우거나 정리할 때 유용하다</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">name :<span class="string">&quot;nico&quot;</span>,</span><br><span class="line">age:<span class="number">24</span>,</span><br><span class="line">password : <span class="number">12345</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> killPassword = <span class="function">(<span class="params">&#123;password, ...rest&#125;</span>) =&gt;</span> rest; <span class="comment">// destructure + rest</span></span><br><span class="line"><span class="comment">// destructuring을 통해 user의 password를 가져오고, 나머지를 rest에 저장</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cleanUser = killPassword(user)</span><br><span class="line"><span class="built_in">console</span>.log(cleanUser) <span class="comment">// &#123;name:&quot;nico&quot;, age:24&#125; 출력한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> setCountry = <span class="function">(<span class="params">&#123; country = <span class="string">&quot;KR&quot;</span>, ...rest &#125;</span>) =&gt;</span> (&#123; country, ...rest &#125;);</span><br><span class="line"><span class="comment">// default 설정 + rest + spread</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(setCountry(user));</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;country : &quot;KR&quot;, name :&quot;nico&quot;, age:24, password : 12345&#125; 출력</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/02/JS-ES6-6-22-01-02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Destructuring</title>
      <link>https://chlee1001.github.io/2022/01/02/JS-ES6-5-22-01-02/</link>
      <guid>https://chlee1001.github.io/2022/01/02/JS-ES6-5-22-01-02/</guid>
      <pubDate>Sat, 01 Jan 2022 15:30:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - 비구조화
&lt;/aside&gt;

&lt;h1 id=&quot;Destructuring&quot;&gt;&lt;a href=&quot;#Destructuring&quot; class=&quot;headerlink&quot; title=&quot;Destructuring&quot;&gt;&lt;/a&gt;Destructuring&lt;/h1&gt;&lt;p&gt;destructuring(비구조화)는 object나 array 등 안의 변수를 바깥으로 끄집어내는 것&lt;/p&gt;
&lt;h2 id=&quot;Object-Destructuring&quot;&gt;&lt;a href=&quot;#Object-Destructuring&quot; class=&quot;headerlink&quot; title=&quot;Object Destructuring&quot;&gt;&lt;/a&gt;Object Destructuring&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - 비구조화</aside><h1 id="Destructuring"><a href="#Destructuring" class="headerlink" title="Destructuring"></a>Destructuring</h1><p>destructuring(비구조화)는 object나 array 등 안의 변수를 바깥으로 끄집어내는 것</p><h2 id="Object-Destructuring"><a href="#Object-Destructuring" class="headerlink" title="Object Destructuring"></a>Object Destructuring</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Object Destructuring</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> settings = &#123;</span><br><span class="line">  notifications: &#123;</span><br><span class="line">    follow: <span class="literal">true</span>,</span><br><span class="line">    alerts: <span class="literal">true</span>,</span><br><span class="line">    unfollow: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  color: &#123;</span><br><span class="line">    theme: <span class="string">&quot;dakr&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (settingss.notifications.follow) &#123;</span><br><span class="line">  <span class="comment">// send email</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 기존에는 위와 같이 사용했다. 보기에 매우 불편하다.</span></span><br><span class="line"><span class="comment">// 만약 follow라는 값이 없느면 undefined오류가 발생할 것이다.</span></span><br></pre></td></tr></table></figure><p>⇒</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 기본적으로 settings를 열어 notifications에 접근하여 follow를 가져오는 것</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">notifications</span>: &#123; follow = <span class="literal">false</span> &#125; = &#123;&#125;, color &#125; = settings;</span><br><span class="line"><span class="comment">// settings에 notifications가 없으면 &#123;&#125;, notifications에 follow가 없으면 false로</span></span><br><span class="line"><span class="comment">// default 값 세팅을 해준다.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(follow); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(color); <span class="comment">// &#123; theme: &#x27;dark&#x27; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 이 때 notifications는 변수가 아님 -&gt; notifications를 console.log에 찍으면 is not defined 오류 발생</span></span><br><span class="line"><span class="comment">// 이런 방식은 큰 Object에서 특정 변수나 그 안에 속한 작은 Object에 접근할 수 있도록 해주는 것</span></span><br><span class="line"><span class="comment">// </span></span><br></pre></td></tr></table></figure><h2 id="Array-Destructuring"><a href="#Array-Destructuring" class="headerlink" title="Array Destructuring"></a>Array Destructuring</h2><p>array destructuring은 보통 가져온 정보를 조작하기 않을 때 쓰기 좋다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Array Destructuring</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> days = [<span class="string">&quot;Mon&quot;</span>, <span class="string">&quot;Tue&quot;</span>, <span class="string">&quot;Wed&quot;</span>, <span class="string">&quot;Thu&quot;</span>, <span class="string">&quot;Fri&quot;</span>, <span class="string">&quot;Sat&quot;</span>, <span class="string">&quot;Sun&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [mon, tue, wed, , , , sun, aaa = <span class="string">&quot;AAA&quot;</span>] = days; <span class="comment">// ,,,은 skippin</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// mon 에는 &quot;Mon&quot; , tue에는 &quot;Tue&quot;, wed 에는 &quot;Wed&quot; sun에는 &quot;Sun&quot;이 들어가있음</span></span><br><span class="line"><span class="comment">// aaa는 AAA</span></span><br><span class="line"><span class="built_in">console</span>.log(sun);</span><br></pre></td></tr></table></figure><h2 id="Renaming"><a href="#Renaming" class="headerlink" title="Renaming"></a>Renaming</h2><p>api등에서 받아온 데이터의 이름이 별로일 때 바꿔보자</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Renaming</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> settings = &#123;</span><br><span class="line">  color: &#123;</span><br><span class="line">    chosen_color: <span class="string">&quot;dark&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  color: &#123; <span class="attr">chosen_color</span>: chosenColor = <span class="string">&quot;light&quot;</span> &#125;,</span><br><span class="line">&#125; = settings;</span><br><span class="line"><span class="comment">// :를 붙혀 새로운 변수를 생성하고 그 변수에 값을 담는다.</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> chosenColor = <span class="string">&quot;blue&quot;</span>; <span class="comment">// 변수가 미리 있다면</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(chosenColor); <span class="comment">// blue</span></span><br><span class="line"></span><br><span class="line">(&#123;</span><br><span class="line">  color: &#123; <span class="attr">chosen_color</span>: chosenColor = <span class="string">&quot;light&quot;</span> &#125;,</span><br><span class="line">&#125; = settings);</span><br><span class="line"><span class="comment">// 위와 같이 적어 이미 정의가 되어있는 choseColor의 값을 업데이트한다.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(chosenColor); <span class="comment">// dark</span></span><br></pre></td></tr></table></figure><h2 id="Function-Destructuring"><a href="#Function-Destructuring" class="headerlink" title="Function Destructuring"></a>Function Destructuring</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Function Destructuring</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveSettings</span>(<span class="params">followAlert, unfollowAlert, mrkAlert, themeColor</span>) </span>&#123;&#125; <span class="comment">// argument가 너무 길다</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveSettings</span>(<span class="params">&#123; follow, alert, color = <span class="string">&quot;blue&quot;</span> &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(color); <span class="comment">// green</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">saveSettings(&#123;</span><br><span class="line">  follow: <span class="literal">true</span>,</span><br><span class="line">  alert: <span class="literal">true</span>,</span><br><span class="line">  mkt: <span class="literal">true</span>,</span><br><span class="line">  color: <span class="string">&quot;green&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">----------- 더 간단히..</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveSettings</span>(<span class="params">&#123; notifications, color: &#123; theme = <span class="string">&quot;blue&quot;</span> &#125; = &#123;&#125; &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(theme); <span class="comment">// blue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">saveSettings(&#123;</span><br><span class="line">  notifications: &#123;</span><br><span class="line">    follow: <span class="literal">true</span>,</span><br><span class="line">    alert: <span class="literal">true</span>,</span><br><span class="line">    mkt: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//   color: &#123; theme: &quot;green&quot; &#125;,</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Value-shorthands"><a href="#Value-shorthands" class="headerlink" title="Value shorthands"></a>Value shorthands</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> follow = checkFollow();</span><br><span class="line"><span class="keyword">const</span> alert = checkAlert();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> settings = &#123;</span><br><span class="line">  notifications: &#123;</span><br><span class="line">    follow: follow,</span><br><span class="line">    alert: alert,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 위 아래 같다. key와 value가 같다면...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> settings = &#123;</span><br><span class="line">    notifications:&#123;</span><br><span class="line">        follow,</span><br><span class="line">        alert</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/02/JS-ES6-5-22-01-02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Array</title>
      <link>https://chlee1001.github.io/2022/01/01/JS-ES6-4-22-01-01/</link>
      <guid>https://chlee1001.github.io/2022/01/01/JS-ES6-4-22-01-01/</guid>
      <pubDate>Sat, 01 Jan 2022 06:30:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - 배열
&lt;/aside&gt;

&lt;h1 id=&quot;Array&quot;&gt;&lt;a href=&quot;#Array&quot; class=&quot;headerlink&quot; title=&quot;Array&quot;&gt;&lt;/a&gt;Array&lt;/h1&gt;&lt;h3 id=&quot;Array-of&quot;&gt;&lt;a href=&quot;#Array-of&quot; class=&quot;headerlink&quot; title=&quot;Array.of()&quot;&gt;&lt;/a&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;무엇이든 Array로 만들어준다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - 배열</aside><h1 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h1><h3 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of()"></a><strong>Array.of()</strong></h3><p>무엇이든 Array로 만들어준다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.of()</span></span><br><span class="line"><span class="keyword">const</span> alphabet = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>];</span><br><span class="line"><span class="keyword">const</span> alphabet = <span class="built_in">Array</span>.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>)<span class="keyword">const</span> alphabet = <span class="built_in">Array</span>.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);;</span><br><span class="line"><span class="built_in">console</span>.log(alphabet);</span><br></pre></td></tr></table></figure><h3 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from()"></a><strong>Array.from()</strong></h3><p>Array.from(array같이 생긴 것)</p><p>😠 <code>querySelector</code>나 <code>getElementbyClassName</code>으로 엘리먼트 찾으면 array 같지만 아닌 다른 저장 포맷으로 저장된다</p><p><code>array-like object</code>를 array로 바꿔준다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> buttons = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(buttons);</span><br><span class="line"><span class="comment">// buttons는 Array가 아니기 때문에</span></span><br><span class="line"><span class="comment">// 아래와 같이 forEach를 사용할 수 없다.</span></span><br><span class="line">buttons.forEach(<span class="function">(<span class="params">button</span>) =&gt;</span> &#123;</span><br><span class="line">  button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&quot;I ve been clickeds&quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">----------------</span><br><span class="line"><span class="built_in">Array</span>.from(buttons).forEach(<span class="function">(<span class="params">button</span>) =&gt;</span> &#123;</span><br><span class="line">  button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&quot;I ve been clickeds&quot;</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Array-find"><a href="#Array-find" class="headerlink" title="Array.find()"></a>Array.find()</h3><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/find">Array.prototype.find() - JavaScript | MDN</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Array.find()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> friends = [</span><br><span class="line">  <span class="string">&quot;nico@gmail.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;lynn@naver.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dal@yahoo.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dal2@yahoo.com&quot;</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> target1 = friends.find(<span class="function">(<span class="params">friend</span>) =&gt;</span> friend.includes(<span class="string">&quot;@yahoo.com&quot;</span>));</span><br><span class="line"><span class="comment">// 조건을 넣어주면 forEach를 돌리면서 그에 맞는 값을 리턴해준다</span></span><br><span class="line"><span class="comment">// 찾은 첫번째 값만 반환해준다</span></span><br><span class="line"><span class="comment">// 없으면 undefined반환한다</span></span><br><span class="line"><span class="built_in">console</span>.log(target1);</span><br></pre></td></tr></table></figure><h3 id="Array-findIndex"><a href="#Array-findIndex" class="headerlink" title="Array.findIndex()"></a>Array.findIndex()</h3><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex">Array.prototype.findIndex() - JavaScript | MDN</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Array.findIndex()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> target2 = friends.findIndex(<span class="function">(<span class="params">friend</span>) =&gt;</span> friend.includes(<span class="string">&quot;@yahoo.com&quot;</span>));</span><br><span class="line"><span class="comment">// 인덱스가 필요할때!</span></span><br><span class="line"><span class="comment">// 없으면 -1반환한다</span></span><br><span class="line"><span class="built_in">console</span>.log(target2);</span><br><span class="line"><span class="keyword">const</span> userName = friends[target2].split(<span class="string">&quot;@&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">const</span> email = <span class="string">&quot;yahoo.com&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;userName&#125;</span>@<span class="subst">$&#123;email&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h3 id="Array-fill"><a href="#Array-fill" class="headerlink" title="Array.fill()"></a>Array.fill()</h3><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/fill">Array.prototype.fill() - JavaScript | MDN</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (target2 !== -<span class="number">1</span>) &#123;</span><br><span class="line">  friends.fill(<span class="string">&quot;*&quot;</span>.repeat(<span class="number">5</span>), target2 + <span class="number">1</span>);</span><br><span class="line">  <span class="comment">// target부터 모든 변수는 다 채울값으로 채워줌</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(friends);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/01/JS-ES6-4-22-01-01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Strings</title>
      <link>https://chlee1001.github.io/2022/01/01/JS-ES6-3-22-01-01/</link>
      <guid>https://chlee1001.github.io/2022/01/01/JS-ES6-3-22-01-01/</guid>
      <pubDate>Sat, 01 Jan 2022 05:50:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - 문자열
&lt;/aside&gt;

&lt;h1 id=&quot;Strings&quot;&gt;&lt;a href=&quot;#Strings&quot; class=&quot;headerlink&quot; title=&quot;Strings&quot;&gt;&lt;/a&gt;Strings&lt;/h1&gt;&lt;h2 id=&quot;Template-Literal&quot;&gt;&lt;a href=&quot;#Template-Literal&quot; class=&quot;headerlink&quot; title=&quot;Template Literal&quot;&gt;&lt;/a&gt;Template Literal&lt;/h2&gt;&lt;p&gt;variable을 가진 문자열을 쓰는 방법에 대한 개선&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - 문자열</aside><h1 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h1><h2 id="Template-Literal"><a href="#Template-Literal" class="headerlink" title="Template Literal"></a>Template Literal</h2><p>variable을 가진 문자열을 쓰는 방법에 대한 개선</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sayHi = <span class="function">(<span class="params">aName = <span class="string">&quot;anon&quot;</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + aName;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">==&gt;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 변수</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> sayHi = <span class="function">(<span class="params">aName = <span class="string">&quot;anon&quot;</span></span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">`Hello <span class="subst">$&#123;aName&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 함수</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`hello how are you <span class="subst">$&#123;add(<span class="number">6</span>, <span class="number">6</span>)&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h3 id="HTML-Fragments-1"><a href="#HTML-Fragments-1" class="headerlink" title="HTML Fragments 1"></a>HTML Fragments 1</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> wrapper = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.wrapper&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addWelcome = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> div = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> h1 = <span class="built_in">document</span>.createElement(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line">  h1.innerText = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">  div.append(h1);</span><br><span class="line">  wrapper.append(div);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(addWelcome, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>⇒</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addWelcome = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> div = <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;hello&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Hello&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  wrapper.innerHTML = div;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>template literal은 ``` … space를 고려한다.</li></ul><h3 id="HTML-Fragments-2"><a href="#HTML-Fragments-2" class="headerlink" title="HTML Fragments 2"></a>HTML Fragments 2</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> alphas = [<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ul = <span class="built_in">document</span>.createElement(<span class="string">&quot;ul&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> list = <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;h1&gt;Alphabet&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;alphas.map(alpha =&gt; <span class="string">`&lt;li&gt;<span class="subst">$&#123;alpha&#125;</span>&lt;/li&gt;`</span>).join(<span class="string">&quot;&quot;</span>)&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">wrapper.innerHTML = list;</span><br></pre></td></tr></table></figure><h3 id="Cloning-Styled-Components"><a href="#Cloning-Styled-Components" class="headerlink" title="Cloning Styled Components"></a>Cloning Styled Components</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cloning Styled Components</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> styled = <span class="function">(<span class="params">aElement</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> el = <span class="built_in">document</span>.createElement(aElement);</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> styles = args[<span class="number">0</span>];</span><br><span class="line">    el.style = styles;</span><br><span class="line">    <span class="keyword">return</span> el;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 아래 코드는 함수를 두변 연속 호출 하는 꼴이기 때문에</span></span><br><span class="line"><span class="comment">// 위 함수에서 클로저로 함수를 또 한번 호출할 필요가 있다.</span></span><br><span class="line"><span class="keyword">const</span> title = styled(<span class="string">&quot;h1&quot;</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  background-color: red;</span></span><br><span class="line"><span class="string">  color: blue;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> subTitle = styled(<span class="string">&quot;span&quot;</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  color: green;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line">title.innerText = <span class="string">&quot;We just cloned&quot;</span>;</span><br><span class="line">subTitle.innerText = <span class="string">&quot;Styled Components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.append(title, subTitle);</span><br></pre></td></tr></table></figure><h3 id="More-String-Improvements"><a href="#More-String-Improvements" class="headerlink" title="More String Improvements"></a>More String Improvements</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * includes()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> isEmail = <span class="function">(<span class="params">email</span>) =&gt;</span> email.includes(<span class="string">&quot;@&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(isEmail(<span class="string">&quot;myEmail@google.com&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(isEmail(<span class="string">&quot;myEmail&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * repeat()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> CC_NUMBER = <span class="string">&quot;6060&quot;</span>; <span class="comment">// ************6060로 보여주기</span></span><br><span class="line"><span class="keyword">const</span> displayName = <span class="string">`<span class="subst">$&#123;<span class="string">&quot;*&quot;</span>.repeat(<span class="number">10</span>)&#125;</span><span class="subst">$&#123;CC_NUMBER&#125;</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(displayName); <span class="comment">// **********6060</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * startsWith(), endsWith()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&quot;Mr. abc&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(name.startsWith(<span class="string">&quot;Mr&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(name.endsWith(<span class="string">&quot;abc&quot;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/01/JS-ES6-3-22-01-01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Functions</title>
      <link>https://chlee1001.github.io/2022/01/01/JS-ES6-2-22-01-01/</link>
      <guid>https://chlee1001.github.io/2022/01/01/JS-ES6-2-22-01-01/</guid>
      <pubDate>Sat, 01 Jan 2022 04:20:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - 함수
&lt;/aside&gt;

&lt;h1 id=&quot;Functions&quot;&gt;&lt;a href=&quot;#Functions&quot; class=&quot;headerlink&quot; title=&quot;Functions&quot;&gt;&lt;/a&gt;Functions&lt;/h1&gt;&lt;h3 id=&quot;Arrow-Functions&quot;&gt;&lt;a href=&quot;#Arrow-Functions&quot; class=&quot;headerlink&quot; title=&quot;Arrow Functions&quot;&gt;&lt;/a&gt;Arrow Functions&lt;/h3&gt;&lt;p&gt;기존 함수의 모습을 개선했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - 함수</aside><h1 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h1><h3 id="Arrow-Functions"><a href="#Arrow-Functions" class="headerlink" title="Arrow Functions"></a>Arrow Functions</h3><p>기존 함수의 모습을 개선했다.</p><p><strong>기존 함수</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(Hello());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> names = [<span class="string">&quot;kim&quot;</span>, <span class="string">&quot;lee&quot;</span>, <span class="string">&quot;park&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hearts = names.map(<span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> name + <span class="string">&quot; ❤️&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(hearts);</span><br></pre></td></tr></table></figure><p>Arrow Functions(1) - base</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Hello = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(Hello());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> names = [<span class="string">&quot;kim&quot;</span>, <span class="string">&quot;lee&quot;</span>, <span class="string">&quot;park&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hearts = names.map(<span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> name + <span class="string">&quot; ❤️&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(hearts);</span><br></pre></td></tr></table></figure><p>Arrow Functions(2) - implicit return</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Hello = <span class="function">() =&gt;</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Hello());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> names = [<span class="string">&quot;kim&quot;</span>, <span class="string">&quot;lee&quot;</span>, <span class="string">&quot;park&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hearts = names.map(<span class="function"><span class="params">name</span> =&gt;</span> name + <span class="string">&quot; ❤️&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(hearts);</span><br></pre></td></tr></table></figure><h3 id="this-in-Arrow-Functions-Event-listener-in-arrow-function"><a href="#this-in-Arrow-Functions-Event-listener-in-arrow-function" class="headerlink" title="this in Arrow Functions (Event listener in arrow function)"></a><code>this</code> in Arrow Functions (Event listener in arrow function)</h3><p>일반 콜백 함수안에서 <code>this</code>는 이벤트리스너에 연결 된 엘리먼트를 가리킨다. 하지만, arrow function안에서 <code>this</code>는 window를 가리킨다.</p><p>결론, this를 함수 안에 익명함수로 사용할 때는 Arrow Function이 아닌 일반 표준 funtion 형태로 사용해야한다.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> thisTest = &#123;</span><br><span class="line">  cnt: <span class="number">0</span>,</span><br><span class="line">  <span class="function"><span class="title">addCnt</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.cnt++;</span><br><span class="line">  &#125;,</span><br><span class="line">  addCnt2: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.cnt++;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(thisTest.cnt); <span class="comment">// 0</span></span><br><span class="line">thisTest.addCnt();</span><br><span class="line"><span class="built_in">console</span>.log(thisTest.cnt); <span class="comment">// 1</span></span><br><span class="line">thisTest.addCnt2;</span><br><span class="line"><span class="built_in">console</span>.log(thisTest.cnt); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="Default-Values"><a href="#Default-Values" class="headerlink" title="Default Values"></a>Default Values</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sayHi = <span class="function">(<span class="params">aName = <span class="string">&quot;anon&quot;</span></span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">`Hello <span class="subst">$&#123;aName&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sayHi());</span><br><span class="line"><span class="built_in">console</span>.log(sayHi(<span class="string">&#x27;chaehyeon&#x27;</span>));</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2022/01/01/JS-ES6-2-22-01-01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] ES6 - Variables</title>
      <link>https://chlee1001.github.io/2021/12/30/JS-ES6-1-22-01-01/</link>
      <guid>https://chlee1001.github.io/2021/12/30/JS-ES6-1-22-01-01/</guid>
      <pubDate>Thu, 30 Dec 2021 06:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 Javascript ES6 문법을 배워보자 - 변수
&lt;/aside&gt;

&lt;h1 id=&quot;Variables&quot;&gt;&lt;a href=&quot;#Variables&quot; class=&quot;headerlink&quot; title=&quot;Variables&quot;&gt;&lt;/a&gt;Variables&lt;/h1&gt;&lt;h3 id=&quot;Let-and-Const&quot;&gt;&lt;a href=&quot;#Let-and-Const&quot; class=&quot;headerlink&quot; title=&quot;Let and Const&quot;&gt;&lt;/a&gt;Let and Const&lt;/h3&gt;&lt;p&gt;&lt;code&gt;var&lt;/code&gt;를 절대 사용하지 않고 &lt;code&gt;let &amp;amp; const&lt;/code&gt; 사용하기&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><em>이채현</em></p><aside>💡 Javascript ES6 문법을 배워보자 - 변수</aside><h1 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h1><h3 id="Let-and-Const"><a href="#Let-and-Const" class="headerlink" title="Let and Const"></a>Let and Const</h3><p><code>var</code>를 절대 사용하지 않고 <code>let &amp; const</code> 사용하기</p><ul><li><p><code>var</code>를 쓰면 안되는 이유</p><ul><li><pre><code>var hoisting</code></pre><p> 때문에…</p><ul><li>var는 라이프사이클에서… 선언과 초기화를 동시에 한다.</li><li>global scope에 변수/함수를 선언할 경우 <strong>아무리 아래에 선언해도 제일 위로 올라간다. → 어디서 선언했든 상관없이, 항상 제일 위로 선언을 끌어올려준다.</strong></li><li>block scope를 철저히 무시한다.</li></ul></li></ul><p>⇒ 이러한 유연성으로 작은 어플리케이션을 금방 만들 수 있지만, 프로젝트의 규모가 커지면서 나중에서는 선언하지도 않은 값이 멋대로 출력되거나, 개발자들간의 협업에서 여러가지 문제점이 생길 수 있다.</p></li><li><p><code>let</code>은 선언과 초기화가 분리되어 그 사이에 TDZ가 생성되고, 접근할 경우 Reference Error가 발생한다.</p></li><li><p><code>const</code>는 선언과 초기화가 동시에 진행되지만, 선언 이전에 TDZ가 생성되어 접근하면 Reference Error가 발생한다.</p><h3 id="Dead-Zone"><a href="#Dead-Zone" class="headerlink" title="Dead Zone"></a>Dead Zone</h3><p>temporal dead zone(TDZ)에 영향을 받는 구문은 크게..</p><ul><li>const 변수</li><li>let 변수</li><li>class 구문</li><li>constructor() 내부의 super()</li><li>기본 함수 매개변수</li></ul></li></ul><h3 id="Block-Scope"><a href="#Block-Scope" class="headerlink" title="Block Scope"></a>Block Scope</h3><p><code>let &amp; const</code>는 block scope {}를 가짐</p><ul><li>외부에서 접근 불가능하다.</li></ul><p><code>var</code>는 function scope를 가짐</p><ul><li>function 안에서 생성 된 var변수는 외부 function에서 접근 할 수 없지만, if/else, for등안에서 생성 된 var는 어디서는 접근 가능하다.</li></ul><h3 id="Immutabe-Data-Types"><a href="#Immutabe-Data-Types" class="headerlink" title="Immutabe Data Types"></a>Immutabe Data Types</h3><p><code>primitive types</code>, <code>frozen objects</code> … 값이 바뀌지 않은 type</p><p>CONSTANTS는 Immutable Data Types이며, 프로그래밍할 때 왠만하면 Immutable Data Types를 사용하자.</p><p>💁🏻‍♀️ <strong>Immutable Data Types을 사용해야 하는 이유</strong></p><ul><li>security 해커들이 코드의 값을 바꾸는 것을 방지한다.</li><li>thread safety 어플리케이션을 실행하면 한가지의 프로세스가 할당되고, 그 프로세스 안에서 다양한 thread가 동시에 돌아가게 된다.이때 이 다양한 thread가 동시에 변수에 접근해서 값을 변경할 수 있게 되는 위험성이 생기는데, 이것을 방지한다.</li><li>reduce human mistakes 앞으로 해당 코드를 변경할 더 좋은 방안이 없다면, <code>const</code> 를 이용해 작성하여 본인 혹은 다른 개발자가 코드를 변경할때 발생할 수 있는 실수를 방지해준다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Web/">Web</category>
      
      <category domain="https://chlee1001.github.io/categories/Web/Javascript/">Javascript</category>
      
      
      <category domain="https://chlee1001.github.io/tags/JS/">JS</category>
      
      <category domain="https://chlee1001.github.io/tags/Javascript/">Javascript</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/">자바스크립트</category>
      
      <category domain="https://chlee1001.github.io/tags/ES6/">ES6</category>
      
      
      <comments>https://chlee1001.github.io/2021/12/30/JS-ES6-1-22-01-01/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Ubuntu] Certbot을 이용한 인증서 발급하기</title>
      <link>https://chlee1001.github.io/2021/11/28/UBUNTU-Certbot-21-11-28/</link>
      <guid>https://chlee1001.github.io/2021/11/28/UBUNTU-Certbot-21-11-28/</guid>
      <pubDate>Sun, 28 Nov 2021 11:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;a href=&quot;https://chae-hyeon.notion.site/Ubuntu-Certbot-9de75d4e532b4243bdf1a67a8504279f&quot;&gt;노션에서 보기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt; 💡 Certbot을 통해 무료로 서버인증서를 발급하고, 자동으로 갱신 가능 &lt;/aside&gt;

&lt;h1 id=&quot;snapd-설치하기-snapd-없는-경우&quot;&gt;&lt;a href=&quot;#snapd-설치하기-snapd-없는-경우&quot; class=&quot;headerlink&quot; title=&quot;snapd 설치하기 (snapd 없는 경우)&quot;&gt;&lt;/a&gt;snapd 설치하기 (snapd 없는 경우)&lt;/h1&gt;&lt;p&gt;최신 버전의 우분투에는 snapd가 설치되어있는 것으로 알고 있음&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><a href="https://chae-hyeon.notion.site/Ubuntu-Certbot-9de75d4e532b4243bdf1a67a8504279f">노션에서 보기</a></p><p><em>이채현</em></p><aside> 💡 Certbot을 통해 무료로 서버인증서를 발급하고, 자동으로 갱신 가능 </aside><h1 id="snapd-설치하기-snapd-없는-경우"><a href="#snapd-설치하기-snapd-없는-경우" class="headerlink" title="snapd 설치하기 (snapd 없는 경우)"></a>snapd 설치하기 (snapd 없는 경우)</h1><p>최신 버전의 우분투에는 snapd가 설치되어있는 것으로 알고 있음</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt # snap</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">sudo apt install snapd</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h1 id="certbot-설치하기-snap"><a href="#certbot-설치하기-snap" class="headerlink" title="certbot 설치하기 (snap)"></a>certbot 설치하기 (snap)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install core; sudo snap refresh core</span><br><span class="line">sudo snap install --classic certbot</span><br><span class="line">sudo ln -s /snap/bin/certbot /usr/bin/certbot</span><br></pre></td></tr></table></figure><h1 id="cloudflare-plugin-설치하기"><a href="#cloudflare-plugin-설치하기" class="headerlink" title="cloudflare plugin 설치하기"></a>cloudflare plugin 설치하기</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dns  cloudflare</span></span><br><span class="line">sudo snap <span class="built_in">set</span> certbot trust-plugin-with-root=ok</span><br><span class="line">sudo snap install certbot-dns-cloudflare</span><br></pre></td></tr></table></figure><h1 id="cloudflare-api-token-넣기"><a href="#cloudflare-api-token-넣기" class="headerlink" title="cloudflare api token 넣기"></a>cloudflare api token 넣기</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/.secrets/certbot</span><br><span class="line">vi ~/.secrets/certbot/cloudflare.ini</span><br><span class="line">----------------------------------</span><br><span class="line"><span class="comment"># Cloudflare API token used by Certbot</span></span><br><span class="line">dns_cloudflare_api_token = IdgrE2pGEQxdq43kQPJ8*****************</span><br><span class="line">chmod 600 ~/.secrets/certbot/cloudflare.ini</span><br></pre></td></tr></table></figure><h1 id="자신의-도메인-인증서-등록하기"><a href="#자신의-도메인-인증서-등록하기" class="headerlink" title="자신의 도메인 인증서 등록하기"></a>자신의 도메인 인증서 등록하기</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># *.4084.live</span></span><br><span class="line">sudo certbot certonly --dns-cloudflare \\</span><br><span class="line">   --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \\</span><br><span class="line">   -d *.4084.live</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">ubuntu@dev-project-app:~$ sudo certbot certonly --dns-cloudflare \\</span><br><span class="line">&gt;    --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \\</span><br><span class="line">&gt;    -d *.4084.live</span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line">Enter email address (used <span class="keyword">for</span> urgent renewal and security notices)</span><br><span class="line"> (Enter <span class="string">&#x27;c&#x27;</span> to cancel): ----@gmail.com</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please <span class="built_in">read</span> the Terms of Service at</span><br><span class="line">&lt;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&gt;. You must</span><br><span class="line">agree <span class="keyword">in</span> order to register with the ACME server. Do you agree?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(Y)es/(N)o: Y</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Would you be willing, once your first certificate is successfully issued, to</span><br><span class="line">share your email address with the Electronic Frontier Foundation, a founding</span><br><span class="line">partner of the Let<span class="string">&#x27;s Encrypt project and the non-profit organization that</span></span><br><span class="line"><span class="string">develops Certbot? We&#x27;</span>d like to send you email about our work encrypting the web,</span><br><span class="line">EFF news, campaigns, and ways to support digital freedom.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(Y)es/(N)o: Y</span><br><span class="line">Account registered.</span><br><span class="line">Requesting a certificate <span class="keyword">for</span> *.4084.live</span><br><span class="line">Waiting 10 seconds <span class="keyword">for</span> DNS changes to propagate</span><br><span class="line"></span><br><span class="line">Successfully received certificate.</span><br><span class="line">Certificate is saved at: /etc/letsencrypt/live/4084.live/fullchain.pem</span><br><span class="line">Key is saved at:         /etc/letsencrypt/live/4084.live/privkey.pem</span><br><span class="line">This certificate expires on 2022-02-26.</span><br><span class="line">These files will be updated when the certificate renews.</span><br><span class="line">Certbot has <span class="built_in">set</span> up a scheduled task to automatically renew this certificate <span class="keyword">in</span> the background.</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">If you like Certbot, please consider supporting our work by:</span><br><span class="line"> * Donating to ISRG / Let<span class="string">&#x27;s Encrypt:   &lt;https://letsencrypt.org/donate&gt;</span></span><br><span class="line"><span class="string"> * Donating to EFF:                    &lt;https://eff.org/donate-le&gt;</span></span><br><span class="line"><span class="string">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span></span><br></pre></td></tr></table></figure><p>생성된 인증서 경로 /etc/letsencrypt/live/4084.live/fullchain.pem /etc/letsencrypt/live/4084.live/privkey.pem</p><h1 id="인증서-갱신하기"><a href="#인증서-갱신하기" class="headerlink" title="인증서 갱신하기"></a>인증서 갱신하기</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#     (--dry-run)</span></span><br><span class="line">sudo certbot renew --dry-run</span><br><span class="line"></span><br><span class="line"><span class="comment">#(xx )</span></span><br><span class="line">sudo certbot renew</span><br></pre></td></tr></table></figure><h1 id="crontab을-이용하여-주기적으로-갱신"><a href="#crontab을-이용하여-주기적으로-갱신" class="headerlink" title="crontab을 이용하여 주기적으로 갱신"></a>crontab을 이용하여 주기적으로 갱신</h1><p>(매주 일요일 2시 1분에 실행)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">-----------</span><br><span class="line"><span class="comment"># cert renewal</span></span><br><span class="line">1 2 * * 0 sudo /usr/bin/certbot renew</span><br></pre></td></tr></table></figure><p>참고링크</p><hr><ul><li><a href="https://letsencrypt.org/">Let’s Encrypt (letsencrypt.org)</a></li><li><a href="https://certbot.eff.org/">https://certbot.eff.org/</a></li><li><a href="https://eff-certbot.readthedocs.io/en/stable/using.html">User Guide — Certbot 1.15.0.dev0 documentation (eff.org)</a></li><li><a href="https://certbot-dns-cloudflare.readthedocs.io/en/stable/">https://certbot-dns-cloudflare.readthedocs.io/en/stable/</a></li><li><a href="https://eff-certbot.readthedocs.io/en/stable/using.html#dns-plugins">User Guide — Certbot 1.15.0.dev0 documentation (eff.org)</a></li><li><a href="https://levelup.gitconnected.com/how-to-install-ssl-certificate-for-nginx-server-in-amazon-linux-2986f51371fb">How to install SSL certificate for Nginx server in Amazon Linux | by Sagar Shrestha | Level Up Coding (gitconnected.com)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Linux/">Linux</category>
      
      <category domain="https://chlee1001.github.io/categories/Linux/Ubuntu/">Ubuntu</category>
      
      
      <category domain="https://chlee1001.github.io/tags/AWS/">AWS</category>
      
      <category domain="https://chlee1001.github.io/tags/Ubuntu/">Ubuntu</category>
      
      <category domain="https://chlee1001.github.io/tags/Linux/">Linux</category>
      
      <category domain="https://chlee1001.github.io/tags/Certbot/">Certbot</category>
      
      <category domain="https://chlee1001.github.io/tags/letsencrypt/">letsencrypt</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9D%B8%EC%A6%9D%EC%84%9C/">인증서</category>
      
      
      <comments>https://chlee1001.github.io/2021/11/28/UBUNTU-Certbot-21-11-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Ubuntu] EC2 Ubuntu에 접속 후 초기 셋팅</title>
      <link>https://chlee1001.github.io/2021/11/28/UBUNTU-Connect1-21-11-28/</link>
      <guid>https://chlee1001.github.io/2021/11/28/UBUNTU-Connect1-21-11-28/</guid>
      <pubDate>Sun, 28 Nov 2021 09:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;a href=&quot;https://chae-hyeon.notion.site/Ubuntu-EC2-Ubuntu-c6fd0310dcc8468fac90797ffce9edfd&quot;&gt;노션에서 보기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;이채현&lt;/em&gt;&lt;/p&gt;
&lt;aside&gt;
💡 키를 이용하여 생성한 EC2 Ubuntu 인스턴스에 접속해보자 (mac os 기준)
&lt;/aside&gt;



&lt;p&gt;&lt;strong&gt;인스턴스를 생성할 때 키페어 생성하여 위치확인하기&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;키-페어-저장&quot;&gt;&lt;a href=&quot;#키-페어-저장&quot; class=&quot;headerlink&quot; title=&quot;키 페어 저장&quot;&gt;&lt;/a&gt;키 페어 저장&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><a href="https://chae-hyeon.notion.site/Ubuntu-EC2-Ubuntu-c6fd0310dcc8468fac90797ffce9edfd">노션에서 보기</a></p><p><em>이채현</em></p><aside>💡 키를 이용하여 생성한 EC2 Ubuntu 인스턴스에 접속해보자 (mac os 기준)</aside><p><strong>인스턴스를 생성할 때 키페어 생성하여 위치확인하기</strong></p><h1 id="키-페어-저장"><a href="#키-페어-저장" class="headerlink" title="키 페어 저장"></a>키 페어 저장</h1><p>다운로드 한 키페어를 ~/.ssh 폴더 안에 위치시키고 권한을 600으로 변경한다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp ~/Downloads/&#123;keypair-name.pem&#125; ~/.ssh/AWS</span><br><span class="line">chmod 600 &#123;keypair-name.pem&#125;</span><br></pre></td></tr></table></figure><h1 id="접속"><a href="#접속" class="headerlink" title="접속"></a>접속</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i ./&#123;keypair-name.pem&#125; ubuntu@&#123;public ipv4 주소&#125;</span><br></pre></td></tr></table></figure><h1 id="로그인-후"><a href="#로그인-후" class="headerlink" title="로그인 후"></a>로그인 후</h1><h2 id="패키지-업데이트"><a href="#패키지-업데이트" class="headerlink" title="패키지 업데이트"></a>패키지 업데이트</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><h2 id="hostname-변경"><a href="#hostname-변경" class="headerlink" title="hostname 변경"></a>hostname 변경</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo hostnamectl set-hostname &#123;원하는 이름&#125;</span><br><span class="line"><span class="comment"># 재접속</span></span><br></pre></td></tr></table></figure><h2 id="타임존-변경"><a href="#타임존-변경" class="headerlink" title="타임존 변경"></a>타임존 변경</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Seoul</span><br></pre></td></tr></table></figure><h1 id="개인PC에서-간단히-접속하기"><a href="#개인PC에서-간단히-접속하기" class="headerlink" title="개인PC에서 간단히 접속하기"></a>개인PC에서 간단히 접속하기</h1><p>ssh명령어를 이용하여 접속할 때에는 인증키의 위치를 계정명, 주소를 같이 입력해줘야하는 번거로움이 있다.</p><p>이를 개인pc의 인증서를 등록하여 인증서없이 바로 로그인해보자</p><h2 id="id-rsa-키-생성하기-개인-Mac"><a href="#id-rsa-키-생성하기-개인-Mac" class="headerlink" title="id_rsa 키 생성하기 (개인-Mac)"></a>id_rsa 키 생성하기 (개인-Mac)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>이후 ~/.ssh 폴더 내부에 생성 된 id_rsa(private) id_rsa.pub(public) 두개의 키를 확인할 수 있다.<br>이 중 id_rsa.pub의 내용을 복사한다.</p><h2 id="authorized-keys-수정하기-원격-Ubuntu"><a href="#authorized-keys-수정하기-원격-Ubuntu" class="headerlink" title="authorized_keys 수정하기 (원격-Ubuntu)"></a>authorized_keys 수정하기 (원격-Ubuntu)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line">위에서 복사한 id_rsa.pub 내용을 붙여넣고 저장한다.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Linux/">Linux</category>
      
      <category domain="https://chlee1001.github.io/categories/Linux/Ubuntu/">Ubuntu</category>
      
      
      <category domain="https://chlee1001.github.io/tags/AWS/">AWS</category>
      
      <category domain="https://chlee1001.github.io/tags/Ubuntu/">Ubuntu</category>
      
      <category domain="https://chlee1001.github.io/tags/Linux/">Linux</category>
      
      <category domain="https://chlee1001.github.io/tags/Mac/">Mac</category>
      
      <category domain="https://chlee1001.github.io/tags/key/">key</category>
      
      <category domain="https://chlee1001.github.io/tags/id-rsa/">id_rsa</category>
      
      
      <comments>https://chlee1001.github.io/2021/11/28/UBUNTU-Connect1-21-11-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 30일 월요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/30/21-08-30-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/30/21-08-30-IT_News/</guid>
      <pubDate>Mon, 30 Aug 2021 14:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-미래기술25-네이버-카카오…기업들도-다-뛰어들었다&quot;&gt;&lt;a href=&quot;#1-미래기술25-네이버-카카오…기업들도-다-뛰어들었다&quot; class=&quot;headerlink&quot; title=&quot;1. [미래기술25]네이버, 카카오…기업들도 다 뛰어들었다&quot;&gt;&lt;/a&gt;1. [미래기술25]네이버, 카카오…기업들도 다 뛰어들었다&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=018&amp;aid=0005023921&quot;&gt;[미래기술25]네이버, 카카오…기업들도 다 뛰어들었다&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/018/2021/08/30/0005023921_001_20210830221903953.jpg?type=w647&quot; alt=&quot;[이데일리 이미나 기자]&quot;&gt;&lt;/p&gt;
&lt;p&gt;국내 대표 인터넷·IT서비스 기업들도 블록체인 시장에 앞다퉈 뛰어들고 있으며, 시장조사 업체 마켓앤마켓에 따르면 지난해 30억 달러(3조5070억원)였던 글로벌 블록체인 시장 규모는 매년 67.3%씩 커져 오는 2025년 397억달러(46조4093억원)에 이를 전망입니다.&lt;/p&gt;
&lt;p&gt;가장 활발한 움직임을 보이는 기업은 카카오로  최근 싱가포르에 블록체인 자회사 ‘크러스트’를 설립하며 글로벌 사업을 본격화했으며, 이뿐만 아니라 그라운드X는 대체 불가능 토큰(NFT) 사업에 공을 들이고 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-미래기술25-네이버-카카오…기업들도-다-뛰어들었다"><a href="#1-미래기술25-네이버-카카오…기업들도-다-뛰어들었다" class="headerlink" title="1. [미래기술25]네이버, 카카오…기업들도 다 뛰어들었다"></a>1. [미래기술25]네이버, 카카오…기업들도 다 뛰어들었다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=018&aid=0005023921">[미래기술25]네이버, 카카오…기업들도 다 뛰어들었다</a></p><p><img src="https://imgnews.pstatic.net/image/018/2021/08/30/0005023921_001_20210830221903953.jpg?type=w647" alt="[이데일리 이미나 기자]"></p><p>국내 대표 인터넷·IT서비스 기업들도 블록체인 시장에 앞다퉈 뛰어들고 있으며, 시장조사 업체 마켓앤마켓에 따르면 지난해 30억 달러(3조5070억원)였던 글로벌 블록체인 시장 규모는 매년 67.3%씩 커져 오는 2025년 397억달러(46조4093억원)에 이를 전망입니다.</p><p>가장 활발한 움직임을 보이는 기업은 카카오로  최근 싱가포르에 블록체인 자회사 ‘크러스트’를 설립하며 글로벌 사업을 본격화했으며, 이뿐만 아니라 그라운드X는 대체 불가능 토큰(NFT) 사업에 공을 들이고 있다.</p><p>네이버 관계사인 라인도 지난 12일 암호화폐 ‘링크’를 국내 거래소(빗썸)에 처음으로 상장시키며 유동성 확대에 나서고 있습니다. 블록체인 생태계 확장의 일환으로 해석됩니다.</p><hr><h2 id="2-“IT기업·전문가-덕-‘’먹통-백신예약-정상화”"><a href="#2-“IT기업·전문가-덕-‘’먹통-백신예약-정상화”" class="headerlink" title="2. “IT기업·전문가 덕 ‘’먹통 백신예약 정상화”"></a>2. “IT기업·전문가 덕 ‘’<code>먹통 백신예약</code> 정상화”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=029&aid=0002694464">“IT기업·전문가 덕 <code>먹통 백신예약</code> 정상화”</a></p><p>김성훈 한국사회보장정보원 차세대개발본부장은 최근 본보와의 인터뷰에서 “백신 사전예약시스템 개선은 시급성과 기술적 난해함 때문에 군사작전을 방불케 하는 작업이었다”면서 “그러나 기업들이 앞다퉈 최정예 인력들을 보내줬고, 전문가들이 심야 회의와 새벽 퇴근, 주말 반납을 반복해 가며 매달린 덕분에 고도로 복잡한 문제를 풀 수 있었다”고 밝혔다.</p><p>LG CNS는 질병청 시스템 전체를 상세진단한 후 최적화해 성능을 높이고, 쌍용정보통신은 질병청 예약시스템 전체를 개선했다. 한국오라클은 서버 2대를 클러스터링 구조로 연결한 데이터베이스 서버를 5대가 연결된 방식으로 바꿨다. 중소기업 시스템어소시에이츠는 전국을 수배해 서버·스토리지를 조달해 인프라를 확장했다. 와탭랩스와 에스티씨랩도 서버 구조 재배치에 참여했다. 바토스는 데이터베이스 설정작업과 테스트를 통해 문제 없는 가동을 도왔다. 큐본·데이타헤븐·이글로벌시스템은 예약처리 성능과 보안 강화작업을 했다. </p><hr><h2 id="3-‘갤-Z플립3’는-어떻게-2030-앱등이들을-돌려-세웠나"><a href="#3-‘갤-Z플립3’는-어떻게-2030-앱등이들을-돌려-세웠나" class="headerlink" title="3. ‘갤 Z플립3’는 어떻게 2030 앱등이들을 돌려 세웠나"></a>3. ‘갤 Z플립3’는 어떻게 2030 앱등이들을 돌려 세웠나</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=018&aid=0005023918">‘갤 Z플립3’는 어떻게 2030 앱등이들을 돌려 세웠나</a></p><p><strong>아이폰 고집하던 2030도 갤럭시 Z플립3로 전향</strong></p><p>아이폰, 애플워치, 에어팟, 아이패드 등 전자기기를 모두 애플 제품으로 구성하면 다른 브랜드로 넘어가는 게 쉬운 일이 아니다. 애플 제품끼리는 연동이 쉬워 사진 및 동영상 등 데이터를 옮길 때 편리하다.</p><p><strong>폰꾸미기로 2030 겨냥… “나만의 핸드폰을 만드는 기분”</strong></p><p>삼성전자는 갤럭시 Z플립3을 출시하면서 이전 플립 시리즈보다 4배 커진 커버 디스플레이를 강조했으며 커버 디스플레이는 플립을 닫았을 때 외부에 보이는 작은 화면으로 스마트폰을 열지 않고도 알림이나 메시지를 확인할 수 있고 위젯을 활용해 일정과 날씨를 확인할 수 있다. 특히 커버 디스플레이에 GIF 이미지도 적용 가능한 것이 2030이 열광하는 포인트 중 하나다. </p><p>Z플립3 구매자들의 나만의 휴대폰 만들기는 우연이 아닌 기획의 산물이다.</p><hr><h2 id="4-무신사-스타일쉐어·29CM-지분-100-인수-완료…-“브랜드-패션-시장-시너지-강화”"><a href="#4-무신사-스타일쉐어·29CM-지분-100-인수-완료…-“브랜드-패션-시장-시너지-강화”" class="headerlink" title="4. 무신사, 스타일쉐어·29CM 지분 100% 인수 완료… “브랜드 패션 시장 시너지 강화”"></a>4. 무신사, 스타일쉐어·29CM 지분 100% 인수 완료… “브랜드 패션 시장 시너지 강화”</h2><p><a href="https://platum.kr/archives/169979">무신사, 스타일쉐어·29CM 지분 100% 인수 완료… “브랜드 패션 시장 시너지 강화”</a></p><p>무신사는 지난달 7일 스타일쉐어의 지분 전량(100%)을 확보하는 주식매매계약(SPA)과 주식의 포괄적 교환계약을 체결했고 이후 매매 대금 지급을 완료해 최종 인수 절차를 마무리했다. </p><p>스타일쉐어는 무신사 자회사로, 29CM는 완전손자회사로 편입되며 기존 인력은 전원 고용 승계하며 세 플랫폼을 합치지 않고 독립 운영한다.</p><hr><h2 id="5-NHN-2021-게임부문-신입·경력사원-공개-채용"><a href="#5-NHN-2021-게임부문-신입·경력사원-공개-채용" class="headerlink" title="5. NHN, 2021 게임부문 신입·경력사원 공개 채용"></a>5. NHN, 2021 게임부문 신입·경력사원 공개 채용</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=415167">NHN, 2021 게임부문 신입·경력사원 공개 채용</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202108/415167_408079_4530.png" alt="NHN, 게임부문 공개채용 이미지[사진:NHN]"></p><p>NHN은 금일부터 9월 14일까지 약 보름간 원서접수를 받고, 이후 서류전형-1차 면접-2차 면접 순으로 전형과정을 진행한다. 이번 게임부문 채용은 NHN, NHN빅풋, NHN픽셀큐브, NHN RPG 등 총 4개 법인으로 구분된다.</p><p>NHN은 지난 4월 진행한 기술 경력 공채에 이어 이번 채용에서도 경력직 부문의 자기소개서 항목을 없애며 입사 절차를 간소화했다. 해외 여행에 결격 사유가 없고, 2022년 2월 졸업 예정자 또는 기졸업자(신입), 또는 게임기획/개발/디자인 경력직이라면 누구나 지원할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8/">블록체인</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%AC%B4%EC%8B%A0%EC%82%AC/">무신사</category>
      
      <category domain="https://chlee1001.github.io/tags/NFT/">NFT</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%AC%EB%9F%AC%EC%8A%A4%ED%8A%B8/">크러스트</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9CX/">그라운드X</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%8B%A0%EC%98%88%EC%95%BD/">백신예약</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B0%A4%EB%9F%AD%EC%8B%9CZ%ED%94%8C%EB%A6%BD3/">갤럭시Z플립3</category>
      
      <category domain="https://chlee1001.github.io/tags/NHN/">NHN</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/30/21-08-30-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 27일 금요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/27/21-08-27-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/27/21-08-27-IT_News/</guid>
      <pubDate>Fri, 27 Aug 2021 09:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-구글-‘픽셀폰’-국내-출시되나…관련-인력-채용-공고&quot;&gt;&lt;a href=&quot;#1-구글-‘픽셀폰’-국내-출시되나…관련-인력-채용-공고&quot; class=&quot;headerlink&quot; title=&quot;1. 구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고&quot;&gt;&lt;/a&gt;1. 구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=421&amp;aid=0005567254&quot;&gt;구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/421/2021/08/27/0005567254_001_20210827134619952.jpg?type=w647&quot; alt=&quot;구글이 올가을 출시할 예정인 &amp;#39;픽셀6&amp;#39; 모습 (구글 제공) © 뉴스1&quot;&gt;&lt;/p&gt;
&lt;p&gt;최근 구글은 이와 관련된 인력 채용에 나서며, 국내 출시에 대한 기대감을 키우고 있다. 이에 따라 ‘외산폰의 무덤’으로 불리는 국내 시장에서 구글이 LG전자의 빈자리를 채우며 의미 있는 성과를 낼 수 있을지 주목된다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-구글-‘픽셀폰’-국내-출시되나…관련-인력-채용-공고"><a href="#1-구글-‘픽셀폰’-국내-출시되나…관련-인력-채용-공고" class="headerlink" title="1. 구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고"></a>1. 구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=421&aid=0005567254">구글 ‘픽셀폰’ 국내 출시되나…관련 인력 채용 공고</a></p><p><img src="https://imgnews.pstatic.net/image/421/2021/08/27/0005567254_001_20210827134619952.jpg?type=w647" alt="구글이 올가을 출시할 예정인 &#39;픽셀6&#39; 모습 (구글 제공) © 뉴스1"></p><p>최근 구글은 이와 관련된 인력 채용에 나서며, 국내 출시에 대한 기대감을 키우고 있다. 이에 따라 ‘외산폰의 무덤’으로 불리는 국내 시장에서 구글이 LG전자의 빈자리를 채우며 의미 있는 성과를 낼 수 있을지 주목된다.</p><hr><h2 id="2-정부-인정-첫-민간인증서는-‘페이코’…네이버·카카오보다-빨랐다"><a href="#2-정부-인정-첫-민간인증서는-‘페이코’…네이버·카카오보다-빨랐다" class="headerlink" title="2. 정부 인정 첫 민간인증서는 ‘페이코’…네이버·카카오보다 빨랐다"></a>2. 정부 인정 첫 민간인증서는 ‘페이코’…네이버·카카오보다 빨랐다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=015&aid=0004596970">정부 인정 첫 민간인증서는 ‘페이코’…네이버·카카오보다 빨랐다</a></p><p><img src="https://imgnews.pstatic.net/image/015/2021/08/27/0004596970_001_20210827152303948.jpg?type=w647"></p><p>독점적 공인인증서 제도 폐지 이후 정부가 처음 인정한 사설 인증서는 ‘페이코 인증서’가 됐으며 NHN페이코가 네이버·카카오·토스 등 쟁쟁한 경쟁자들에 한 발 앞서 ‘전자서명인증사업자’ 인정을 획득한 것이라 눈길을 끈다.</p><p>회사 측은 이번 정부 인정 획득으로 페이코 인증서의 공신력이 한층 높아져 공공·금융 등 다양한 분야로 사용처를 확대할 발판을 마련했다고 기대했다. 기존에 공인인증서만 허용하던 연말정산 같은 인증 서비스를 간편하게 사용할 수 있는 게 대표적 사례이고, 뿐만 아니라 ‘마이데이터’ 시장 공략에도 앞서나갈 수 있게 됐다. 내년 1월부터 시행되는 마이데이터 서비스의 통합인증 수단에는 전자서명인증사업자 평가·인정을 받은 민간 인증서도 허용된다.</p><hr><h2 id="3-애플-‘인앱결제-강제’-사실상-포기…“외부결제-홍보-가능””"><a href="#3-애플-‘인앱결제-강제’-사실상-포기…“외부결제-홍보-가능””" class="headerlink" title="3. 애플, ‘인앱결제 강제’ 사실상 포기…“외부결제 홍보 가능””"></a>3. 애플, ‘인앱결제 강제’ 사실상 포기…“외부결제 홍보 가능””</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=056&aid=0011109538">애플, ‘인앱결제 강제’ 사실상 포기…“외부결제 홍보 가능”</a></p><p>우리나라에서 세계 최초로 구글과 애플 등 앱장터에서의 인앱결제 강제화를 금지하는 법안이 국회 본회의 통과를 앞둔 가운데 애플이 외부결제를 사실상 허용하도록 정책을 변경했습니다.</p><p>애플은 27일 미국 개발자와의 집단 소송과 관련해 앱 사업자가 자사 결제시스템이 아닌 외부결제 방식을 홍보할 수 있도록 하는 내용 등 7가지 사항에 합의했다고 밝혔습니다.</p><p>합의 사항은 ▲ 연 매출 100만 달러 미만 사업자에 대한 수수료 감면(30%→15%) 최소 3년 유지 ▲ 앱스토어 검색 시스템 3년 유지 ▲ 외부결제 방식에 대한 정보의 이메일 공유 허용 ▲ 개발자 선택 가능한 기준 가격 수의 확장(100개 미만→500개 이상) ▲ 앱 불승인 시 이의 제기 절차 유지 ▲ 연간 투명성 보고서 작성 및 앱 심사 절차에 대한 통계 공유 ▲ 소규모 개발자 지원 기금 설립 등입니다.</p><hr><h2 id="4-“메타버스-성공-위해선-킬러앱-나와야”"><a href="#4-“메타버스-성공-위해선-킬러앱-나와야”" class="headerlink" title="4. “메타버스 성공 위해선 킬러앱 나와야”"></a>4. “메타버스 성공 위해선 킬러앱 나와야”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=018&aid=0005021800">“메타버스 성공 위해선 킬러앱 나와야”</a></p><p>이병호 서울대 전기정보공학부 교수는 27일 최종현학술원이 ‘메타버스 세계화’를 주제로 개최한 웨비나에서 “현재 메타버스의 콘텐츠는 주로 게임, 단기 이벤트 등에 치중돼 있다”며 “메타버스가 진정으로 사회적 영향력을 발휘하려면 일상적인 사용을 위한 앱이나 대중의 수요를 채워줄 수 있는 킬러 앱이 개발돼야 합니다.”라고 지적했다.</p><p>그는 “메타버스가 대중화를 이루려면 AR·VR 기기의 시각적 피로를 최소화하고, 기기의 크기를 줄이면서 시야각 등을 개선해야 한다”지적했다. 특히 시각적 피로도를 낮추려면 지연성을 줄이는 게 관건이다.</p><hr><h2 id="5-전기차-충전-플랫폼-‘모두의충전’-서울-전역으로-서비스-확대"><a href="#5-전기차-충전-플랫폼-‘모두의충전’-서울-전역으로-서비스-확대" class="headerlink" title="5. 전기차 충전 플랫폼 ‘모두의충전’, 서울 전역으로 서비스 확대"></a>5. 전기차 충전 플랫폼 ‘모두의충전’, 서울 전역으로 서비스 확대</h2><p><a href="https://platum.kr/archives/169891">전기차 충전 플랫폼 ‘모두의충전’, 서울 전역으로 서비스 확대</a></p><p>데이터를 기반으로 운영하는 ‘모두의 충전’은 지난 8개월 동안 강남 3구(송파-강남-서초)에 대리충전 서비스를 제공해왔으며, 최근 전문 탁송 기업과의 신규 계약을 통해 서비스 지역을 서울권 전역으로 확대했다.</p><p>스칼라데이터 윤예찬 대표는 “전기차 최대 등록지인 서울을 시작으로 향후 부산, 대구, 제주 등으로 서비스 지역을 확대할 계획으로  머신러닝 기반 충전 스케줄링 서비스, 충전 통합 결제 시스템, 전기차 베터리 보험 상품 연계 등 전기차와 관련한 다양한 서비스를 제공할 예정”이라며, ”전기차 충전을 생각하면 가장 먼저 떠오르는 스타트업이 되겠다.”라고 밝혔다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9D%B8%EC%95%B1%EA%B2%B0%EC%A0%9C/">인앱결제</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B5%AC%EA%B8%80/">구글</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%A0%ED%94%8C/">애플</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%A9%94%ED%83%80%EB%B2%84%EC%8A%A4/">메타버스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A0%84%EA%B8%B0%EC%B0%A8/">전기차</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%8E%98%EC%9D%B4%EC%BD%94/">페이코</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%94%BD%EC%85%80%ED%8F%B0/">픽셀폰</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%AF%BC%EA%B0%84%EC%9D%B8%EC%A6%9D%EC%84%9C/">민간인증서</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B3%B5%EB%8F%99%EC%9D%B8%EC%A6%9D%EC%84%9C/">공동인증서</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B6%A9%EC%A0%84/">충전</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/27/21-08-27-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 25일 수요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/25/21-08-25-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/25/21-08-25-IT_News/</guid>
      <pubDate>Wed, 25 Aug 2021 09:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-10년간-고집한-‘게임셧다운제’…여가부-돌연-“폐지”&quot;&gt;&lt;a href=&quot;#1-10년간-고집한-‘게임셧다운제’…여가부-돌연-“폐지”&quot; class=&quot;headerlink&quot; title=&quot;1. 10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”&quot;&gt;&lt;/a&gt;1. 10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=009&amp;aid=0004843219&quot;&gt;10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/009/2021/08/25/0004843219_001_20210825174202918.jpg?type=w647&quot;&gt;&lt;/p&gt;
&lt;p&gt;밤 12시부터 오전 6시까지 심야 시간에 청소년의 게임 이용을 차단하는 규제인 ‘강제적 셧다운제’가 10년 만에 폐지 수순을 밟으며, 게임 이용 시간을 직접 설정할 수 있는 ‘게임시간선택제’가 그 자리를 대신한다.&lt;/p&gt;
&lt;p&gt;이번 변화를 두고 직접적 당사자인 게임 업계에서는 일단 폐지를 반기면서도 다양한 의견이 나오고 있고, 72개 게임사를 회원으로 둔 한국게임산업협회는 “갈라파고스 규제인 강제적 셧다운제의 폐지 결정을 적극 지지하고 환영하며 관련 법안 개정이 신속하게 이뤄지기를 기대한다”는 입장을 냈다. 한국게임학회장을 맡은 위정현 교수는 “실효성이 없는 법적 규제 자체를 아예 없애고 부모와 학생, 각 가정이 국가에 위임한 스스로의 권한을 찾아와야 한다”고 했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-10년간-고집한-‘게임셧다운제’…여가부-돌연-“폐지”"><a href="#1-10년간-고집한-‘게임셧다운제’…여가부-돌연-“폐지”" class="headerlink" title="1. 10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”"></a>1. 10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=009&aid=0004843219">10년간 고집한 ‘게임셧다운제’…여가부 돌연 “폐지”</a></p><p><img src="https://imgnews.pstatic.net/image/009/2021/08/25/0004843219_001_20210825174202918.jpg?type=w647"></p><p>밤 12시부터 오전 6시까지 심야 시간에 청소년의 게임 이용을 차단하는 규제인 ‘강제적 셧다운제’가 10년 만에 폐지 수순을 밟으며, 게임 이용 시간을 직접 설정할 수 있는 ‘게임시간선택제’가 그 자리를 대신한다.</p><p>이번 변화를 두고 직접적 당사자인 게임 업계에서는 일단 폐지를 반기면서도 다양한 의견이 나오고 있고, 72개 게임사를 회원으로 둔 한국게임산업협회는 “갈라파고스 규제인 강제적 셧다운제의 폐지 결정을 적극 지지하고 환영하며 관련 법안 개정이 신속하게 이뤄지기를 기대한다”는 입장을 냈다. 한국게임학회장을 맡은 위정현 교수는 “실효성이 없는 법적 규제 자체를 아예 없애고 부모와 학생, 각 가정이 국가에 위임한 스스로의 권한을 찾아와야 한다”고 했다.</p><hr><h2 id="2-토스도-‘본인확인’서비스…이통사-독무대-깬다"><a href="#2-토스도-‘본인확인’서비스…이통사-독무대-깬다" class="headerlink" title="2. 토스도 ‘본인확인’서비스…이통사 독무대 깬다"></a>2. 토스도 ‘본인확인’서비스…이통사 독무대 깬다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=009&aid=0004843235">토스도 ‘본인확인’서비스…이통사 독무대 깬다</a></p><p><img src="https://imgnews.pstatic.net/image/009/2021/08/25/0004843235_001_20210825174702961.jpg?type=w647"></p><p>모바일 금융 플랫폼 토스를 운영하는 비바리퍼블리카가 본인확인기관으로 지정됨에 따라 이동통신 3사가 독점하던 본인 확인 시장에 핀테크 기업이 발을 들인 것이며, 토스와 함께 도전장을 내민 KB국민은행은 이번에 탈락했다. </p><p>핀테크와 금융사가 인증 시장에 도전장을 내미는 이유는 인증이 금융 서비스를 완결하는 핵심이기 때문으로 돈이 오가는 금융 거래와 온라인 상거래를 이용할 때는 회원 가입과 비밀번호 변경 등 모든 절차에 본인 확인과 인증 절차가 필수적인데 토스가 본인확인기관으로 지정되면서 본인 확인부터 인증에 이르는 모든 절차를 직접 관리하게 된다.</p><hr><h2 id="3-컴투스-메타버스사-‘위지윅’-최대주주로…”글로벌-콘텐츠사로-가속화”"><a href="#3-컴투스-메타버스사-‘위지윅’-최대주주로…”글로벌-콘텐츠사로-가속화”" class="headerlink" title="3. 컴투스, 메타버스사 ‘위지윅’ 최대주주로…”글로벌 콘텐츠사로 가속화”"></a>3. 컴투스, 메타버스사 ‘위지윅’ 최대주주로…”글로벌 콘텐츠사로 가속화”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=003&aid=0010683425">컴투스, 메타버스사 ‘위지윅’ 최대주주로…”글로벌 콘텐츠사로 가속화”</a></p><p><img src="https://imgnews.pstatic.net/image/003/2021/08/25/NISI20210825_0000815289_web_20210825164723_20210825171710880.jpg?type=w647"></p><p>위지윅은 증강현실(AR)·가상현실(VR)·가상융합현실(XR) 등의 기술을 결합해 미래 산업으로 부상하는 메타버스 프로젝트를 적극 추진하고, 지식재산(IP) 생산부터 2차 제작까지 전 과정을 하나의 스튜디오에서 통합 진행하는 위지윅만의 종합 제작 시스템도 구축하고 있으며,  이번 인수로 컴투스는 차세대 미디어 콘텐츠 산업에서 독보적 위치에 올라선 위지윅의 IP와 제작 역량을 확보해 글로벌 종합 콘텐츠 기업으로의 성장을 가속화할 수 있게 됐다.</p><p>영화, 드라마, 웹소설 등 위지윅의 여러 작품을 글로벌 게임으로 제작하고, 컴투스의 인기 게임들을 다양한 콘텐츠로 확장하는 등 트랜스 미디어 전략으로 탄탄한 IP 밸류체인을 만들어갈 계획이다.</p><ul><li>위지윅은 세계 최고 수준의 컴퓨터그래픽(CG)·시각특수효과(VFX) 기술로 넷플릭스 ‘승리호’를 비롯해 국내외 다양한 영화, 드라마 등을 만들어온 콘텐츠 제작사다.</li></ul><hr><h2 id="4-페북-‘얼굴정보’-수집이-꼼수로-적발된-이유"><a href="#4-페북-‘얼굴정보’-수집이-꼼수로-적발된-이유" class="headerlink" title="4. 페북 ‘얼굴정보’ 수집이 꼼수로 적발된 이유"></a>4. 페북 ‘얼굴정보’ 수집이 꼼수로 적발된 이유</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=092&aid=0002231684">페북 ‘얼굴정보’ 수집이 꼼수로 적발된 이유</a></p><p>25일 개인정보보호위원회는 페이스북을 비롯한 넷플릭스, 구글 등 해외 플랫폼 사업자들을 대상으로 개인정보보호법 위반 행위를 적발, 과징금 총 66억6천만원과 과태료 2천900만원을 부과하는 등 시정명령을 내렸고, 과징금의 대부분이 페이스북의 불법 얼굴인식 정보 생성 및 수집에 따른 것이다. </p><p>페이스북은 이용자 정보를 수집 및 활용, 관리하는 방식을 안내하는 ‘데이터 정책’을 2018년 4월 수정, 얼굴인식 기능이 활성화될 수 있다는 내용을 명시했고, 이 기능이 활성화돼 있으면 이용자가 프로필에 등록한 사진, 영상 등을 토대로 얼굴에 대한 수치화된 정보(템플릿)를 생성, 수집하게 된다. 하지만 문제는 이용자가 가입 전 얼굴인식 기능을 비활성화할 수 없었다는 점이다.</p><p>이용자가 가입하자마자 이런 설정을 수정하지 않고 무심코 프로필에 얼굴 이미지를 등록하게 되면, 추가적인 동의 절차 없이 얼굴 정보가 수집된 것이다.</p><hr>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%A9%94%ED%83%80%EB%B2%84%EC%8A%A4/">메타버스</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B6%81/">페이스북</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%86%A0%EC%8A%A4/">토스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%85%A7%EB%8B%A4%EC%9A%B4%EC%A0%9C/">셧다운제</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B3%B8%EC%9D%B8%ED%99%95%EC%9D%B8/">본인확인</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%BB%B4%ED%88%AC%EC%8A%A4/">컴투스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%96%BC%EA%B5%B4%EC%88%98%EC%A7%91/">얼굴수집</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%96%BC%EA%B5%B4%EC%9D%B8%EC%8B%9D/">얼굴인식</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/25/21-08-25-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 20일 금요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/20/21-08-20-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/20/21-08-20-IT_News/</guid>
      <pubDate>Fri, 20 Aug 2021 03:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-아이폰에-지문-인식-다시-생기나…코로나19가-바꾼-생체인식-시장&quot;&gt;&lt;a href=&quot;#1-아이폰에-지문-인식-다시-생기나…코로나19가-바꾼-생체인식-시장&quot; class=&quot;headerlink&quot; title=&quot;1. 아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장&quot;&gt;&lt;/a&gt;1. 아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=584&amp;aid=0000015618&quot;&gt;아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;신종 코로나바이러스 감염증(코로나19) 팬데믹(대유행)이 생체인식 시장의 기술 지형을 바꿔놓고 있다. 마스크를 착용한 상태에서 페이스ID가 작동하지 않는 데 따른 불편함을 해소하기 위해서 애플은 다음 달 출시할 새로운 아이폰 모델에 지문인식을 다시 탑재할 것이라는 소문이 파다하다. &lt;/p&gt;
&lt;p&gt;개인이 사용하는 스마트폰을 제외한 분야에서는 코로나19로 비접촉식 인증 방식에 대한 수요가 폭증하면서 안면 인식 기술이 생체인식 시장을 점령하고 있다.  NEC가 올해 도쿄 올림픽에 공급한 네오페이스 워치는 인공 신경망 모델을 적용해 2차원 얼굴 이미지를 3차원으로 전환해 인식하며, 0.3초 만에 160만 개의 얼굴을 검사할 수 있다. 정확도는 99.7%다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-아이폰에-지문-인식-다시-생기나…코로나19가-바꾼-생체인식-시장"><a href="#1-아이폰에-지문-인식-다시-생기나…코로나19가-바꾼-생체인식-시장" class="headerlink" title="1. 아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장"></a>1. 아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=584&aid=0000015618">아이폰에 지문 인식 다시 생기나…코로나19가 바꾼 생체인식 시장</a></p><p>신종 코로나바이러스 감염증(코로나19) 팬데믹(대유행)이 생체인식 시장의 기술 지형을 바꿔놓고 있다. 마스크를 착용한 상태에서 페이스ID가 작동하지 않는 데 따른 불편함을 해소하기 위해서 애플은 다음 달 출시할 새로운 아이폰 모델에 지문인식을 다시 탑재할 것이라는 소문이 파다하다. </p><p>개인이 사용하는 스마트폰을 제외한 분야에서는 코로나19로 비접촉식 인증 방식에 대한 수요가 폭증하면서 안면 인식 기술이 생체인식 시장을 점령하고 있다.  NEC가 올해 도쿄 올림픽에 공급한 네오페이스 워치는 인공 신경망 모델을 적용해 2차원 얼굴 이미지를 3차원으로 전환해 인식하며, 0.3초 만에 160만 개의 얼굴을 검사할 수 있다. 정확도는 99.7%다.</p><hr><h2 id="2-도미노피자-주문하면-드론으로-배송한다"><a href="#2-도미노피자-주문하면-드론으로-배송한다" class="headerlink" title="2. 도미노피자, 주문하면 드론으로 배송한다"></a>2. 도미노피자, 주문하면 드론으로 배송한다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=092&aid=0002231218">도미노피자, 주문하면 드론으로 배송한다</a></p><p><img src="https://imgnews.pstatic.net/image/092/2021/08/20/0002231218_001_20210820111108190.jpg?type=w647" alt="피자배달 드론과 착륙대"></p><p>국토교통부는 드론업체 피스퀘어와 글로벌 피자 체인 도미노피자와 협업해 세종시에서 21일부터 피자 드론 배송 상용화 서비스를 개시한다고 밝혔으며, 드론배송 상용화 구간은 도미노피자 세종보람점에서 세종호수공원까지로 21일부터 10월 31일까지 토요일과 일요일 오후 1시부터 6시까지 시간당 2~3회로 예상하고 있다..</p><p>그동안 국토부는 드론 산업 육성을 위해 ▲드론 특별자유화구역(33개 구역 지정) ▲드론 규제 샌드박스 사업(13개 업체) ▲드론 실증도시(10개 도시) 지정 등 드론을 활용한 서비스를 개발하고 실증하는데 집중해 왔으며 특히, 국내기술로 개발된 드론의 국제 경쟁력 강화와 신서비스 창출을 위해 제도완화, 자금지원, 수요-공급 매칭 등 체계적인 지원을 하고 있다.</p><hr><h2 id="3-OTT온에어-디즈니-한국-진출…풀어야-할-규제-산적"><a href="#3-OTT온에어-디즈니-한국-진출…풀어야-할-규제-산적" class="headerlink" title="3. [OTT온에어] 디즈니+ 한국 진출…풀어야 할 규제 산적"></a>3. [OTT온에어] 디즈니+ 한국 진출…풀어야 할 규제 산적</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=031&aid=0000619684">[OTT온에어] 디즈니+ 한국 진출…풀어야 할 규제 산적</a></p><p>디즈니플러스가 올 11월 국내 시장 진출을 본격화함에 따라 관련 업계에서는 현재 국내 OTT 시장 쟁점인 망 사용료, 음악 저작권료 문제를 어떻게 풀어갈지 관심이다.</p><p>디즈니는 국내 통신사에 콘텐츠 전송 네트워크(CDN)사업자를 통해 일종의 ‘망 사용료’를 지불하는 것으로 나타났다. CDN은 다양한 데이터를 미리 저장해 놓거나, 전송방식을 효율화해 최적의 경로로 사용자에 콘텐츠를 전달하는 서비스다.</p><p>디즈니플러스 콘텐츠에 쓰인 음악은 신탁단체에 신탁하지 않는 업무상 저작물이 대부분인 것이 넷플릭스·국내 OTT와 차이점이다. 그러나 디즈니플러스가 현지화를 위해 조달할 국내 오리지널 콘텐츠에 대해서는 신탁단체를 통한 저작권료 징수가 발생할 것으로 보인다. 디즈니플러스는 지난 4월 미디어 그룹 NEW의 콘텐츠 제작사업 계열사 스튜디오앤뉴와 5년간 장기 콘텐츠 파트너십을 맺었다. 이를 통해 양사는 매년 한편 이상의 오리지널 시리즈와 콘텐츠를 선보이기 위해 협력하기로 했다.</p><hr><h2 id="4-SKT-이프랜드-오픈-메타버스-플랫폼으로…-마켓-시스템∙공간제작-기능-등-적용"><a href="#4-SKT-이프랜드-오픈-메타버스-플랫폼으로…-마켓-시스템∙공간제작-기능-등-적용" class="headerlink" title="4. SKT 이프랜드, 오픈 메타버스 플랫폼으로… 마켓 시스템∙공간제작 기능 등 적용"></a>4. SKT 이프랜드, 오픈 메타버스 플랫폼으로… 마켓 시스템∙공간제작 기능 등 적용</h2><p><a href="https://platum.kr/archives/169316">SKT 이프랜드, 오픈 메타버스 플랫폼으로… 마켓 시스템∙공간제작 기능 등 적용</a></p><p><img src="https://platum.kr/wp-content/uploads/2021/08/ifland.jpg"></p><p>SK텔레콤이 19일 메타버스 공간에서 기자 간담회를 열고 ‘이프랜드(ifland)’를 통한 메타버스 청사진을 발표했다. 이프랜드는 SKT가 선보이는 메타버스 플랫폼으로 앞으로 마켓 시스템 및 공간제작 플랫폼 등을 적용하고 대학축제·K팝 팬미팅 등 대형 이벤트 등을 통해 코로나19 시대 비대면 트렌드를 주도한다는 계획이다.</p><hr><h2 id="5-7월-한국인이-가장-많이-쓴-금융-앱-삼성페이…자주-쓴-앱-업비트"><a href="#5-7월-한국인이-가장-많이-쓴-금융-앱-삼성페이…자주-쓴-앱-업비트" class="headerlink" title="5. 7월 한국인이 가장 많이 쓴 금융 앱 삼성페이…자주 쓴 앱 업비트"></a>5. 7월 한국인이 가장 많이 쓴 금융 앱 삼성페이…자주 쓴 앱 업비트</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=413617">7월 한국인이 가장 많이 쓴 금융 앱 삼성페이…자주 쓴 앱 업비트</a></p><p>삼성전자 모바일 결제 서비스 삼성페이가 한국에서 가장 많이 쓰는 금융앱이라는 조사 결과가 나왔다.</p><p>7월에 가장 자주 실행한 금융 앱은 ‘업비트’로 실행횟수가 26.1억회로 조사됐고, 토스 11.3억회, 카카오뱅크 8.8억회, 키움증권 영웅문S 7.8억회, 모바일증권 나무 6.6억회, 삼성페이 5.4억회, 증권통 5.1억회, 신한 쏠 5.0억회 순이었다.</p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202108/413617_407173_383.jpg"></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202108/413617_407174_3818.jpg"></p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%84%EC%9D%B4%ED%8F%B0/">아이폰</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%94%94%EC%A6%88%EB%8B%88%ED%94%8C%EB%9F%AC%EC%8A%A4/">디즈니플러스</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%94%94%EC%A6%88%EB%8B%88/">디즈니+</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A7%80%EB%AC%B8%EC%9D%B8%EC%8B%9D/">지문인식</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%83%9D%EC%B2%B4%EC%9D%B8%EC%8B%9D/">생체인식</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8F%84%EB%AF%B8%EB%85%B8%ED%94%BC%EC%9E%90/">도미노피자</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%93%9C%EB%A1%A0/">드론</category>
      
      <category domain="https://chlee1001.github.io/tags/SKT/">SKT</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9D%B4%ED%94%84%EB%9E%9C%EB%93%9C/">이프랜드</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%82%BC%EC%84%B1%ED%8E%98%EC%9D%B4/">삼성페이</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%97%85%EB%B9%84%ED%8A%B8/">업비트</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/20/21-08-20-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 18일 수요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/18/21-08-18-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/18/21-08-18-IT_News/</guid>
      <pubDate>Wed, 18 Aug 2021 05:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-“당근하세요-”…50만→1500만명-폭발적-성장&quot;&gt;&lt;a href=&quot;#1-“당근하세요-”…50만→1500만명-폭발적-성장&quot; class=&quot;headerlink&quot; title=&quot;1. “당근하세요?”…50만→1500만명 폭발적 성장&quot;&gt;&lt;/a&gt;1. “당근하세요?”…50만→1500만명 폭발적 성장&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=016&amp;aid=0001875929&quot;&gt;“당근하세요?”…50만→1500만명 폭발적 성장&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgnews.pstatic.net/image/016/2021/08/18/20210818000566_0_20210818134306006.jpg?type=w647&quot; alt=&quot;[당근마켓 제공]&quot;&gt;&lt;/p&gt;
&lt;p&gt;당근마켓이 1800억원 규모의 투자 유치를 마무리하며 유니콘기업 (기업가치 1조원 이상의 비상장 기업) 반열에 올랐으며,  누적 투자액수는 2270억원으로, 투자 유치 과정에서 기업가치 3조원을 인정받았다.&lt;/p&gt;
&lt;p&gt;당근마켓은 신규 투자 자금을 기반으로 하이퍼로컬 혁신을 가속화한다는 방침이며, 지속적인 기술 고도화와 함께 사업 확장을 위한 인력 채용, 해외 시장 진출 확대, 국내외 마케팅 강화 등에 집중하며 로컬 슈퍼앱으로서의 비전을 완성해 나갈 계획이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-“당근하세요-”…50만→1500만명-폭발적-성장"><a href="#1-“당근하세요-”…50만→1500만명-폭발적-성장" class="headerlink" title="1. “당근하세요?”…50만→1500만명 폭발적 성장"></a>1. “당근하세요?”…50만→1500만명 폭발적 성장</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=016&aid=0001875929">“당근하세요?”…50만→1500만명 폭발적 성장</a></p><p><img src="https://imgnews.pstatic.net/image/016/2021/08/18/20210818000566_0_20210818134306006.jpg?type=w647" alt="[당근마켓 제공]"></p><p>당근마켓이 1800억원 규모의 투자 유치를 마무리하며 유니콘기업 (기업가치 1조원 이상의 비상장 기업) 반열에 올랐으며,  누적 투자액수는 2270억원으로, 투자 유치 과정에서 기업가치 3조원을 인정받았다.</p><p>당근마켓은 신규 투자 자금을 기반으로 하이퍼로컬 혁신을 가속화한다는 방침이며, 지속적인 기술 고도화와 함께 사업 확장을 위한 인력 채용, 해외 시장 진출 확대, 국내외 마케팅 강화 등에 집중하며 로컬 슈퍼앱으로서의 비전을 완성해 나갈 계획이다.</p><p>그 일환으로 올 하반기 당근페이와 함께 지역 커머스 강화에 본격 나서고 있으며, 농수산물, 신선식품 등 지역 상권과 주민들을 더욱 긴밀하게 연결하는 온-오프라인 연계 비즈니스 활성화에 힘을 쏟을 예정이다.</p><hr><h2 id="2-네이버-“예스24-인수-완전-사실무근”…예스24-주가는-급등"><a href="#2-네이버-“예스24-인수-완전-사실무근”…예스24-주가는-급등" class="headerlink" title="2. 네이버 “예스24 인수, 완전 사실무근”…예스24 주가는 급등"></a>2. 네이버 “예스24 인수, 완전 사실무근”…예스24 주가는 급등</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=018&aid=0005013809">네이버 “예스24 인수, 완전 사실무근”…예스24 주가는 급등</a></p><p>네이버(035420)가 온라인 문화상품 유통 플랫폼 및 인터넷 서점 사업을 하는 ‘예스24’ 인수 추진 보도에 대해 “완전 사실무근”이라고 밝혔다. 해당 소식이 전해진 후 예스24(053280)는 주가가 급등해 이날 오전 11시35분 현재 전 거래일보다 3500원(21.54%) 오른 1만9750원에 거래됐다.</p><hr><h2 id="3-이슈진단-사업확장-제동-걸린-카카오T·직방·로톡…”소비자-편익-우선”"><a href="#3-이슈진단-사업확장-제동-걸린-카카오T·직방·로톡…”소비자-편익-우선”" class="headerlink" title="3. [이슈진단+] 사업확장 제동 걸린 카카오T·직방·로톡…”소비자 편익 우선”"></a>3. [이슈진단+] 사업확장 제동 걸린 카카오T·직방·로톡…”소비자 편익 우선”</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=092&aid=0002230775">[이슈진단+] 사업확장 제동 걸린 카카오T·직방·로톡…”소비자 편익 우선”</a></p><p>플랫폼 사업자들은 빠르고 쉬운 서비스로 소비자 편의성이 높아지고 기존 사업자와의 상생도 가능하다는 입장과 기존 사업가 단체들은 플랫폼의 업계 진출이 결국 기존 사업가의 수익 감소로 이어질 것을 우려로 갈등이 심화되고 있다.</p><p><strong>로톡</strong>은 그간 변호사 광고, 상담 예약, 온라인 상담, AI 형량 예측 등 법률 서비스를 제공해왔지만, 대한변협은 로톡의 법률 서비스가 플랫폼이 변호사의 업무와 역할을 침해한다며, 지난 5월 ‘변호사 광고에 관한 규정’ 개정안을 내놨다. 로톡 측은 “변호사법을 위반한 적이 없고, 오히려 로톡을 통해 이용자들이 손쉽게 변호사를 찾고 상담하기가 쉬워졌다”는 입장이다. </p><p>부동산 업계에서는 부동산 플랫폼 **’직방’**의 직접 중개를 두고 한국공인중개사협회가 반발하고 있다. 온택트파트너스란, 직방이 공인중개사와 제휴를 맺고 플랫폼상에서 거래 계약까지 성사하는 제도로 직방이 공인중개사의 수수료 절반을 사용료로 받는것으로 중개사협회는 이를 “직방의 직접 중개”라면서 “광고 플랫폼이었던 직방이 사실상 중개까지 나서는 것은 중개사 생존권을 위협하는 것”이라고 주장했다. 수수료 절반을 직방이 가져가는 온택트파트너스 제도가 중개업자의 수익 감소로 이어질 뿐 아니라, 향후 영세 부동산 업체들이 대형 플랫폼인 직방과 경쟁을 해야할 수도 있다는 우려다.</p><p><em>업계 관계자들과 학계는 산업의 디지털 전환은 시대적 흐름이며, 갈등 과정에서 소비자 편익을 우선적으로 고려해야 한다는 목소리를 내놨다.</em></p><p><em>한 IT업계 관계자는 “디지털 전환은 시대적인 흐름”이라며 “변화의 흐름을 무조건 거부할 것이 아니라 어떤 부분이 이점이고 어떤 부분은 변화해야 할지 플랫폼과 업계 양측이 논의를 해나가야 한다”고 제언했다.</em></p><hr>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8B%B9%EA%B7%BC%EB%A7%88%EC%BC%93/">당근마켓</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4T/">카카오T</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%98%88%EC%8A%A424/">예스24</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%94%8C%EB%9E%AB%ED%8F%BC/">플랫폼</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A7%81%EB%B0%A9/">직방</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%A1%9C%ED%86%A1/">로톡</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/18/21-08-18-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 16일 월요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/16/21-08-16-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/16/21-08-16-IT_News/</guid>
      <pubDate>Sun, 15 Aug 2021 21:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-KAIST-보건의료-AI-활용-가이드라인-첫-개발&quot;&gt;&lt;a href=&quot;#1-KAIST-보건의료-AI-활용-가이드라인-첫-개발&quot; class=&quot;headerlink&quot; title=&quot;1. KAIST, 보건의료 AI 활용 가이드라인 첫 개발&quot;&gt;&lt;/a&gt;1. KAIST, 보건의료 AI 활용 가이드라인 첫 개발&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=020&amp;aid=0003376175&quot;&gt;KAIST, 보건의료 AI 활용 가이드라인 첫 개발&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KAIST 한국4차산업혁명정책센터(KPC4IR)는 싱가포르국립대 리스크공공이해연구소, 영국 과학기술 비영리기관인 센스 어바웃 사이언스와 함께 ‘사회를 위한 보건의료 분야 AI 활용 가이드’를 개발했다고 15일 밝혔다.&lt;/p&gt;
&lt;p&gt;이 가이드에는 의료 영상 분석과 빅데이터로 질병 예측, 신약 개발 시간 단축 등 의료 분야의 AI 활용 사례가 담겼으며, AI의 신뢰성을 확보하는 5가지 기준도 담았다. &lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-KAIST-보건의료-AI-활용-가이드라인-첫-개발"><a href="#1-KAIST-보건의료-AI-활용-가이드라인-첫-개발" class="headerlink" title="1. KAIST, 보건의료 AI 활용 가이드라인 첫 개발"></a>1. KAIST, 보건의료 AI 활용 가이드라인 첫 개발</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=020&aid=0003376175">KAIST, 보건의료 AI 활용 가이드라인 첫 개발</a></p><p>KAIST 한국4차산업혁명정책센터(KPC4IR)는 싱가포르국립대 리스크공공이해연구소, 영국 과학기술 비영리기관인 센스 어바웃 사이언스와 함께 ‘사회를 위한 보건의료 분야 AI 활용 가이드’를 개발했다고 15일 밝혔다.</p><p>이 가이드에는 의료 영상 분석과 빅데이터로 질병 예측, 신약 개발 시간 단축 등 의료 분야의 AI 활용 사례가 담겼으며, AI의 신뢰성을 확보하는 5가지 기준도 담았다. </p><hr><h2 id="2-딥브레인AI-텐센트-제치고-中-AI-사업-따내"><a href="#2-딥브레인AI-텐센트-제치고-中-AI-사업-따내" class="headerlink" title="2. 딥브레인AI, 텐센트 제치고 中 AI 사업 따내"></a>2. 딥브레인AI, 텐센트 제치고 中 AI 사업 따내</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=015&aid=0004592042">딥브레인AI, 텐센트 제치고 中 AI 사업 따내</a></p><p>국내 인공지능(AI) 스타트업 딥브레인AI(옛 머니브레인)가 독자 개발한 ‘AI 아나운서’를 중국 대형 방송사인 베이징방송과 칭하이방송에 공급했다. 텐센트 자회사 소고우와의 치열한 경쟁을 뚫었다</p><p><img src="https://imgnews.pstatic.net/image/015/2021/08/15/0004592042_002_20210816004202890.jpg?type=w647"></p><p>딥브레인AI는 AI 아나운서뿐 아니라 영상 합성으로 제작한 아바타가 사람과 대화할 수 있는 기술도 보유하고 있다. 영상 합성에 음성인식, 자연어 처리 등의 기술까지 결합한 기술로, 이 기술로 만든  AI 은행원, AI 직원 등은 간단한 고객 응대·안내가 가능하고 세븐일레븐 무인편의점에 등장한 AI 직원이 딥브레인AI 작품이다.</p><hr><h2 id="3-페이스북-메신저-종단-간-암호화-기능-강화"><a href="#3-페이스북-메신저-종단-간-암호화-기능-강화" class="headerlink" title="3. 페이스북 메신저, 종단 간 암호화 기능 강화"></a>3. 페이스북 메신저, 종단 간 암호화 기능 강화</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=413371">페이스북 메신저, 종단 간 암호화 기능 강화</a></p><p>페이스북 메신저의 음성 및 영상 통화에 종단 간 암호화(End-to-End Encrypted) 기능을 강화했다고 밝혔다.</p><p>페이스북은 페이스북 메신저에서 하루 1억5000만건 이상의 영상 통화가 이뤄지는 만큼 보안 수준을 한층 상향할 필요가 있었다고 설명했으며, 페이스북이 인수한 왓츠앱의 경우 이미 모든 커뮤니케이션 기능에 종단 간 암호화 기능이 적용돼 있으며, 애플 페이스타임이나 줌, 시그널 등 유사 앱 역시 해당 기능을 적용하고 있다.</p><hr><h2 id="4-“올해-국내-IT-인프라-시장-클라우드-비중-50-넘어설-것”"><a href="#4-“올해-국내-IT-인프라-시장-클라우드-비중-50-넘어설-것”" class="headerlink" title="4. “올해 국내 IT 인프라 시장, 클라우드 비중 50% 넘어설 것”"></a>4. “올해 국내 IT 인프라 시장, 클라우드 비중 50% 넘어설 것”</h2><p><a href="http://www.digitaltoday.co.kr/news/articleView.html?idxno=413256">“올해 국내 IT 인프라 시장, 클라우드 비중 50% 넘어설 것”</a></p><p><img src="https://cdn.digitaltoday.co.kr/news/photo/202108/413256_406988_415.jpg" alt="[자료: 한국IDC]"></p><p>올해 클라우드 환경으로 도입되는 IT인프라가 전체 시장에서 차지하는 비중이 50%를 넘어설 것이란 조사 결과가 나왔다.</p><p>이번 보고서에 따르면, 최근 국내 기업들은 보다 유연하고 민첩한 비즈니스를 지원하기 위해 전통적인 IT인프라 기반 시스템 환경에서 퍼블릭 및 프라이빗 클라우드 환경으로 전환하는 추세로 복잡해지는 고객 요구사항과 꾸준히 증가하는 컴퓨팅 리소스 및 데이터에 대한 효율적 관리 필요성이 클라우드로의 전환을 가속화시키고 있다는 것이 한국IDC 분석이다.</p><p>코로나19 팬데믹 상황이 장기화되는 것도 국내 기업들이 디지털화에 속도를 내도록 하는 요인으로 클라우드로의 전환에 보수적이었던 금융권에서는 프라이빗 클라우드 뿐만 아니라 퍼블릭 클라우드에 대한 관심도 높아지고 있으며, 정부 클라우드 장려 정책도 국내 생태계를 강하게 만들고 있다고 한국IDC는 전했다.</p><hr><h2 id="5-“인공지능-발명가-인정하라”-역사적-특허청원-결실"><a href="#5-“인공지능-발명가-인정하라”-역사적-특허청원-결실" class="headerlink" title="5. “인공지능 발명가 인정하라” 역사적 특허청원 결실"></a>5. “인공지능 발명가 인정하라” 역사적 특허청원 결실</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=009&aid=0004838565">“인공지능 발명가 인정하라” 역사적 특허청원 결실</a></p><p>스스로 발명을 할 수 있는 인공지능(AI)을 개발해 전 세계 특허청을 상대로 AI를 발명가로 등록시키려고 하는  AI 다부스를 개발한 스티븐 세일러 이매지네이션엔진스 대표는 지난달 남아프리카공화국이 AI에 특허를 부여했고 이달 호주 연방법원이 “AI도 발명가 자격이 있다”고 발표했다.</p><p>상당수 국가의 법률상 발명자 지위는 자연인인 사람만 누릴 수 있으며, 한국 특허청도 올해 6월 다부스의 특허출원 심사에서 ‘자연인으로 발명자를 수정하라’는 보정 요구서를 보냈다. </p><p>세일러 대표는 인공지능의 미래에 대해 “인공지능이 발명에 개입하면서 사람 역할이 줄어들고 우리 사회는 중대한 영향을 받을 것”이라고 내다봤으며 그는 “다부스는 사람의 마음이 어떻게 작동하는지 잘 보여준다”면서 “다부스는 특허 이슈를 떠나 철학적인 논쟁을 불러일으키고 있다”고 말했고 세일러 대표는 “코페르니쿠스의 지동설이 신학에서 과학으로 전환하는 것을 의미했듯이, 인공지능이 발명을 시작하는 것을 계기로 마음에 대한 개념도 궁극적으로 바뀔 것”이라고 말했다.</p>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5/">인공지능</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C/">클라우드</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%9D%B4%EC%8A%A4%ED%8A%B8/">카이스트</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B6%81/">페이스북</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%99%93%EC%B8%A0%EC%95%B1/">왓츠앱</category>
      
      <category domain="https://chlee1001.github.io/tags/KAIST/">KAIST</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B3%B4%EA%B1%B4%EC%9D%98%EB%A3%8C/">보건의료</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%94%A5%EB%B8%8C%EB%A0%88%EC%9D%B8AI/">딥브레인AI</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%9C%EB%AA%85%EA%B0%80/">발명가</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%8B%A4%EB%B6%80%EC%8A%A4/">다부스</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/16/21-08-16-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 1449번 수리공 항승</title>
      <link>https://chlee1001.github.io/2021/08/15/BAEKJOON-1449-21-08-15/</link>
      <guid>https://chlee1001.github.io/2021/08/15/BAEKJOON-1449-21-08-15/</guid>
      <pubDate>Sun, 15 Aug 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/1449&quot;&gt;[백준] 1449번 수리공 항승&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;128 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;9710&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3852&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3261&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;39.619%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/1449">[백준] 1449번 수리공 항승</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">2 초</td><td align="left">128 MB</td><td align="left">9710</td><td align="left">3852</td><td align="left">3261</td><td align="left">39.619%</td></tr></tbody></table><hr><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>항승이는 품질이 심각하게 나쁜 수도 파이프 회사의 수리공이다. 항승이는 세준 지하철 공사에서 물이 샌다는 소식을 듣고 수리를 하러 갔다.</p><p>파이프에서 물이 새는 곳은 신기하게도 가장 왼쪽에서 정수만큼 떨어진 거리만 물이 샌다.</p><p>항승이는 길이가 L인 테이프를 무한개 가지고 있다.</p><p>항승이는 테이프를 이용해서 물을 막으려고 한다. 항승이는 항상 물을 막을 때, 적어도 그 위치의 좌우 0.5만큼 간격을 줘야 물이 다시는 안 샌다고 생각한다.</p><p>물이 새는 곳의 위치와, 항승이가 가지고 있는 테이프의 길이 L이 주어졌을 때, 항승이가 필요한 테이프의 최소 개수를 구하는 프로그램을 작성하시오. 테이프를 자를 수 없고, 테이프를 겹쳐서 붙이는 것도 가능하다.</p><hr><h2 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h2><p>첫째 줄에 물이 새는 곳의 개수 N과 테이프의 길이 L이 주어진다. 둘째 줄에는 물이 새는 곳의 위치가 주어진다. N과 L은 1,000보다 작거나 같은 자연수이고, 물이 새는 곳의 위치는 1,000보다 작거나 같은 자연수이다.</p><hr><h2 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h2><p>첫째 줄에 항승이가 필요한 테이프의 개수를 출력한다.</p><hr><h2 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 2 100 101</span><br></pre></td></tr></table></figure><h2 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><hr><h2 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h2><ul><li>문제를 번역한 사람: <a href="https://www.acmicpc.net/user/baekjoon">baekjoon</a></li><li>문제의 오타를 찾은 사람: <a href="https://www.acmicpc.net/user/rainshot">rainshot</a></li><li>잘못된 데이터를 찾은 사람: <a href="https://www.acmicpc.net/user/tncks0121">tncks0121</a></li></ul><hr><h2 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h2><ul><li><a href="https://www.acmicpc.net/problem/tag/33">그리디 알고리즘</a></li><li><a href="https://www.acmicpc.net/problem/tag/97">정렬</a></li></ul><hr><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N, L = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line">leak_list = <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())))</span><br><span class="line"></span><br><span class="line">distance = leak_list[<span class="number">0</span>] + L - <span class="number">0.5</span></span><br><span class="line">count = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    <span class="keyword">if</span> distance &gt;= leak_list[i]:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        distance = leak_list[i] + L - <span class="number">0.5</span></span><br><span class="line"><span class="built_in">print</span>(count)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A0%95%EB%A0%AC/">정렬</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">그리디알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/">그리디</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/15/BAEKJOON-1449-21-08-15/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2021년 08월 13일 금요일 IT뉴스</title>
      <link>https://chlee1001.github.io/2021/08/13/21-08-13-IT_News/</link>
      <guid>https://chlee1001.github.io/2021/08/13/21-08-13-IT_News/</guid>
      <pubDate>Fri, 13 Aug 2021 08:00:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1-디즈니-예상-뛰어넘는-실적…테마파크-개장·디즈니-효과&quot;&gt;&lt;a href=&quot;#1-디즈니-예상-뛰어넘는-실적…테마파크-개장·디즈니-효과&quot; class=&quot;headerlink&quot; title=&quot;1. 디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과&quot;&gt;&lt;/a&gt;1. 디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://news.naver.com/main/read.naver?mode=LSD&amp;mid=shm&amp;sid1=105&amp;oid=003&amp;aid=0010663505&quot;&gt;디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;디즈니가 테마파크 재개장과 스트리밍 서비스 호조에 힘입어 예상을 뛰어넘는 2분기 실적을 기록했고, 2분기 매출은 170억달러(약 19조8500억원)로, 작년 동기 대비 45% 상승했다. 월가 예상을 뛰어넘는 수치에 디즈니 주가는 시간외거래에서 4% 올랐다.&lt;/p&gt;
&lt;p&gt;전 세계 모든 디즈니 테마파크가 문을 연 덕분에 테마파크는 2분기에만 43억달러(약 5조172억원)를 벌어들였고, 디즈니의 스트리밍 서비스인 디즈니플러스(Disney+)는 2분기에 월가 추정치를 상회하는 가입자 1억1600만명을 기록했다.&lt;/p&gt;
&lt;hr&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1-디즈니-예상-뛰어넘는-실적…테마파크-개장·디즈니-효과"><a href="#1-디즈니-예상-뛰어넘는-실적…테마파크-개장·디즈니-효과" class="headerlink" title="1. 디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과"></a>1. 디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=003&aid=0010663505">디즈니, 예상 뛰어넘는 실적…테마파크 개장·디즈니+ 효과</a></p><p>디즈니가 테마파크 재개장과 스트리밍 서비스 호조에 힘입어 예상을 뛰어넘는 2분기 실적을 기록했고, 2분기 매출은 170억달러(약 19조8500억원)로, 작년 동기 대비 45% 상승했다. 월가 예상을 뛰어넘는 수치에 디즈니 주가는 시간외거래에서 4% 올랐다.</p><p>전 세계 모든 디즈니 테마파크가 문을 연 덕분에 테마파크는 2분기에만 43억달러(약 5조172억원)를 벌어들였고, 디즈니의 스트리밍 서비스인 디즈니플러스(Disney+)는 2분기에 월가 추정치를 상회하는 가입자 1억1600만명을 기록했다.</p><hr><h2 id="2-비난-여론에-한발-물러선-카카오-택시·바이크-요금-다시-내린다"><a href="#2-비난-여론에-한발-물러선-카카오-택시·바이크-요금-다시-내린다" class="headerlink" title="2. 비난 여론에 한발 물러선 카카오, 택시·바이크 요금 다시 내린다"></a>2. 비난 여론에 한발 물러선 카카오, 택시·바이크 요금 다시 내린다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=629&aid=0000100599">비난 여론에 한발 물러선 카카오, 택시·바이크 요금 다시 내린다</a></p><p>앞서 카카오모빌리티는 지난 2일부터 ‘스마트호출’ 비용을 기존 1000원(야간 2000원) 정액제에서 ‘0~5000원’의 탄력요금제로 변경했으나 독점적인 지위를 바탕으로 일방적인 서비스 요금 인상을 단행한다는 비판 목소리가 택시 업계 및 이용자를 중심으로 커졌고 ‘스마트호출’의 요금 범위를 ‘0~2000원’으로 재조정한다고 13일 공지했다.</p><p>이날 카카오모빌리티는 바이크 요금도 중장거리 이용자의 부담이 커진다는 의견에 따라 이용자 부담이 늘지 않는 방향으로 재조정할 예정이라고 발표했다. 구체적인 내용은 결정되면 별도 공지를 통해 안내할 계획이다.</p><hr><h2 id="3-MG새마을금고중앙회-RPA-도입으로-업무-혁신-꿈꾼다"><a href="#3-MG새마을금고중앙회-RPA-도입으로-업무-혁신-꿈꾼다" class="headerlink" title="3. MG새마을금고중앙회, RPA 도입으로 업무 혁신 꿈꾼다"></a>3. MG새마을금고중앙회, RPA 도입으로 업무 혁신 꿈꾼다</h2><p><a href="https://news.naver.com/main/read.naver?mode=LSD&mid=shm&sid1=105&oid=020&aid=0003375929">MG새마을금고중앙회, RPA 도입으로 업무 혁신 꿈꾼다</a></p><p>RPA 소프트웨어는 컴퓨터가 특정한 알고리즘으로 동작하도록 구성하며, 정량적 데이터를 다루는 분야일수록 정확도와 활용도가 높아서 금융업계의 관심도 높았지만, 보안이나 개인정보 등의 문제로 초기 도입부터 실용화 단계까지 오랜 시간과 노력이 필요해 경영진의 확실한 의사가 있어야 RPA를 추진할 수 있다. </p><p>현재 MG새마을금고중앙회는 계정계 시스템에서 보고서 작성, 자료 검증작업, 예탁금 처리, 회계 결산 등의 업무에 RPA를 도입한 상태로 보고서 작성의 경우, 업무 화면을 조회하고 결과 자료를 엑셀로 다운로드한 후 편집하는 모든 과정이 RPA를 통해 자동으로 진행된다.</p><p>업무 가능 범위도 단순 보고서화를 넘어서 PPT 파일, 워드 파일 작성 등 모든 작업이 가능해 기존에 하루가 걸리던 작업이 1~2시간 이내에 완료할 수 있게 됐으며 RPA를 활용해 내부망 시스템에 쌓인 보안 자료를 정리하는 ‘클린봇’이나 보안 패스워드를 관리하는 ‘패스워드봇’ 등을 구축하는 등 활용 범위를 확장하고 있다.</p><ul><li>RPA(Robotic Process Automation, 로봇 프로세스 자동화)</li><li>유아이패스는 RPA(Robotic Process Automation, 로봇 프로세스 자동화) 소프트웨어를 개발하는 전문 기업으로, 일반인들에게는 생소하지만 ICT 기술을 활용하는 기업들 사이에서는 널리 알려져 있다.</li></ul><hr><h2 id="4-DGB금융그룹-핀테크사-뉴지스탁-인수…-10번째-자회사-편입"><a href="#4-DGB금융그룹-핀테크사-뉴지스탁-인수…-10번째-자회사-편입" class="headerlink" title="4. DGB금융그룹, 핀테크사 뉴지스탁 인수… 10번째 자회사 편입"></a>4. DGB금융그룹, 핀테크사 뉴지스탁 인수… 10번째 자회사 편입</h2><p><a href="https://platum.kr/archives/168773">DGB금융그룹, 핀테크사 뉴지스탁 인수… 10번째 자회사 편입</a></p><p>DGB금융그룹이 핀테크 기업인 뉴지스탁(대표 문경록, 문호준)의 지분 74.03%를 인수해 그룹의 10번째 자회사로 편입한다. 국내 금융그룹이 핀테크사를 인수한 최초의 사례이다.</p><p>뉴지스탁 문경록 대표는 “핀테크 서비스와 제도권 금융업의 경계가 허물어지고 있는 이 시기에, 핀테크 스타트업 최초로 10대 금융지주 중 하나인 DGB금융그룹과 함께하게 되어 큰 기대를 하고 있으며”, DGB금융그룹 김태오 회장은 “뉴지스탁 인수를 통해 그룹의 디지털 자산관리 경쟁력을 대폭 업그레이드하고 핀테크 산업 활성화에 기여할 수 있을 것으로 기대한다”고 밝혔다.</p><ul><li>뉴지스탁은 ‘개인투자자도 수익을 낼 수 있는 환경을 만들자’는 가치를 내걸고 2011년 설립됐으며, 현재 10만명 이상의 고객을 확보하고 12개 주요 증권사들과 제휴하고 있는 국내 1위의 알고리즘 주식투자 플랫폼 기업이다.</li></ul><hr>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/">IT정보</category>
      
      <category domain="https://chlee1001.github.io/categories/IT%EC%A0%95%EB%B3%B4/%EB%A7%A4%EC%9D%BC30%EB%B6%84-IT%EB%89%B4%EC%8A%A4/">매일30분 IT뉴스</category>
      
      
      <category domain="https://chlee1001.github.io/tags/IT%EB%89%B4%EC%8A%A4/">IT뉴스</category>
      
      <category domain="https://chlee1001.github.io/tags/IT-Issues/">IT Issues</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4/">카카오</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85/">스타트업</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%94%94%EC%A6%88%EB%8B%88/">디즈니</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%EB%AA%A8%EB%B9%8C%EB%A6%AC%ED%8B%B0/">카카오모빌리티</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%94%94%EC%A6%88%EB%8B%88%ED%94%8C%EB%9F%AC%EC%8A%A4/">디즈니플러스</category>
      
      <category domain="https://chlee1001.github.io/tags/%ED%95%80%ED%85%8C%ED%81%AC/">핀테크</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%EB%B0%94%EC%9D%B4%ED%81%AC/">카카오바이크</category>
      
      <category domain="https://chlee1001.github.io/tags/RPA/">RPA</category>
      
      <category domain="https://chlee1001.github.io/tags/MG%EC%83%88%EB%A7%88%EC%9D%84%EA%B8%88%EA%B3%A0%EC%A4%91%EC%95%99%ED%9A%8C/">MG새마을금고중앙회</category>
      
      <category domain="https://chlee1001.github.io/tags/DGB%EA%B8%88%EC%9C%B5%EA%B7%B8%EB%A3%B9/">DGB금융그룹</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/13/21-08-13-IT_News/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 11497번 통나무 건너뛰기</title>
      <link>https://chlee1001.github.io/2021/08/13/BAEKJOON-11497-21-08-13/</link>
      <guid>https://chlee1001.github.io/2021/08/13/BAEKJOON-11497-21-08-13/</guid>
      <pubDate>Fri, 13 Aug 2021 01:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/11497&quot;&gt;[백준] 11497번 통나무 건너뛰기&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;1 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;256 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3887&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2184&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1803&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;59.643%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/11497">[백준] 11497번 통나무 건너뛰기</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">1 초</td><td align="left">256 MB</td><td align="left">3887</td><td align="left">2184</td><td align="left">1803</td><td align="left">59.643%</td></tr></tbody></table><hr><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>남규는 통나무를 세워 놓고 건너뛰기를 좋아한다. 그래서 N개의 통나무를 원형으로 세워 놓고 뛰어놀려고 한다. 남규는 원형으로 인접한 옆 통나무로 건너뛰는데, 이때 각 인접한 통나무의 높이 차가 최소가 되게 하려 한다.</p><p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11497/1.png" alt="img"></p><p>통나무 건너뛰기의 난이도는 인접한 두 통나무 간의 높이의 차의 최댓값으로 결정된다. 높이가 {2, 4, 5, 7, 9}인 통나무들을 세우려 한다고 가정하자. 이를 [2, 9, 7, 4, 5]의 순서로 세웠다면, 가장 첫 통나무와 가장 마지막 통나무 역시 인접해 있다. 즉, 높이가 2인 것과 높이가 5인 것도 서로 인접해 있다. 배열 [2, 9, 7, 4, 5]의 난이도는 |2-9| = 7이다. 우리는 더 나은 배열 [2, 5, 9, 7, 4]를 만들 수 있으며 이 배열의 난이도는 |5-9| = 4이다. 이 배열보다 난이도가 낮은 배열은 만들 수 없으므로 이 배열이 남규가 찾는 답이 된다.</p><hr><h2 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h2><p>입력은 T개의 테스트 케이스로 이루어져 있다. 첫 줄에 T가 주어진다.</p><p>이어지는 각 줄마다 첫 줄에 통나무의 개수를 나타내는 정수 N(5 ≤ N ≤ 10,000), 둘째 줄에 각 통나무의 높이를 나타내는 정수 Li가 주어진다. (1 ≤ Li ≤ 100,000)</p><hr><h2 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h2><p>각 테스트 케이스마다 한 줄에 주어진 통나무들로 만들 수 있는 최소 난이도를 출력하시오.</p><hr><h2 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">7</span><br><span class="line">13 10 12 11 10 11 12</span><br><span class="line">5</span><br><span class="line">2 4 5 7 9</span><br><span class="line">8</span><br><span class="line">6 6 6 6 6 6 6 6</span><br></pre></td></tr></table></figure><h2 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br><span class="line">0</span><br></pre></td></tr></table></figure><hr><h2 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h2><ul><li><a href="https://www.acmicpc.net/category/1">ICPC</a> &gt; <a href="https://www.acmicpc.net/category/7">Regionals</a> &gt; <a href="https://www.acmicpc.net/category/42">Asia Pacific</a> &gt; <a href="https://www.acmicpc.net/category/211">Korea</a> &gt; <a href="https://www.acmicpc.net/category/detail/1413">Asia Regional - Daejeon 2015</a> E번<ul><li>문제를 번역한 사람: <a href="https://www.acmicpc.net/user/kks227">kks227</a></li><li>문제의 오타를 찾은 사람: <a href="https://www.acmicpc.net/user/ntopia">ntopia</a></li></ul></li></ul><hr><h2 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h2><ul><li><a href="https://www.acmicpc.net/problem/tag/33">그리디 알고리즘</a></li><li><a href="https://www.acmicpc.net/problem/tag/97">정렬</a></li></ul><hr><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">T = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lowLevelSort</span>(<span class="params">trees</span>):</span></span><br><span class="line">    new_trees = [<span class="number">0</span>] * <span class="built_in">len</span>(trees)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(trees)):</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            new_trees[i // <span class="number">2</span>] = trees[i]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            new_trees[<span class="built_in">len</span>(trees) - (i // <span class="number">2</span> + <span class="number">1</span>)] = trees[i]</span><br><span class="line">    <span class="keyword">return</span> new_trees</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(T):</span><br><span class="line">    N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    log_trees = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">    log_trees = lowLevelSort(<span class="built_in">sorted</span>(log_trees))</span><br><span class="line"></span><br><span class="line">    max_level = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N - <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(log_trees[i] - log_trees[i + <span class="number">1</span>]) &gt; max_level:</span><br><span class="line">            max_level = <span class="built_in">abs</span>(log_trees[i] - log_trees[i + <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(log_trees[-<span class="number">1</span>] - log_trees[<span class="number">0</span>]) &gt; max_level:</span><br><span class="line">        max_level = <span class="built_in">abs</span>(log_trees[-<span class="number">1</span>] - log_trees[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(max_level)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EC%A0%95%EB%A0%AC/">정렬</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">그리디알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/">그리디</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/13/BAEKJOON-11497-21-08-13/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[백준] 14659번 한조서열정리하고옴ㅋㅋ</title>
      <link>https://chlee1001.github.io/2021/08/11/BAEKJOON-14659-21-08-11/</link>
      <guid>https://chlee1001.github.io/2021/08/11/BAEKJOON-14659-21-08-11/</guid>
      <pubDate>Wed, 11 Aug 2021 14:26:50 GMT</pubDate>
      
      <description>&lt;p&gt;출처: &lt;a href=&quot;https://www.acmicpc.net/problem/14659&quot;&gt;[백준] 14659번 한조서열정리하고옴ㅋㅋ&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;시간 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;메모리 제한&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;제출&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;맞은 사람&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;정답 비율&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2 초&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;256 MB&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;4488&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1959&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1548&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;43.180%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>출처: <a href="https://www.acmicpc.net/problem/14659">[백준] 14659번 한조서열정리하고옴ㅋㅋ</a> </p><hr><table><thead><tr><th align="left">시간 제한</th><th align="left">메모리 제한</th><th align="left">제출</th><th align="left">정답</th><th align="left">맞은 사람</th><th align="left">정답 비율</th></tr></thead><tbody><tr><td align="left">2 초</td><td align="left">256 MB</td><td align="left">4488</td><td align="left">1959</td><td align="left">1548</td><td align="left">43.180%</td></tr></tbody></table><hr><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>“반갑다. 내 이름은 반고흐#31555! 조선 최고의 활잡이지. 오늘도 난 금강산 위에서 적들을 노리고 있지. 내 앞에 있는 적들이라면 누구도 놓치지 않아! 좋아, 이제 곧 월식이 시작되는군. 월식이 시작되면 용이 적들을 집어삼킬 것이다. 잘 봐두어라! 마장동 활잡이 반고흐#31555님의 실력을-!”</p><p>반고흐#31555는 자기 뒤쪽 봉우리에 덩기#3958이 있음을 전혀 모르고 있었다. 덩기#3958도 반고흐#31555와 마찬가지로 월식이 시작되면 용을 불러내어 눈앞에 있는 다른 활잡이들을 모두 처치할 생각이다. 사실, 반고흐#31555와 덩기#3958 뿐만 아니라 금강 산맥의 N개 봉우리에 있는 모든 활잡이들이 같은 생각을 가지고 있다.</p><p>반고흐#31555가 있는 금강 산맥에는 총 N개의 봉우리가 있고, 모든 봉우리마다 한 명의 활잡이가 서서 월식이 시작되기만을 기다리고 있다. 다만, 애석하게도, 천계에 맥도날드가 생겨 용들이 살이 찐 탓에 용들은 자신보다 낮은 봉우리에 서있는 적들만 처치할 수 있게 되었다. 또한 용들은 처음 출발한 봉우리보다 높은 봉우리를 만나면 그대로 공격을 포기하고 금강산자락에 드러누워 낮잠을 청한다고 한다. 봉우리의 높이는 모두 다르고 모든 용들은 오른쪽으로만 나아가며, 중간에 방향을 틀거나, 봉우리가 무너지거나 솟아나는 경우는 없다.</p><p>“달에 마구니가 끼었구나.”</p><p>드디어 월식이 시작됐다! 과연 이들 활잡이 중 최고의 활잡이는 누구일까? 최고의 활잡이가 최대 몇 명의 적을 처치할 수 있는지 알아보자.</p><hr><h2 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h2><p>첫째 줄에 봉우리의 수 겸 활잡이의 수 N이 주어진다. (1 ≤ N ≤ 30,000) 둘째 줄에 N개 봉우리의 높이가 왼쪽 봉우리부터 순서대로 주어진다. (1 ≤ 높이 ≤ 100,000) 각각 봉우리의 높이는 중복 없이 유일하다.</p><hr><h2 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h2><p>최고의 활잡이가 처치할 수 있는 적의 최대 숫자를 출력한다.</p><hr><h2 id="예제-입력-1"><a href="#예제-입력-1" class="headerlink" title="예제 입력 1"></a>예제 입력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">6 4 10 2 5 7 11</span><br></pre></td></tr></table></figure><h2 id="예제-출력-1"><a href="#예제-출력-1" class="headerlink" title="예제 출력 1"></a>예제 출력 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><hr><h2 id="힌트"><a href="#힌트" class="headerlink" title="힌트"></a>힌트</h2><p>높이 10 봉우리에 있는 활잡이가 높이 2, 5, 7 봉우리에 있는 활잡이들을 처치할 수 있다.</p><hr><h2 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h2><ul><li><a href="https://www.acmicpc.net/category/97">High School</a> &gt; <a href="https://www.acmicpc.net/category/394">선린인터넷고등학교</a> &gt; <a href="https://www.acmicpc.net/category/detail/1749">제1회 천하제일 코딩대회 본선</a> J번<ul><li>데이터를 추가한 사람: <a href="https://www.acmicpc.net/user/YunGoon">YunGoon</a></li></ul></li></ul><hr><h2 id="알고리즘-분류"><a href="#알고리즘-분류" class="headerlink" title="알고리즘 분류"></a>알고리즘 분류</h2><ul><li><a href="https://www.acmicpc.net/problem/tag/33">그리디 알고리즘</a></li></ul><hr><h2 id="소스코드-최초"><a href="#소스코드-최초" class="headerlink" title="소스코드 (최초)"></a>소스코드 (최초)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">archer = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">scores = [<span class="number">0</span>] * N</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, N):</span><br><span class="line">        <span class="keyword">if</span> archer[i] &lt; archer[j]:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            scores[i] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(scores))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="소스코드-수정"><a href="#소스코드-수정" class="headerlink" title="소스코드 (수정)"></a>소스코드 (수정)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">heights = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">maxHeight = <span class="number">0</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> height <span class="keyword">in</span> heights:</span><br><span class="line">    <span class="keyword">if</span> height &gt; maxHeight:</span><br><span class="line">        maxHeight = height</span><br><span class="line">        score = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        score += <span class="number">1</span></span><br><span class="line">    result = <span class="built_in">max</span>(result, score)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/">Algorithm</category>
      
      <category domain="https://chlee1001.github.io/categories/Algorithm/Python/">Python</category>
      
      
      <category domain="https://chlee1001.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://chlee1001.github.io/tags/Python/">Python</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">그리디알고리즘</category>
      
      <category domain="https://chlee1001.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/">그리디</category>
      
      
      <comments>https://chlee1001.github.io/2021/08/11/BAEKJOON-14659-21-08-11/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
